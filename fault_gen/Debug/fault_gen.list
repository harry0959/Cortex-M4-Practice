
fault_gen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000133c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  080014cc  080014cc  000114cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015b8  080015b8  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080015b8  080015b8  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015b8  080015b8  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015b8  080015b8  000115b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015bc  080015bc  000115bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080015c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   000009b8  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000037e  00000000  00000000  00020a87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000130  00000000  00000000  00020e08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000d1  00000000  00000000  00020f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c9b  00000000  00000000  00021009  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000014db  00000000  00000000  00023ca4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000097ee  00000000  00000000  0002517f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b94  00000000  00000000  0002e970  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000045  00000000  00000000  0002f504  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080014b4 	.word	0x080014b4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080014b4 	.word	0x080014b4

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
//2. implement exception handler
//3. generate fault
//4. analyze

int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	b084      	sub	sp, #16
 8000274:	af00      	add	r7, sp, #0
	// System Handler Control and State Register
	uint32_t *pSHCRS = (uint32_t*)0xE000ED24;
 8000276:	4b0f      	ldr	r3, [pc, #60]	; (80002b4 <main+0x44>)
 8000278:	60fb      	str	r3, [r7, #12]

	//18th bit usage fault,17:bus, 16:memory fault
	*pSHCRS |= (1 << 18);
 800027a:	68fb      	ldr	r3, [r7, #12]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8000282:	68fb      	ldr	r3, [r7, #12]
 8000284:	601a      	str	r2, [r3, #0]
	*pSHCRS |= (1 << 17);
 8000286:	68fb      	ldr	r3, [r7, #12]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800028e:	68fb      	ldr	r3, [r7, #12]
 8000290:	601a      	str	r2, [r3, #0]
	*pSHCRS |= (1 << 16);
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800029a:	68fb      	ldr	r3, [r7, #12]
 800029c:	601a      	str	r2, [r3, #0]

	uint32_t *pSRAM = (uint32_t*)0x20010000;
 800029e:	4b06      	ldr	r3, [pc, #24]	; (80002b8 <main+0x48>)
 80002a0:	60bb      	str	r3, [r7, #8]
	*pSRAM = 0xFFFFFFFF;
 80002a2:	68bb      	ldr	r3, [r7, #8]
 80002a4:	f04f 32ff 	mov.w	r2, #4294967295
 80002a8:	601a      	str	r2, [r3, #0]
	void (*pFunc)(void);
	pFunc = (void*)(0x20010001);
 80002aa:	4b04      	ldr	r3, [pc, #16]	; (80002bc <main+0x4c>)
 80002ac:	607b      	str	r3, [r7, #4]
	pFunc();
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	4798      	blx	r3

	for(;;);
 80002b2:	e7fe      	b.n	80002b2 <main+0x42>
 80002b4:	e000ed24 	.word	0xe000ed24
 80002b8:	20010000 	.word	0x20010000
 80002bc:	20010001 	.word	0x20010001

080002c0 <UsageFault_Handler>:

}

__attribute__((naked)) void UsageFault_Handler(void){
	__asm ("MRS R0, MSP");
 80002c0:	f3ef 8008 	mrs	r0, MSP
	__asm ("B UsageFault_Handler_c");
 80002c4:	f000 b802 	b.w	80002cc <UsageFault_Handler_c>
}
 80002c8:	bf00      	nop
	...

080002cc <UsageFault_Handler_c>:

void UsageFault_Handler_c(uint32_t *pBaseStackFrame){
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b084      	sub	sp, #16
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
	//UFSR indicates reason why causes fault
	uint32_t *pUFSR = (uint32_t*)0xE000ED2A;
 80002d4:	4b23      	ldr	r3, [pc, #140]	; (8000364 <UsageFault_Handler_c+0x98>)
 80002d6:	60fb      	str	r3, [r7, #12]

	printf("in usage fault handler\n");
 80002d8:	4823      	ldr	r0, [pc, #140]	; (8000368 <UsageFault_Handler_c+0x9c>)
 80002da:	f000 fa81 	bl	80007e0 <puts>
	printf("UFSR: %lx \n", (*pUFSR) & 0xFFFF);
 80002de:	68fb      	ldr	r3, [r7, #12]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	b29b      	uxth	r3, r3
 80002e4:	4619      	mov	r1, r3
 80002e6:	4821      	ldr	r0, [pc, #132]	; (800036c <UsageFault_Handler_c+0xa0>)
 80002e8:	f000 fa14 	bl	8000714 <iprintf>

	printf("BaseStackFrame : %lx \n", pBaseStackFrame);
 80002ec:	6879      	ldr	r1, [r7, #4]
 80002ee:	4820      	ldr	r0, [pc, #128]	; (8000370 <UsageFault_Handler_c+0xa4>)
 80002f0:	f000 fa10 	bl	8000714 <iprintf>
	printf("R0 : %lx \n", pBaseStackFrame[0]);
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4619      	mov	r1, r3
 80002fa:	481e      	ldr	r0, [pc, #120]	; (8000374 <UsageFault_Handler_c+0xa8>)
 80002fc:	f000 fa0a 	bl	8000714 <iprintf>
	printf("R1 : %lx \n", pBaseStackFrame[1]);
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	3304      	adds	r3, #4
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	4619      	mov	r1, r3
 8000308:	481b      	ldr	r0, [pc, #108]	; (8000378 <UsageFault_Handler_c+0xac>)
 800030a:	f000 fa03 	bl	8000714 <iprintf>
	printf("R2 : %lx \n", pBaseStackFrame[2]);
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	3308      	adds	r3, #8
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	4619      	mov	r1, r3
 8000316:	4819      	ldr	r0, [pc, #100]	; (800037c <UsageFault_Handler_c+0xb0>)
 8000318:	f000 f9fc 	bl	8000714 <iprintf>
	printf("R3 : %lx \n", pBaseStackFrame[3]);
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	330c      	adds	r3, #12
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	4619      	mov	r1, r3
 8000324:	4816      	ldr	r0, [pc, #88]	; (8000380 <UsageFault_Handler_c+0xb4>)
 8000326:	f000 f9f5 	bl	8000714 <iprintf>
	printf("R12 : %lx \n", pBaseStackFrame[4]);
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	3310      	adds	r3, #16
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	4619      	mov	r1, r3
 8000332:	4814      	ldr	r0, [pc, #80]	; (8000384 <UsageFault_Handler_c+0xb8>)
 8000334:	f000 f9ee 	bl	8000714 <iprintf>
	printf("LR : %lx \n", pBaseStackFrame[5]);
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	3314      	adds	r3, #20
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	4619      	mov	r1, r3
 8000340:	4811      	ldr	r0, [pc, #68]	; (8000388 <UsageFault_Handler_c+0xbc>)
 8000342:	f000 f9e7 	bl	8000714 <iprintf>
	printf("PC : %lx \n", pBaseStackFrame[6]);
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	3318      	adds	r3, #24
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4619      	mov	r1, r3
 800034e:	480f      	ldr	r0, [pc, #60]	; (800038c <UsageFault_Handler_c+0xc0>)
 8000350:	f000 f9e0 	bl	8000714 <iprintf>
	printf("XPSR : %lx \n", pBaseStackFrame[7]);
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	331c      	adds	r3, #28
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4619      	mov	r1, r3
 800035c:	480c      	ldr	r0, [pc, #48]	; (8000390 <UsageFault_Handler_c+0xc4>)
 800035e:	f000 f9d9 	bl	8000714 <iprintf>

	for(;;);
 8000362:	e7fe      	b.n	8000362 <UsageFault_Handler_c+0x96>
 8000364:	e000ed2a 	.word	0xe000ed2a
 8000368:	080014cc 	.word	0x080014cc
 800036c:	080014e4 	.word	0x080014e4
 8000370:	080014f0 	.word	0x080014f0
 8000374:	08001508 	.word	0x08001508
 8000378:	08001514 	.word	0x08001514
 800037c:	08001520 	.word	0x08001520
 8000380:	0800152c 	.word	0x0800152c
 8000384:	08001538 	.word	0x08001538
 8000388:	08001544 	.word	0x08001544
 800038c:	08001550 	.word	0x08001550
 8000390:	0800155c 	.word	0x0800155c

08000394 <HardFault_Handler>:
}

void HardFault_Handler(){
 8000394:	b580      	push	{r7, lr}
 8000396:	af00      	add	r7, sp, #0
	printf("in hard fault handler\n");
 8000398:	4801      	ldr	r0, [pc, #4]	; (80003a0 <HardFault_Handler+0xc>)
 800039a:	f000 fa21 	bl	80007e0 <puts>
	while(1);
 800039e:	e7fe      	b.n	800039e <HardFault_Handler+0xa>
 80003a0:	0800156c 	.word	0x0800156c

080003a4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b083      	sub	sp, #12
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	4603      	mov	r3, r0
 80003ac:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003ae:	4b0f      	ldr	r3, [pc, #60]	; (80003ec <ITM_SendChar+0x48>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	4a0e      	ldr	r2, [pc, #56]	; (80003ec <ITM_SendChar+0x48>)
 80003b4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003b8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003ba:	4b0d      	ldr	r3, [pc, #52]	; (80003f0 <ITM_SendChar+0x4c>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	4a0c      	ldr	r2, [pc, #48]	; (80003f0 <ITM_SendChar+0x4c>)
 80003c0:	f043 0301 	orr.w	r3, r3, #1
 80003c4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003c6:	bf00      	nop
 80003c8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	f003 0301 	and.w	r3, r3, #1
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d0f8      	beq.n	80003c8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003d6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003da:	79fb      	ldrb	r3, [r7, #7]
 80003dc:	6013      	str	r3, [r2, #0]
}
 80003de:	bf00      	nop
 80003e0:	370c      	adds	r7, #12
 80003e2:	46bd      	mov	sp, r7
 80003e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e8:	4770      	bx	lr
 80003ea:	bf00      	nop
 80003ec:	e000edfc 	.word	0xe000edfc
 80003f0:	e0000e00 	.word	0xe0000e00

080003f4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003f4:	b580      	push	{r7, lr}
 80003f6:	b086      	sub	sp, #24
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	60f8      	str	r0, [r7, #12]
 80003fc:	60b9      	str	r1, [r7, #8]
 80003fe:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000400:	2300      	movs	r3, #0
 8000402:	617b      	str	r3, [r7, #20]
 8000404:	e00a      	b.n	800041c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000406:	f3af 8000 	nop.w
 800040a:	4601      	mov	r1, r0
 800040c:	68bb      	ldr	r3, [r7, #8]
 800040e:	1c5a      	adds	r2, r3, #1
 8000410:	60ba      	str	r2, [r7, #8]
 8000412:	b2ca      	uxtb	r2, r1
 8000414:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000416:	697b      	ldr	r3, [r7, #20]
 8000418:	3301      	adds	r3, #1
 800041a:	617b      	str	r3, [r7, #20]
 800041c:	697a      	ldr	r2, [r7, #20]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	429a      	cmp	r2, r3
 8000422:	dbf0      	blt.n	8000406 <_read+0x12>
  }

  return len;
 8000424:	687b      	ldr	r3, [r7, #4]
}
 8000426:	4618      	mov	r0, r3
 8000428:	3718      	adds	r7, #24
 800042a:	46bd      	mov	sp, r7
 800042c:	bd80      	pop	{r7, pc}

0800042e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800042e:	b580      	push	{r7, lr}
 8000430:	b086      	sub	sp, #24
 8000432:	af00      	add	r7, sp, #0
 8000434:	60f8      	str	r0, [r7, #12]
 8000436:	60b9      	str	r1, [r7, #8]
 8000438:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043a:	2300      	movs	r3, #0
 800043c:	617b      	str	r3, [r7, #20]
 800043e:	e009      	b.n	8000454 <_write+0x26>
  {
      // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000440:	68bb      	ldr	r3, [r7, #8]
 8000442:	1c5a      	adds	r2, r3, #1
 8000444:	60ba      	str	r2, [r7, #8]
 8000446:	781b      	ldrb	r3, [r3, #0]
 8000448:	4618      	mov	r0, r3
 800044a:	f7ff ffab 	bl	80003a4 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044e:	697b      	ldr	r3, [r7, #20]
 8000450:	3301      	adds	r3, #1
 8000452:	617b      	str	r3, [r7, #20]
 8000454:	697a      	ldr	r2, [r7, #20]
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	429a      	cmp	r2, r3
 800045a:	dbf1      	blt.n	8000440 <_write+0x12>
  }
  return len;
 800045c:	687b      	ldr	r3, [r7, #4]
}
 800045e:	4618      	mov	r0, r3
 8000460:	3718      	adds	r7, #24
 8000462:	46bd      	mov	sp, r7
 8000464:	bd80      	pop	{r7, pc}

08000466 <_close>:

int _close(int file)
{
 8000466:	b480      	push	{r7}
 8000468:	b083      	sub	sp, #12
 800046a:	af00      	add	r7, sp, #0
 800046c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800046e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000472:	4618      	mov	r0, r3
 8000474:	370c      	adds	r7, #12
 8000476:	46bd      	mov	sp, r7
 8000478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047c:	4770      	bx	lr

0800047e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800047e:	b480      	push	{r7}
 8000480:	b083      	sub	sp, #12
 8000482:	af00      	add	r7, sp, #0
 8000484:	6078      	str	r0, [r7, #4]
 8000486:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000488:	683b      	ldr	r3, [r7, #0]
 800048a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800048e:	605a      	str	r2, [r3, #4]
  return 0;
 8000490:	2300      	movs	r3, #0
}
 8000492:	4618      	mov	r0, r3
 8000494:	370c      	adds	r7, #12
 8000496:	46bd      	mov	sp, r7
 8000498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049c:	4770      	bx	lr

0800049e <_isatty>:

int _isatty(int file)
{
 800049e:	b480      	push	{r7}
 80004a0:	b083      	sub	sp, #12
 80004a2:	af00      	add	r7, sp, #0
 80004a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004a6:	2301      	movs	r3, #1
}
 80004a8:	4618      	mov	r0, r3
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr

080004b4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004b4:	b480      	push	{r7}
 80004b6:	b085      	sub	sp, #20
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	60f8      	str	r0, [r7, #12]
 80004bc:	60b9      	str	r1, [r7, #8]
 80004be:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004c0:	2300      	movs	r3, #0
}
 80004c2:	4618      	mov	r0, r3
 80004c4:	3714      	adds	r7, #20
 80004c6:	46bd      	mov	sp, r7
 80004c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004cc:	4770      	bx	lr
	...

080004d0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004d0:	b580      	push	{r7, lr}
 80004d2:	b086      	sub	sp, #24
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004d8:	4a14      	ldr	r2, [pc, #80]	; (800052c <_sbrk+0x5c>)
 80004da:	4b15      	ldr	r3, [pc, #84]	; (8000530 <_sbrk+0x60>)
 80004dc:	1ad3      	subs	r3, r2, r3
 80004de:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004e0:	697b      	ldr	r3, [r7, #20]
 80004e2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004e4:	4b13      	ldr	r3, [pc, #76]	; (8000534 <_sbrk+0x64>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	2b00      	cmp	r3, #0
 80004ea:	d102      	bne.n	80004f2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004ec:	4b11      	ldr	r3, [pc, #68]	; (8000534 <_sbrk+0x64>)
 80004ee:	4a12      	ldr	r2, [pc, #72]	; (8000538 <_sbrk+0x68>)
 80004f0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004f2:	4b10      	ldr	r3, [pc, #64]	; (8000534 <_sbrk+0x64>)
 80004f4:	681a      	ldr	r2, [r3, #0]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	4413      	add	r3, r2
 80004fa:	693a      	ldr	r2, [r7, #16]
 80004fc:	429a      	cmp	r2, r3
 80004fe:	d207      	bcs.n	8000510 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000500:	f000 fa9c 	bl	8000a3c <__errno>
 8000504:	4603      	mov	r3, r0
 8000506:	220c      	movs	r2, #12
 8000508:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800050a:	f04f 33ff 	mov.w	r3, #4294967295
 800050e:	e009      	b.n	8000524 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000510:	4b08      	ldr	r3, [pc, #32]	; (8000534 <_sbrk+0x64>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000516:	4b07      	ldr	r3, [pc, #28]	; (8000534 <_sbrk+0x64>)
 8000518:	681a      	ldr	r2, [r3, #0]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4413      	add	r3, r2
 800051e:	4a05      	ldr	r2, [pc, #20]	; (8000534 <_sbrk+0x64>)
 8000520:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000522:	68fb      	ldr	r3, [r7, #12]
}
 8000524:	4618      	mov	r0, r3
 8000526:	3718      	adds	r7, #24
 8000528:	46bd      	mov	sp, r7
 800052a:	bd80      	pop	{r7, pc}
 800052c:	20020000 	.word	0x20020000
 8000530:	00000400 	.word	0x00000400
 8000534:	20000078 	.word	0x20000078
 8000538:	200001c8 	.word	0x200001c8

0800053c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800053c:	480d      	ldr	r0, [pc, #52]	; (8000574 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800053e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000540:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000544:	480c      	ldr	r0, [pc, #48]	; (8000578 <LoopForever+0x6>)
  ldr r1, =_edata
 8000546:	490d      	ldr	r1, [pc, #52]	; (800057c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000548:	4a0d      	ldr	r2, [pc, #52]	; (8000580 <LoopForever+0xe>)
  movs r3, #0
 800054a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800054c:	e002      	b.n	8000554 <LoopCopyDataInit>

0800054e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800054e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000550:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000552:	3304      	adds	r3, #4

08000554 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000554:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000556:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000558:	d3f9      	bcc.n	800054e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800055a:	4a0a      	ldr	r2, [pc, #40]	; (8000584 <LoopForever+0x12>)
  ldr r4, =_ebss
 800055c:	4c0a      	ldr	r4, [pc, #40]	; (8000588 <LoopForever+0x16>)
  movs r3, #0
 800055e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000560:	e001      	b.n	8000566 <LoopFillZerobss>

08000562 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000562:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000564:	3204      	adds	r2, #4

08000566 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000566:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000568:	d3fb      	bcc.n	8000562 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800056a:	f000 fa6d 	bl	8000a48 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800056e:	f7ff fe7f 	bl	8000270 <main>

08000572 <LoopForever>:

LoopForever:
  b LoopForever
 8000572:	e7fe      	b.n	8000572 <LoopForever>
  ldr   r0, =_estack
 8000574:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000578:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800057c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000580:	080015c0 	.word	0x080015c0
  ldr r2, =_sbss
 8000584:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000588:	200001c8 	.word	0x200001c8

0800058c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800058c:	e7fe      	b.n	800058c <ADC_IRQHandler>
	...

08000590 <std>:
 8000590:	2300      	movs	r3, #0
 8000592:	b510      	push	{r4, lr}
 8000594:	4604      	mov	r4, r0
 8000596:	e9c0 3300 	strd	r3, r3, [r0]
 800059a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800059e:	6083      	str	r3, [r0, #8]
 80005a0:	8181      	strh	r1, [r0, #12]
 80005a2:	6643      	str	r3, [r0, #100]	; 0x64
 80005a4:	81c2      	strh	r2, [r0, #14]
 80005a6:	6183      	str	r3, [r0, #24]
 80005a8:	4619      	mov	r1, r3
 80005aa:	2208      	movs	r2, #8
 80005ac:	305c      	adds	r0, #92	; 0x5c
 80005ae:	f000 f9f7 	bl	80009a0 <memset>
 80005b2:	4b0d      	ldr	r3, [pc, #52]	; (80005e8 <std+0x58>)
 80005b4:	6263      	str	r3, [r4, #36]	; 0x24
 80005b6:	4b0d      	ldr	r3, [pc, #52]	; (80005ec <std+0x5c>)
 80005b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80005ba:	4b0d      	ldr	r3, [pc, #52]	; (80005f0 <std+0x60>)
 80005bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005be:	4b0d      	ldr	r3, [pc, #52]	; (80005f4 <std+0x64>)
 80005c0:	6323      	str	r3, [r4, #48]	; 0x30
 80005c2:	4b0d      	ldr	r3, [pc, #52]	; (80005f8 <std+0x68>)
 80005c4:	6224      	str	r4, [r4, #32]
 80005c6:	429c      	cmp	r4, r3
 80005c8:	d006      	beq.n	80005d8 <std+0x48>
 80005ca:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005ce:	4294      	cmp	r4, r2
 80005d0:	d002      	beq.n	80005d8 <std+0x48>
 80005d2:	33d0      	adds	r3, #208	; 0xd0
 80005d4:	429c      	cmp	r4, r3
 80005d6:	d105      	bne.n	80005e4 <std+0x54>
 80005d8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e0:	f000 ba56 	b.w	8000a90 <__retarget_lock_init_recursive>
 80005e4:	bd10      	pop	{r4, pc}
 80005e6:	bf00      	nop
 80005e8:	080007f1 	.word	0x080007f1
 80005ec:	08000813 	.word	0x08000813
 80005f0:	0800084b 	.word	0x0800084b
 80005f4:	0800086f 	.word	0x0800086f
 80005f8:	2000007c 	.word	0x2000007c

080005fc <stdio_exit_handler>:
 80005fc:	4a02      	ldr	r2, [pc, #8]	; (8000608 <stdio_exit_handler+0xc>)
 80005fe:	4903      	ldr	r1, [pc, #12]	; (800060c <stdio_exit_handler+0x10>)
 8000600:	4803      	ldr	r0, [pc, #12]	; (8000610 <stdio_exit_handler+0x14>)
 8000602:	f000 b869 	b.w	80006d8 <_fwalk_sglue>
 8000606:	bf00      	nop
 8000608:	20000000 	.word	0x20000000
 800060c:	0800133d 	.word	0x0800133d
 8000610:	2000000c 	.word	0x2000000c

08000614 <cleanup_stdio>:
 8000614:	6841      	ldr	r1, [r0, #4]
 8000616:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <cleanup_stdio+0x34>)
 8000618:	4299      	cmp	r1, r3
 800061a:	b510      	push	{r4, lr}
 800061c:	4604      	mov	r4, r0
 800061e:	d001      	beq.n	8000624 <cleanup_stdio+0x10>
 8000620:	f000 fe8c 	bl	800133c <_fflush_r>
 8000624:	68a1      	ldr	r1, [r4, #8]
 8000626:	4b09      	ldr	r3, [pc, #36]	; (800064c <cleanup_stdio+0x38>)
 8000628:	4299      	cmp	r1, r3
 800062a:	d002      	beq.n	8000632 <cleanup_stdio+0x1e>
 800062c:	4620      	mov	r0, r4
 800062e:	f000 fe85 	bl	800133c <_fflush_r>
 8000632:	68e1      	ldr	r1, [r4, #12]
 8000634:	4b06      	ldr	r3, [pc, #24]	; (8000650 <cleanup_stdio+0x3c>)
 8000636:	4299      	cmp	r1, r3
 8000638:	d004      	beq.n	8000644 <cleanup_stdio+0x30>
 800063a:	4620      	mov	r0, r4
 800063c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000640:	f000 be7c 	b.w	800133c <_fflush_r>
 8000644:	bd10      	pop	{r4, pc}
 8000646:	bf00      	nop
 8000648:	2000007c 	.word	0x2000007c
 800064c:	200000e4 	.word	0x200000e4
 8000650:	2000014c 	.word	0x2000014c

08000654 <global_stdio_init.part.0>:
 8000654:	b510      	push	{r4, lr}
 8000656:	4b0b      	ldr	r3, [pc, #44]	; (8000684 <global_stdio_init.part.0+0x30>)
 8000658:	4c0b      	ldr	r4, [pc, #44]	; (8000688 <global_stdio_init.part.0+0x34>)
 800065a:	4a0c      	ldr	r2, [pc, #48]	; (800068c <global_stdio_init.part.0+0x38>)
 800065c:	601a      	str	r2, [r3, #0]
 800065e:	4620      	mov	r0, r4
 8000660:	2200      	movs	r2, #0
 8000662:	2104      	movs	r1, #4
 8000664:	f7ff ff94 	bl	8000590 <std>
 8000668:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800066c:	2201      	movs	r2, #1
 800066e:	2109      	movs	r1, #9
 8000670:	f7ff ff8e 	bl	8000590 <std>
 8000674:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000678:	2202      	movs	r2, #2
 800067a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800067e:	2112      	movs	r1, #18
 8000680:	f7ff bf86 	b.w	8000590 <std>
 8000684:	200001b4 	.word	0x200001b4
 8000688:	2000007c 	.word	0x2000007c
 800068c:	080005fd 	.word	0x080005fd

08000690 <__sfp_lock_acquire>:
 8000690:	4801      	ldr	r0, [pc, #4]	; (8000698 <__sfp_lock_acquire+0x8>)
 8000692:	f000 b9fe 	b.w	8000a92 <__retarget_lock_acquire_recursive>
 8000696:	bf00      	nop
 8000698:	200001bd 	.word	0x200001bd

0800069c <__sfp_lock_release>:
 800069c:	4801      	ldr	r0, [pc, #4]	; (80006a4 <__sfp_lock_release+0x8>)
 800069e:	f000 b9f9 	b.w	8000a94 <__retarget_lock_release_recursive>
 80006a2:	bf00      	nop
 80006a4:	200001bd 	.word	0x200001bd

080006a8 <__sinit>:
 80006a8:	b510      	push	{r4, lr}
 80006aa:	4604      	mov	r4, r0
 80006ac:	f7ff fff0 	bl	8000690 <__sfp_lock_acquire>
 80006b0:	6a23      	ldr	r3, [r4, #32]
 80006b2:	b11b      	cbz	r3, 80006bc <__sinit+0x14>
 80006b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006b8:	f7ff bff0 	b.w	800069c <__sfp_lock_release>
 80006bc:	4b04      	ldr	r3, [pc, #16]	; (80006d0 <__sinit+0x28>)
 80006be:	6223      	str	r3, [r4, #32]
 80006c0:	4b04      	ldr	r3, [pc, #16]	; (80006d4 <__sinit+0x2c>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d1f5      	bne.n	80006b4 <__sinit+0xc>
 80006c8:	f7ff ffc4 	bl	8000654 <global_stdio_init.part.0>
 80006cc:	e7f2      	b.n	80006b4 <__sinit+0xc>
 80006ce:	bf00      	nop
 80006d0:	08000615 	.word	0x08000615
 80006d4:	200001b4 	.word	0x200001b4

080006d8 <_fwalk_sglue>:
 80006d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006dc:	4607      	mov	r7, r0
 80006de:	4688      	mov	r8, r1
 80006e0:	4614      	mov	r4, r2
 80006e2:	2600      	movs	r6, #0
 80006e4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006e8:	f1b9 0901 	subs.w	r9, r9, #1
 80006ec:	d505      	bpl.n	80006fa <_fwalk_sglue+0x22>
 80006ee:	6824      	ldr	r4, [r4, #0]
 80006f0:	2c00      	cmp	r4, #0
 80006f2:	d1f7      	bne.n	80006e4 <_fwalk_sglue+0xc>
 80006f4:	4630      	mov	r0, r6
 80006f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006fa:	89ab      	ldrh	r3, [r5, #12]
 80006fc:	2b01      	cmp	r3, #1
 80006fe:	d907      	bls.n	8000710 <_fwalk_sglue+0x38>
 8000700:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000704:	3301      	adds	r3, #1
 8000706:	d003      	beq.n	8000710 <_fwalk_sglue+0x38>
 8000708:	4629      	mov	r1, r5
 800070a:	4638      	mov	r0, r7
 800070c:	47c0      	blx	r8
 800070e:	4306      	orrs	r6, r0
 8000710:	3568      	adds	r5, #104	; 0x68
 8000712:	e7e9      	b.n	80006e8 <_fwalk_sglue+0x10>

08000714 <iprintf>:
 8000714:	b40f      	push	{r0, r1, r2, r3}
 8000716:	b507      	push	{r0, r1, r2, lr}
 8000718:	4906      	ldr	r1, [pc, #24]	; (8000734 <iprintf+0x20>)
 800071a:	ab04      	add	r3, sp, #16
 800071c:	6808      	ldr	r0, [r1, #0]
 800071e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000722:	6881      	ldr	r1, [r0, #8]
 8000724:	9301      	str	r3, [sp, #4]
 8000726:	f000 fad9 	bl	8000cdc <_vfiprintf_r>
 800072a:	b003      	add	sp, #12
 800072c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000730:	b004      	add	sp, #16
 8000732:	4770      	bx	lr
 8000734:	20000058 	.word	0x20000058

08000738 <_puts_r>:
 8000738:	6a03      	ldr	r3, [r0, #32]
 800073a:	b570      	push	{r4, r5, r6, lr}
 800073c:	6884      	ldr	r4, [r0, #8]
 800073e:	4605      	mov	r5, r0
 8000740:	460e      	mov	r6, r1
 8000742:	b90b      	cbnz	r3, 8000748 <_puts_r+0x10>
 8000744:	f7ff ffb0 	bl	80006a8 <__sinit>
 8000748:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800074a:	07db      	lsls	r3, r3, #31
 800074c:	d405      	bmi.n	800075a <_puts_r+0x22>
 800074e:	89a3      	ldrh	r3, [r4, #12]
 8000750:	0598      	lsls	r0, r3, #22
 8000752:	d402      	bmi.n	800075a <_puts_r+0x22>
 8000754:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000756:	f000 f99c 	bl	8000a92 <__retarget_lock_acquire_recursive>
 800075a:	89a3      	ldrh	r3, [r4, #12]
 800075c:	0719      	lsls	r1, r3, #28
 800075e:	d513      	bpl.n	8000788 <_puts_r+0x50>
 8000760:	6923      	ldr	r3, [r4, #16]
 8000762:	b18b      	cbz	r3, 8000788 <_puts_r+0x50>
 8000764:	3e01      	subs	r6, #1
 8000766:	68a3      	ldr	r3, [r4, #8]
 8000768:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800076c:	3b01      	subs	r3, #1
 800076e:	60a3      	str	r3, [r4, #8]
 8000770:	b9e9      	cbnz	r1, 80007ae <_puts_r+0x76>
 8000772:	2b00      	cmp	r3, #0
 8000774:	da2e      	bge.n	80007d4 <_puts_r+0x9c>
 8000776:	4622      	mov	r2, r4
 8000778:	210a      	movs	r1, #10
 800077a:	4628      	mov	r0, r5
 800077c:	f000 f87b 	bl	8000876 <__swbuf_r>
 8000780:	3001      	adds	r0, #1
 8000782:	d007      	beq.n	8000794 <_puts_r+0x5c>
 8000784:	250a      	movs	r5, #10
 8000786:	e007      	b.n	8000798 <_puts_r+0x60>
 8000788:	4621      	mov	r1, r4
 800078a:	4628      	mov	r0, r5
 800078c:	f000 f8b0 	bl	80008f0 <__swsetup_r>
 8000790:	2800      	cmp	r0, #0
 8000792:	d0e7      	beq.n	8000764 <_puts_r+0x2c>
 8000794:	f04f 35ff 	mov.w	r5, #4294967295
 8000798:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800079a:	07da      	lsls	r2, r3, #31
 800079c:	d405      	bmi.n	80007aa <_puts_r+0x72>
 800079e:	89a3      	ldrh	r3, [r4, #12]
 80007a0:	059b      	lsls	r3, r3, #22
 80007a2:	d402      	bmi.n	80007aa <_puts_r+0x72>
 80007a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007a6:	f000 f975 	bl	8000a94 <__retarget_lock_release_recursive>
 80007aa:	4628      	mov	r0, r5
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	da04      	bge.n	80007bc <_puts_r+0x84>
 80007b2:	69a2      	ldr	r2, [r4, #24]
 80007b4:	429a      	cmp	r2, r3
 80007b6:	dc06      	bgt.n	80007c6 <_puts_r+0x8e>
 80007b8:	290a      	cmp	r1, #10
 80007ba:	d004      	beq.n	80007c6 <_puts_r+0x8e>
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	1c5a      	adds	r2, r3, #1
 80007c0:	6022      	str	r2, [r4, #0]
 80007c2:	7019      	strb	r1, [r3, #0]
 80007c4:	e7cf      	b.n	8000766 <_puts_r+0x2e>
 80007c6:	4622      	mov	r2, r4
 80007c8:	4628      	mov	r0, r5
 80007ca:	f000 f854 	bl	8000876 <__swbuf_r>
 80007ce:	3001      	adds	r0, #1
 80007d0:	d1c9      	bne.n	8000766 <_puts_r+0x2e>
 80007d2:	e7df      	b.n	8000794 <_puts_r+0x5c>
 80007d4:	6823      	ldr	r3, [r4, #0]
 80007d6:	250a      	movs	r5, #10
 80007d8:	1c5a      	adds	r2, r3, #1
 80007da:	6022      	str	r2, [r4, #0]
 80007dc:	701d      	strb	r5, [r3, #0]
 80007de:	e7db      	b.n	8000798 <_puts_r+0x60>

080007e0 <puts>:
 80007e0:	4b02      	ldr	r3, [pc, #8]	; (80007ec <puts+0xc>)
 80007e2:	4601      	mov	r1, r0
 80007e4:	6818      	ldr	r0, [r3, #0]
 80007e6:	f7ff bfa7 	b.w	8000738 <_puts_r>
 80007ea:	bf00      	nop
 80007ec:	20000058 	.word	0x20000058

080007f0 <__sread>:
 80007f0:	b510      	push	{r4, lr}
 80007f2:	460c      	mov	r4, r1
 80007f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007f8:	f000 f8fc 	bl	80009f4 <_read_r>
 80007fc:	2800      	cmp	r0, #0
 80007fe:	bfab      	itete	ge
 8000800:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000802:	89a3      	ldrhlt	r3, [r4, #12]
 8000804:	181b      	addge	r3, r3, r0
 8000806:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800080a:	bfac      	ite	ge
 800080c:	6563      	strge	r3, [r4, #84]	; 0x54
 800080e:	81a3      	strhlt	r3, [r4, #12]
 8000810:	bd10      	pop	{r4, pc}

08000812 <__swrite>:
 8000812:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000816:	461f      	mov	r7, r3
 8000818:	898b      	ldrh	r3, [r1, #12]
 800081a:	05db      	lsls	r3, r3, #23
 800081c:	4605      	mov	r5, r0
 800081e:	460c      	mov	r4, r1
 8000820:	4616      	mov	r6, r2
 8000822:	d505      	bpl.n	8000830 <__swrite+0x1e>
 8000824:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000828:	2302      	movs	r3, #2
 800082a:	2200      	movs	r2, #0
 800082c:	f000 f8d0 	bl	80009d0 <_lseek_r>
 8000830:	89a3      	ldrh	r3, [r4, #12]
 8000832:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000836:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800083a:	81a3      	strh	r3, [r4, #12]
 800083c:	4632      	mov	r2, r6
 800083e:	463b      	mov	r3, r7
 8000840:	4628      	mov	r0, r5
 8000842:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000846:	f000 b8e7 	b.w	8000a18 <_write_r>

0800084a <__sseek>:
 800084a:	b510      	push	{r4, lr}
 800084c:	460c      	mov	r4, r1
 800084e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000852:	f000 f8bd 	bl	80009d0 <_lseek_r>
 8000856:	1c43      	adds	r3, r0, #1
 8000858:	89a3      	ldrh	r3, [r4, #12]
 800085a:	bf15      	itete	ne
 800085c:	6560      	strne	r0, [r4, #84]	; 0x54
 800085e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000862:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000866:	81a3      	strheq	r3, [r4, #12]
 8000868:	bf18      	it	ne
 800086a:	81a3      	strhne	r3, [r4, #12]
 800086c:	bd10      	pop	{r4, pc}

0800086e <__sclose>:
 800086e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000872:	f000 b89d 	b.w	80009b0 <_close_r>

08000876 <__swbuf_r>:
 8000876:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000878:	460e      	mov	r6, r1
 800087a:	4614      	mov	r4, r2
 800087c:	4605      	mov	r5, r0
 800087e:	b118      	cbz	r0, 8000888 <__swbuf_r+0x12>
 8000880:	6a03      	ldr	r3, [r0, #32]
 8000882:	b90b      	cbnz	r3, 8000888 <__swbuf_r+0x12>
 8000884:	f7ff ff10 	bl	80006a8 <__sinit>
 8000888:	69a3      	ldr	r3, [r4, #24]
 800088a:	60a3      	str	r3, [r4, #8]
 800088c:	89a3      	ldrh	r3, [r4, #12]
 800088e:	071a      	lsls	r2, r3, #28
 8000890:	d525      	bpl.n	80008de <__swbuf_r+0x68>
 8000892:	6923      	ldr	r3, [r4, #16]
 8000894:	b31b      	cbz	r3, 80008de <__swbuf_r+0x68>
 8000896:	6823      	ldr	r3, [r4, #0]
 8000898:	6922      	ldr	r2, [r4, #16]
 800089a:	1a98      	subs	r0, r3, r2
 800089c:	6963      	ldr	r3, [r4, #20]
 800089e:	b2f6      	uxtb	r6, r6
 80008a0:	4283      	cmp	r3, r0
 80008a2:	4637      	mov	r7, r6
 80008a4:	dc04      	bgt.n	80008b0 <__swbuf_r+0x3a>
 80008a6:	4621      	mov	r1, r4
 80008a8:	4628      	mov	r0, r5
 80008aa:	f000 fd47 	bl	800133c <_fflush_r>
 80008ae:	b9e0      	cbnz	r0, 80008ea <__swbuf_r+0x74>
 80008b0:	68a3      	ldr	r3, [r4, #8]
 80008b2:	3b01      	subs	r3, #1
 80008b4:	60a3      	str	r3, [r4, #8]
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	1c5a      	adds	r2, r3, #1
 80008ba:	6022      	str	r2, [r4, #0]
 80008bc:	701e      	strb	r6, [r3, #0]
 80008be:	6962      	ldr	r2, [r4, #20]
 80008c0:	1c43      	adds	r3, r0, #1
 80008c2:	429a      	cmp	r2, r3
 80008c4:	d004      	beq.n	80008d0 <__swbuf_r+0x5a>
 80008c6:	89a3      	ldrh	r3, [r4, #12]
 80008c8:	07db      	lsls	r3, r3, #31
 80008ca:	d506      	bpl.n	80008da <__swbuf_r+0x64>
 80008cc:	2e0a      	cmp	r6, #10
 80008ce:	d104      	bne.n	80008da <__swbuf_r+0x64>
 80008d0:	4621      	mov	r1, r4
 80008d2:	4628      	mov	r0, r5
 80008d4:	f000 fd32 	bl	800133c <_fflush_r>
 80008d8:	b938      	cbnz	r0, 80008ea <__swbuf_r+0x74>
 80008da:	4638      	mov	r0, r7
 80008dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008de:	4621      	mov	r1, r4
 80008e0:	4628      	mov	r0, r5
 80008e2:	f000 f805 	bl	80008f0 <__swsetup_r>
 80008e6:	2800      	cmp	r0, #0
 80008e8:	d0d5      	beq.n	8000896 <__swbuf_r+0x20>
 80008ea:	f04f 37ff 	mov.w	r7, #4294967295
 80008ee:	e7f4      	b.n	80008da <__swbuf_r+0x64>

080008f0 <__swsetup_r>:
 80008f0:	b538      	push	{r3, r4, r5, lr}
 80008f2:	4b2a      	ldr	r3, [pc, #168]	; (800099c <__swsetup_r+0xac>)
 80008f4:	4605      	mov	r5, r0
 80008f6:	6818      	ldr	r0, [r3, #0]
 80008f8:	460c      	mov	r4, r1
 80008fa:	b118      	cbz	r0, 8000904 <__swsetup_r+0x14>
 80008fc:	6a03      	ldr	r3, [r0, #32]
 80008fe:	b90b      	cbnz	r3, 8000904 <__swsetup_r+0x14>
 8000900:	f7ff fed2 	bl	80006a8 <__sinit>
 8000904:	89a3      	ldrh	r3, [r4, #12]
 8000906:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800090a:	0718      	lsls	r0, r3, #28
 800090c:	d422      	bmi.n	8000954 <__swsetup_r+0x64>
 800090e:	06d9      	lsls	r1, r3, #27
 8000910:	d407      	bmi.n	8000922 <__swsetup_r+0x32>
 8000912:	2309      	movs	r3, #9
 8000914:	602b      	str	r3, [r5, #0]
 8000916:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800091a:	81a3      	strh	r3, [r4, #12]
 800091c:	f04f 30ff 	mov.w	r0, #4294967295
 8000920:	e034      	b.n	800098c <__swsetup_r+0x9c>
 8000922:	0758      	lsls	r0, r3, #29
 8000924:	d512      	bpl.n	800094c <__swsetup_r+0x5c>
 8000926:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000928:	b141      	cbz	r1, 800093c <__swsetup_r+0x4c>
 800092a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800092e:	4299      	cmp	r1, r3
 8000930:	d002      	beq.n	8000938 <__swsetup_r+0x48>
 8000932:	4628      	mov	r0, r5
 8000934:	f000 f8b0 	bl	8000a98 <_free_r>
 8000938:	2300      	movs	r3, #0
 800093a:	6363      	str	r3, [r4, #52]	; 0x34
 800093c:	89a3      	ldrh	r3, [r4, #12]
 800093e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000942:	81a3      	strh	r3, [r4, #12]
 8000944:	2300      	movs	r3, #0
 8000946:	6063      	str	r3, [r4, #4]
 8000948:	6923      	ldr	r3, [r4, #16]
 800094a:	6023      	str	r3, [r4, #0]
 800094c:	89a3      	ldrh	r3, [r4, #12]
 800094e:	f043 0308 	orr.w	r3, r3, #8
 8000952:	81a3      	strh	r3, [r4, #12]
 8000954:	6923      	ldr	r3, [r4, #16]
 8000956:	b94b      	cbnz	r3, 800096c <__swsetup_r+0x7c>
 8000958:	89a3      	ldrh	r3, [r4, #12]
 800095a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800095e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000962:	d003      	beq.n	800096c <__swsetup_r+0x7c>
 8000964:	4621      	mov	r1, r4
 8000966:	4628      	mov	r0, r5
 8000968:	f000 fd36 	bl	80013d8 <__smakebuf_r>
 800096c:	89a0      	ldrh	r0, [r4, #12]
 800096e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000972:	f010 0301 	ands.w	r3, r0, #1
 8000976:	d00a      	beq.n	800098e <__swsetup_r+0x9e>
 8000978:	2300      	movs	r3, #0
 800097a:	60a3      	str	r3, [r4, #8]
 800097c:	6963      	ldr	r3, [r4, #20]
 800097e:	425b      	negs	r3, r3
 8000980:	61a3      	str	r3, [r4, #24]
 8000982:	6923      	ldr	r3, [r4, #16]
 8000984:	b943      	cbnz	r3, 8000998 <__swsetup_r+0xa8>
 8000986:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800098a:	d1c4      	bne.n	8000916 <__swsetup_r+0x26>
 800098c:	bd38      	pop	{r3, r4, r5, pc}
 800098e:	0781      	lsls	r1, r0, #30
 8000990:	bf58      	it	pl
 8000992:	6963      	ldrpl	r3, [r4, #20]
 8000994:	60a3      	str	r3, [r4, #8]
 8000996:	e7f4      	b.n	8000982 <__swsetup_r+0x92>
 8000998:	2000      	movs	r0, #0
 800099a:	e7f7      	b.n	800098c <__swsetup_r+0x9c>
 800099c:	20000058 	.word	0x20000058

080009a0 <memset>:
 80009a0:	4402      	add	r2, r0
 80009a2:	4603      	mov	r3, r0
 80009a4:	4293      	cmp	r3, r2
 80009a6:	d100      	bne.n	80009aa <memset+0xa>
 80009a8:	4770      	bx	lr
 80009aa:	f803 1b01 	strb.w	r1, [r3], #1
 80009ae:	e7f9      	b.n	80009a4 <memset+0x4>

080009b0 <_close_r>:
 80009b0:	b538      	push	{r3, r4, r5, lr}
 80009b2:	4d06      	ldr	r5, [pc, #24]	; (80009cc <_close_r+0x1c>)
 80009b4:	2300      	movs	r3, #0
 80009b6:	4604      	mov	r4, r0
 80009b8:	4608      	mov	r0, r1
 80009ba:	602b      	str	r3, [r5, #0]
 80009bc:	f7ff fd53 	bl	8000466 <_close>
 80009c0:	1c43      	adds	r3, r0, #1
 80009c2:	d102      	bne.n	80009ca <_close_r+0x1a>
 80009c4:	682b      	ldr	r3, [r5, #0]
 80009c6:	b103      	cbz	r3, 80009ca <_close_r+0x1a>
 80009c8:	6023      	str	r3, [r4, #0]
 80009ca:	bd38      	pop	{r3, r4, r5, pc}
 80009cc:	200001b8 	.word	0x200001b8

080009d0 <_lseek_r>:
 80009d0:	b538      	push	{r3, r4, r5, lr}
 80009d2:	4d07      	ldr	r5, [pc, #28]	; (80009f0 <_lseek_r+0x20>)
 80009d4:	4604      	mov	r4, r0
 80009d6:	4608      	mov	r0, r1
 80009d8:	4611      	mov	r1, r2
 80009da:	2200      	movs	r2, #0
 80009dc:	602a      	str	r2, [r5, #0]
 80009de:	461a      	mov	r2, r3
 80009e0:	f7ff fd68 	bl	80004b4 <_lseek>
 80009e4:	1c43      	adds	r3, r0, #1
 80009e6:	d102      	bne.n	80009ee <_lseek_r+0x1e>
 80009e8:	682b      	ldr	r3, [r5, #0]
 80009ea:	b103      	cbz	r3, 80009ee <_lseek_r+0x1e>
 80009ec:	6023      	str	r3, [r4, #0]
 80009ee:	bd38      	pop	{r3, r4, r5, pc}
 80009f0:	200001b8 	.word	0x200001b8

080009f4 <_read_r>:
 80009f4:	b538      	push	{r3, r4, r5, lr}
 80009f6:	4d07      	ldr	r5, [pc, #28]	; (8000a14 <_read_r+0x20>)
 80009f8:	4604      	mov	r4, r0
 80009fa:	4608      	mov	r0, r1
 80009fc:	4611      	mov	r1, r2
 80009fe:	2200      	movs	r2, #0
 8000a00:	602a      	str	r2, [r5, #0]
 8000a02:	461a      	mov	r2, r3
 8000a04:	f7ff fcf6 	bl	80003f4 <_read>
 8000a08:	1c43      	adds	r3, r0, #1
 8000a0a:	d102      	bne.n	8000a12 <_read_r+0x1e>
 8000a0c:	682b      	ldr	r3, [r5, #0]
 8000a0e:	b103      	cbz	r3, 8000a12 <_read_r+0x1e>
 8000a10:	6023      	str	r3, [r4, #0]
 8000a12:	bd38      	pop	{r3, r4, r5, pc}
 8000a14:	200001b8 	.word	0x200001b8

08000a18 <_write_r>:
 8000a18:	b538      	push	{r3, r4, r5, lr}
 8000a1a:	4d07      	ldr	r5, [pc, #28]	; (8000a38 <_write_r+0x20>)
 8000a1c:	4604      	mov	r4, r0
 8000a1e:	4608      	mov	r0, r1
 8000a20:	4611      	mov	r1, r2
 8000a22:	2200      	movs	r2, #0
 8000a24:	602a      	str	r2, [r5, #0]
 8000a26:	461a      	mov	r2, r3
 8000a28:	f7ff fd01 	bl	800042e <_write>
 8000a2c:	1c43      	adds	r3, r0, #1
 8000a2e:	d102      	bne.n	8000a36 <_write_r+0x1e>
 8000a30:	682b      	ldr	r3, [r5, #0]
 8000a32:	b103      	cbz	r3, 8000a36 <_write_r+0x1e>
 8000a34:	6023      	str	r3, [r4, #0]
 8000a36:	bd38      	pop	{r3, r4, r5, pc}
 8000a38:	200001b8 	.word	0x200001b8

08000a3c <__errno>:
 8000a3c:	4b01      	ldr	r3, [pc, #4]	; (8000a44 <__errno+0x8>)
 8000a3e:	6818      	ldr	r0, [r3, #0]
 8000a40:	4770      	bx	lr
 8000a42:	bf00      	nop
 8000a44:	20000058 	.word	0x20000058

08000a48 <__libc_init_array>:
 8000a48:	b570      	push	{r4, r5, r6, lr}
 8000a4a:	4d0d      	ldr	r5, [pc, #52]	; (8000a80 <__libc_init_array+0x38>)
 8000a4c:	4c0d      	ldr	r4, [pc, #52]	; (8000a84 <__libc_init_array+0x3c>)
 8000a4e:	1b64      	subs	r4, r4, r5
 8000a50:	10a4      	asrs	r4, r4, #2
 8000a52:	2600      	movs	r6, #0
 8000a54:	42a6      	cmp	r6, r4
 8000a56:	d109      	bne.n	8000a6c <__libc_init_array+0x24>
 8000a58:	4d0b      	ldr	r5, [pc, #44]	; (8000a88 <__libc_init_array+0x40>)
 8000a5a:	4c0c      	ldr	r4, [pc, #48]	; (8000a8c <__libc_init_array+0x44>)
 8000a5c:	f000 fd2a 	bl	80014b4 <_init>
 8000a60:	1b64      	subs	r4, r4, r5
 8000a62:	10a4      	asrs	r4, r4, #2
 8000a64:	2600      	movs	r6, #0
 8000a66:	42a6      	cmp	r6, r4
 8000a68:	d105      	bne.n	8000a76 <__libc_init_array+0x2e>
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
 8000a6c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a70:	4798      	blx	r3
 8000a72:	3601      	adds	r6, #1
 8000a74:	e7ee      	b.n	8000a54 <__libc_init_array+0xc>
 8000a76:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a7a:	4798      	blx	r3
 8000a7c:	3601      	adds	r6, #1
 8000a7e:	e7f2      	b.n	8000a66 <__libc_init_array+0x1e>
 8000a80:	080015b8 	.word	0x080015b8
 8000a84:	080015b8 	.word	0x080015b8
 8000a88:	080015b8 	.word	0x080015b8
 8000a8c:	080015bc 	.word	0x080015bc

08000a90 <__retarget_lock_init_recursive>:
 8000a90:	4770      	bx	lr

08000a92 <__retarget_lock_acquire_recursive>:
 8000a92:	4770      	bx	lr

08000a94 <__retarget_lock_release_recursive>:
 8000a94:	4770      	bx	lr
	...

08000a98 <_free_r>:
 8000a98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a9a:	2900      	cmp	r1, #0
 8000a9c:	d044      	beq.n	8000b28 <_free_r+0x90>
 8000a9e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	f1a1 0404 	sub.w	r4, r1, #4
 8000aaa:	bfb8      	it	lt
 8000aac:	18e4      	addlt	r4, r4, r3
 8000aae:	f000 f8df 	bl	8000c70 <__malloc_lock>
 8000ab2:	4a1e      	ldr	r2, [pc, #120]	; (8000b2c <_free_r+0x94>)
 8000ab4:	9801      	ldr	r0, [sp, #4]
 8000ab6:	6813      	ldr	r3, [r2, #0]
 8000ab8:	b933      	cbnz	r3, 8000ac8 <_free_r+0x30>
 8000aba:	6063      	str	r3, [r4, #4]
 8000abc:	6014      	str	r4, [r2, #0]
 8000abe:	b003      	add	sp, #12
 8000ac0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000ac4:	f000 b8da 	b.w	8000c7c <__malloc_unlock>
 8000ac8:	42a3      	cmp	r3, r4
 8000aca:	d908      	bls.n	8000ade <_free_r+0x46>
 8000acc:	6825      	ldr	r5, [r4, #0]
 8000ace:	1961      	adds	r1, r4, r5
 8000ad0:	428b      	cmp	r3, r1
 8000ad2:	bf01      	itttt	eq
 8000ad4:	6819      	ldreq	r1, [r3, #0]
 8000ad6:	685b      	ldreq	r3, [r3, #4]
 8000ad8:	1949      	addeq	r1, r1, r5
 8000ada:	6021      	streq	r1, [r4, #0]
 8000adc:	e7ed      	b.n	8000aba <_free_r+0x22>
 8000ade:	461a      	mov	r2, r3
 8000ae0:	685b      	ldr	r3, [r3, #4]
 8000ae2:	b10b      	cbz	r3, 8000ae8 <_free_r+0x50>
 8000ae4:	42a3      	cmp	r3, r4
 8000ae6:	d9fa      	bls.n	8000ade <_free_r+0x46>
 8000ae8:	6811      	ldr	r1, [r2, #0]
 8000aea:	1855      	adds	r5, r2, r1
 8000aec:	42a5      	cmp	r5, r4
 8000aee:	d10b      	bne.n	8000b08 <_free_r+0x70>
 8000af0:	6824      	ldr	r4, [r4, #0]
 8000af2:	4421      	add	r1, r4
 8000af4:	1854      	adds	r4, r2, r1
 8000af6:	42a3      	cmp	r3, r4
 8000af8:	6011      	str	r1, [r2, #0]
 8000afa:	d1e0      	bne.n	8000abe <_free_r+0x26>
 8000afc:	681c      	ldr	r4, [r3, #0]
 8000afe:	685b      	ldr	r3, [r3, #4]
 8000b00:	6053      	str	r3, [r2, #4]
 8000b02:	440c      	add	r4, r1
 8000b04:	6014      	str	r4, [r2, #0]
 8000b06:	e7da      	b.n	8000abe <_free_r+0x26>
 8000b08:	d902      	bls.n	8000b10 <_free_r+0x78>
 8000b0a:	230c      	movs	r3, #12
 8000b0c:	6003      	str	r3, [r0, #0]
 8000b0e:	e7d6      	b.n	8000abe <_free_r+0x26>
 8000b10:	6825      	ldr	r5, [r4, #0]
 8000b12:	1961      	adds	r1, r4, r5
 8000b14:	428b      	cmp	r3, r1
 8000b16:	bf04      	itt	eq
 8000b18:	6819      	ldreq	r1, [r3, #0]
 8000b1a:	685b      	ldreq	r3, [r3, #4]
 8000b1c:	6063      	str	r3, [r4, #4]
 8000b1e:	bf04      	itt	eq
 8000b20:	1949      	addeq	r1, r1, r5
 8000b22:	6021      	streq	r1, [r4, #0]
 8000b24:	6054      	str	r4, [r2, #4]
 8000b26:	e7ca      	b.n	8000abe <_free_r+0x26>
 8000b28:	b003      	add	sp, #12
 8000b2a:	bd30      	pop	{r4, r5, pc}
 8000b2c:	200001c0 	.word	0x200001c0

08000b30 <sbrk_aligned>:
 8000b30:	b570      	push	{r4, r5, r6, lr}
 8000b32:	4e0e      	ldr	r6, [pc, #56]	; (8000b6c <sbrk_aligned+0x3c>)
 8000b34:	460c      	mov	r4, r1
 8000b36:	6831      	ldr	r1, [r6, #0]
 8000b38:	4605      	mov	r5, r0
 8000b3a:	b911      	cbnz	r1, 8000b42 <sbrk_aligned+0x12>
 8000b3c:	f000 fcaa 	bl	8001494 <_sbrk_r>
 8000b40:	6030      	str	r0, [r6, #0]
 8000b42:	4621      	mov	r1, r4
 8000b44:	4628      	mov	r0, r5
 8000b46:	f000 fca5 	bl	8001494 <_sbrk_r>
 8000b4a:	1c43      	adds	r3, r0, #1
 8000b4c:	d00a      	beq.n	8000b64 <sbrk_aligned+0x34>
 8000b4e:	1cc4      	adds	r4, r0, #3
 8000b50:	f024 0403 	bic.w	r4, r4, #3
 8000b54:	42a0      	cmp	r0, r4
 8000b56:	d007      	beq.n	8000b68 <sbrk_aligned+0x38>
 8000b58:	1a21      	subs	r1, r4, r0
 8000b5a:	4628      	mov	r0, r5
 8000b5c:	f000 fc9a 	bl	8001494 <_sbrk_r>
 8000b60:	3001      	adds	r0, #1
 8000b62:	d101      	bne.n	8000b68 <sbrk_aligned+0x38>
 8000b64:	f04f 34ff 	mov.w	r4, #4294967295
 8000b68:	4620      	mov	r0, r4
 8000b6a:	bd70      	pop	{r4, r5, r6, pc}
 8000b6c:	200001c4 	.word	0x200001c4

08000b70 <_malloc_r>:
 8000b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b74:	1ccd      	adds	r5, r1, #3
 8000b76:	f025 0503 	bic.w	r5, r5, #3
 8000b7a:	3508      	adds	r5, #8
 8000b7c:	2d0c      	cmp	r5, #12
 8000b7e:	bf38      	it	cc
 8000b80:	250c      	movcc	r5, #12
 8000b82:	2d00      	cmp	r5, #0
 8000b84:	4607      	mov	r7, r0
 8000b86:	db01      	blt.n	8000b8c <_malloc_r+0x1c>
 8000b88:	42a9      	cmp	r1, r5
 8000b8a:	d905      	bls.n	8000b98 <_malloc_r+0x28>
 8000b8c:	230c      	movs	r3, #12
 8000b8e:	603b      	str	r3, [r7, #0]
 8000b90:	2600      	movs	r6, #0
 8000b92:	4630      	mov	r0, r6
 8000b94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b98:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000c6c <_malloc_r+0xfc>
 8000b9c:	f000 f868 	bl	8000c70 <__malloc_lock>
 8000ba0:	f8d8 3000 	ldr.w	r3, [r8]
 8000ba4:	461c      	mov	r4, r3
 8000ba6:	bb5c      	cbnz	r4, 8000c00 <_malloc_r+0x90>
 8000ba8:	4629      	mov	r1, r5
 8000baa:	4638      	mov	r0, r7
 8000bac:	f7ff ffc0 	bl	8000b30 <sbrk_aligned>
 8000bb0:	1c43      	adds	r3, r0, #1
 8000bb2:	4604      	mov	r4, r0
 8000bb4:	d155      	bne.n	8000c62 <_malloc_r+0xf2>
 8000bb6:	f8d8 4000 	ldr.w	r4, [r8]
 8000bba:	4626      	mov	r6, r4
 8000bbc:	2e00      	cmp	r6, #0
 8000bbe:	d145      	bne.n	8000c4c <_malloc_r+0xdc>
 8000bc0:	2c00      	cmp	r4, #0
 8000bc2:	d048      	beq.n	8000c56 <_malloc_r+0xe6>
 8000bc4:	6823      	ldr	r3, [r4, #0]
 8000bc6:	4631      	mov	r1, r6
 8000bc8:	4638      	mov	r0, r7
 8000bca:	eb04 0903 	add.w	r9, r4, r3
 8000bce:	f000 fc61 	bl	8001494 <_sbrk_r>
 8000bd2:	4581      	cmp	r9, r0
 8000bd4:	d13f      	bne.n	8000c56 <_malloc_r+0xe6>
 8000bd6:	6821      	ldr	r1, [r4, #0]
 8000bd8:	1a6d      	subs	r5, r5, r1
 8000bda:	4629      	mov	r1, r5
 8000bdc:	4638      	mov	r0, r7
 8000bde:	f7ff ffa7 	bl	8000b30 <sbrk_aligned>
 8000be2:	3001      	adds	r0, #1
 8000be4:	d037      	beq.n	8000c56 <_malloc_r+0xe6>
 8000be6:	6823      	ldr	r3, [r4, #0]
 8000be8:	442b      	add	r3, r5
 8000bea:	6023      	str	r3, [r4, #0]
 8000bec:	f8d8 3000 	ldr.w	r3, [r8]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d038      	beq.n	8000c66 <_malloc_r+0xf6>
 8000bf4:	685a      	ldr	r2, [r3, #4]
 8000bf6:	42a2      	cmp	r2, r4
 8000bf8:	d12b      	bne.n	8000c52 <_malloc_r+0xe2>
 8000bfa:	2200      	movs	r2, #0
 8000bfc:	605a      	str	r2, [r3, #4]
 8000bfe:	e00f      	b.n	8000c20 <_malloc_r+0xb0>
 8000c00:	6822      	ldr	r2, [r4, #0]
 8000c02:	1b52      	subs	r2, r2, r5
 8000c04:	d41f      	bmi.n	8000c46 <_malloc_r+0xd6>
 8000c06:	2a0b      	cmp	r2, #11
 8000c08:	d917      	bls.n	8000c3a <_malloc_r+0xca>
 8000c0a:	1961      	adds	r1, r4, r5
 8000c0c:	42a3      	cmp	r3, r4
 8000c0e:	6025      	str	r5, [r4, #0]
 8000c10:	bf18      	it	ne
 8000c12:	6059      	strne	r1, [r3, #4]
 8000c14:	6863      	ldr	r3, [r4, #4]
 8000c16:	bf08      	it	eq
 8000c18:	f8c8 1000 	streq.w	r1, [r8]
 8000c1c:	5162      	str	r2, [r4, r5]
 8000c1e:	604b      	str	r3, [r1, #4]
 8000c20:	4638      	mov	r0, r7
 8000c22:	f104 060b 	add.w	r6, r4, #11
 8000c26:	f000 f829 	bl	8000c7c <__malloc_unlock>
 8000c2a:	f026 0607 	bic.w	r6, r6, #7
 8000c2e:	1d23      	adds	r3, r4, #4
 8000c30:	1af2      	subs	r2, r6, r3
 8000c32:	d0ae      	beq.n	8000b92 <_malloc_r+0x22>
 8000c34:	1b9b      	subs	r3, r3, r6
 8000c36:	50a3      	str	r3, [r4, r2]
 8000c38:	e7ab      	b.n	8000b92 <_malloc_r+0x22>
 8000c3a:	42a3      	cmp	r3, r4
 8000c3c:	6862      	ldr	r2, [r4, #4]
 8000c3e:	d1dd      	bne.n	8000bfc <_malloc_r+0x8c>
 8000c40:	f8c8 2000 	str.w	r2, [r8]
 8000c44:	e7ec      	b.n	8000c20 <_malloc_r+0xb0>
 8000c46:	4623      	mov	r3, r4
 8000c48:	6864      	ldr	r4, [r4, #4]
 8000c4a:	e7ac      	b.n	8000ba6 <_malloc_r+0x36>
 8000c4c:	4634      	mov	r4, r6
 8000c4e:	6876      	ldr	r6, [r6, #4]
 8000c50:	e7b4      	b.n	8000bbc <_malloc_r+0x4c>
 8000c52:	4613      	mov	r3, r2
 8000c54:	e7cc      	b.n	8000bf0 <_malloc_r+0x80>
 8000c56:	230c      	movs	r3, #12
 8000c58:	603b      	str	r3, [r7, #0]
 8000c5a:	4638      	mov	r0, r7
 8000c5c:	f000 f80e 	bl	8000c7c <__malloc_unlock>
 8000c60:	e797      	b.n	8000b92 <_malloc_r+0x22>
 8000c62:	6025      	str	r5, [r4, #0]
 8000c64:	e7dc      	b.n	8000c20 <_malloc_r+0xb0>
 8000c66:	605b      	str	r3, [r3, #4]
 8000c68:	deff      	udf	#255	; 0xff
 8000c6a:	bf00      	nop
 8000c6c:	200001c0 	.word	0x200001c0

08000c70 <__malloc_lock>:
 8000c70:	4801      	ldr	r0, [pc, #4]	; (8000c78 <__malloc_lock+0x8>)
 8000c72:	f7ff bf0e 	b.w	8000a92 <__retarget_lock_acquire_recursive>
 8000c76:	bf00      	nop
 8000c78:	200001bc 	.word	0x200001bc

08000c7c <__malloc_unlock>:
 8000c7c:	4801      	ldr	r0, [pc, #4]	; (8000c84 <__malloc_unlock+0x8>)
 8000c7e:	f7ff bf09 	b.w	8000a94 <__retarget_lock_release_recursive>
 8000c82:	bf00      	nop
 8000c84:	200001bc 	.word	0x200001bc

08000c88 <__sfputc_r>:
 8000c88:	6893      	ldr	r3, [r2, #8]
 8000c8a:	3b01      	subs	r3, #1
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	b410      	push	{r4}
 8000c90:	6093      	str	r3, [r2, #8]
 8000c92:	da08      	bge.n	8000ca6 <__sfputc_r+0x1e>
 8000c94:	6994      	ldr	r4, [r2, #24]
 8000c96:	42a3      	cmp	r3, r4
 8000c98:	db01      	blt.n	8000c9e <__sfputc_r+0x16>
 8000c9a:	290a      	cmp	r1, #10
 8000c9c:	d103      	bne.n	8000ca6 <__sfputc_r+0x1e>
 8000c9e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ca2:	f7ff bde8 	b.w	8000876 <__swbuf_r>
 8000ca6:	6813      	ldr	r3, [r2, #0]
 8000ca8:	1c58      	adds	r0, r3, #1
 8000caa:	6010      	str	r0, [r2, #0]
 8000cac:	7019      	strb	r1, [r3, #0]
 8000cae:	4608      	mov	r0, r1
 8000cb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cb4:	4770      	bx	lr

08000cb6 <__sfputs_r>:
 8000cb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb8:	4606      	mov	r6, r0
 8000cba:	460f      	mov	r7, r1
 8000cbc:	4614      	mov	r4, r2
 8000cbe:	18d5      	adds	r5, r2, r3
 8000cc0:	42ac      	cmp	r4, r5
 8000cc2:	d101      	bne.n	8000cc8 <__sfputs_r+0x12>
 8000cc4:	2000      	movs	r0, #0
 8000cc6:	e007      	b.n	8000cd8 <__sfputs_r+0x22>
 8000cc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ccc:	463a      	mov	r2, r7
 8000cce:	4630      	mov	r0, r6
 8000cd0:	f7ff ffda 	bl	8000c88 <__sfputc_r>
 8000cd4:	1c43      	adds	r3, r0, #1
 8000cd6:	d1f3      	bne.n	8000cc0 <__sfputs_r+0xa>
 8000cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cdc <_vfiprintf_r>:
 8000cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ce0:	460d      	mov	r5, r1
 8000ce2:	b09d      	sub	sp, #116	; 0x74
 8000ce4:	4614      	mov	r4, r2
 8000ce6:	4698      	mov	r8, r3
 8000ce8:	4606      	mov	r6, r0
 8000cea:	b118      	cbz	r0, 8000cf4 <_vfiprintf_r+0x18>
 8000cec:	6a03      	ldr	r3, [r0, #32]
 8000cee:	b90b      	cbnz	r3, 8000cf4 <_vfiprintf_r+0x18>
 8000cf0:	f7ff fcda 	bl	80006a8 <__sinit>
 8000cf4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cf6:	07d9      	lsls	r1, r3, #31
 8000cf8:	d405      	bmi.n	8000d06 <_vfiprintf_r+0x2a>
 8000cfa:	89ab      	ldrh	r3, [r5, #12]
 8000cfc:	059a      	lsls	r2, r3, #22
 8000cfe:	d402      	bmi.n	8000d06 <_vfiprintf_r+0x2a>
 8000d00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d02:	f7ff fec6 	bl	8000a92 <__retarget_lock_acquire_recursive>
 8000d06:	89ab      	ldrh	r3, [r5, #12]
 8000d08:	071b      	lsls	r3, r3, #28
 8000d0a:	d501      	bpl.n	8000d10 <_vfiprintf_r+0x34>
 8000d0c:	692b      	ldr	r3, [r5, #16]
 8000d0e:	b99b      	cbnz	r3, 8000d38 <_vfiprintf_r+0x5c>
 8000d10:	4629      	mov	r1, r5
 8000d12:	4630      	mov	r0, r6
 8000d14:	f7ff fdec 	bl	80008f0 <__swsetup_r>
 8000d18:	b170      	cbz	r0, 8000d38 <_vfiprintf_r+0x5c>
 8000d1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d1c:	07dc      	lsls	r4, r3, #31
 8000d1e:	d504      	bpl.n	8000d2a <_vfiprintf_r+0x4e>
 8000d20:	f04f 30ff 	mov.w	r0, #4294967295
 8000d24:	b01d      	add	sp, #116	; 0x74
 8000d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d2a:	89ab      	ldrh	r3, [r5, #12]
 8000d2c:	0598      	lsls	r0, r3, #22
 8000d2e:	d4f7      	bmi.n	8000d20 <_vfiprintf_r+0x44>
 8000d30:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d32:	f7ff feaf 	bl	8000a94 <__retarget_lock_release_recursive>
 8000d36:	e7f3      	b.n	8000d20 <_vfiprintf_r+0x44>
 8000d38:	2300      	movs	r3, #0
 8000d3a:	9309      	str	r3, [sp, #36]	; 0x24
 8000d3c:	2320      	movs	r3, #32
 8000d3e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d42:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d46:	2330      	movs	r3, #48	; 0x30
 8000d48:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000efc <_vfiprintf_r+0x220>
 8000d4c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d50:	f04f 0901 	mov.w	r9, #1
 8000d54:	4623      	mov	r3, r4
 8000d56:	469a      	mov	sl, r3
 8000d58:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d5c:	b10a      	cbz	r2, 8000d62 <_vfiprintf_r+0x86>
 8000d5e:	2a25      	cmp	r2, #37	; 0x25
 8000d60:	d1f9      	bne.n	8000d56 <_vfiprintf_r+0x7a>
 8000d62:	ebba 0b04 	subs.w	fp, sl, r4
 8000d66:	d00b      	beq.n	8000d80 <_vfiprintf_r+0xa4>
 8000d68:	465b      	mov	r3, fp
 8000d6a:	4622      	mov	r2, r4
 8000d6c:	4629      	mov	r1, r5
 8000d6e:	4630      	mov	r0, r6
 8000d70:	f7ff ffa1 	bl	8000cb6 <__sfputs_r>
 8000d74:	3001      	adds	r0, #1
 8000d76:	f000 80a9 	beq.w	8000ecc <_vfiprintf_r+0x1f0>
 8000d7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d7c:	445a      	add	r2, fp
 8000d7e:	9209      	str	r2, [sp, #36]	; 0x24
 8000d80:	f89a 3000 	ldrb.w	r3, [sl]
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	f000 80a1 	beq.w	8000ecc <_vfiprintf_r+0x1f0>
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	f04f 32ff 	mov.w	r2, #4294967295
 8000d90:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d94:	f10a 0a01 	add.w	sl, sl, #1
 8000d98:	9304      	str	r3, [sp, #16]
 8000d9a:	9307      	str	r3, [sp, #28]
 8000d9c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000da0:	931a      	str	r3, [sp, #104]	; 0x68
 8000da2:	4654      	mov	r4, sl
 8000da4:	2205      	movs	r2, #5
 8000da6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000daa:	4854      	ldr	r0, [pc, #336]	; (8000efc <_vfiprintf_r+0x220>)
 8000dac:	f7ff fa10 	bl	80001d0 <memchr>
 8000db0:	9a04      	ldr	r2, [sp, #16]
 8000db2:	b9d8      	cbnz	r0, 8000dec <_vfiprintf_r+0x110>
 8000db4:	06d1      	lsls	r1, r2, #27
 8000db6:	bf44      	itt	mi
 8000db8:	2320      	movmi	r3, #32
 8000dba:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dbe:	0713      	lsls	r3, r2, #28
 8000dc0:	bf44      	itt	mi
 8000dc2:	232b      	movmi	r3, #43	; 0x2b
 8000dc4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dc8:	f89a 3000 	ldrb.w	r3, [sl]
 8000dcc:	2b2a      	cmp	r3, #42	; 0x2a
 8000dce:	d015      	beq.n	8000dfc <_vfiprintf_r+0x120>
 8000dd0:	9a07      	ldr	r2, [sp, #28]
 8000dd2:	4654      	mov	r4, sl
 8000dd4:	2000      	movs	r0, #0
 8000dd6:	f04f 0c0a 	mov.w	ip, #10
 8000dda:	4621      	mov	r1, r4
 8000ddc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000de0:	3b30      	subs	r3, #48	; 0x30
 8000de2:	2b09      	cmp	r3, #9
 8000de4:	d94d      	bls.n	8000e82 <_vfiprintf_r+0x1a6>
 8000de6:	b1b0      	cbz	r0, 8000e16 <_vfiprintf_r+0x13a>
 8000de8:	9207      	str	r2, [sp, #28]
 8000dea:	e014      	b.n	8000e16 <_vfiprintf_r+0x13a>
 8000dec:	eba0 0308 	sub.w	r3, r0, r8
 8000df0:	fa09 f303 	lsl.w	r3, r9, r3
 8000df4:	4313      	orrs	r3, r2
 8000df6:	9304      	str	r3, [sp, #16]
 8000df8:	46a2      	mov	sl, r4
 8000dfa:	e7d2      	b.n	8000da2 <_vfiprintf_r+0xc6>
 8000dfc:	9b03      	ldr	r3, [sp, #12]
 8000dfe:	1d19      	adds	r1, r3, #4
 8000e00:	681b      	ldr	r3, [r3, #0]
 8000e02:	9103      	str	r1, [sp, #12]
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	bfbb      	ittet	lt
 8000e08:	425b      	neglt	r3, r3
 8000e0a:	f042 0202 	orrlt.w	r2, r2, #2
 8000e0e:	9307      	strge	r3, [sp, #28]
 8000e10:	9307      	strlt	r3, [sp, #28]
 8000e12:	bfb8      	it	lt
 8000e14:	9204      	strlt	r2, [sp, #16]
 8000e16:	7823      	ldrb	r3, [r4, #0]
 8000e18:	2b2e      	cmp	r3, #46	; 0x2e
 8000e1a:	d10c      	bne.n	8000e36 <_vfiprintf_r+0x15a>
 8000e1c:	7863      	ldrb	r3, [r4, #1]
 8000e1e:	2b2a      	cmp	r3, #42	; 0x2a
 8000e20:	d134      	bne.n	8000e8c <_vfiprintf_r+0x1b0>
 8000e22:	9b03      	ldr	r3, [sp, #12]
 8000e24:	1d1a      	adds	r2, r3, #4
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	9203      	str	r2, [sp, #12]
 8000e2a:	2b00      	cmp	r3, #0
 8000e2c:	bfb8      	it	lt
 8000e2e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e32:	3402      	adds	r4, #2
 8000e34:	9305      	str	r3, [sp, #20]
 8000e36:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000f0c <_vfiprintf_r+0x230>
 8000e3a:	7821      	ldrb	r1, [r4, #0]
 8000e3c:	2203      	movs	r2, #3
 8000e3e:	4650      	mov	r0, sl
 8000e40:	f7ff f9c6 	bl	80001d0 <memchr>
 8000e44:	b138      	cbz	r0, 8000e56 <_vfiprintf_r+0x17a>
 8000e46:	9b04      	ldr	r3, [sp, #16]
 8000e48:	eba0 000a 	sub.w	r0, r0, sl
 8000e4c:	2240      	movs	r2, #64	; 0x40
 8000e4e:	4082      	lsls	r2, r0
 8000e50:	4313      	orrs	r3, r2
 8000e52:	3401      	adds	r4, #1
 8000e54:	9304      	str	r3, [sp, #16]
 8000e56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e5a:	4829      	ldr	r0, [pc, #164]	; (8000f00 <_vfiprintf_r+0x224>)
 8000e5c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e60:	2206      	movs	r2, #6
 8000e62:	f7ff f9b5 	bl	80001d0 <memchr>
 8000e66:	2800      	cmp	r0, #0
 8000e68:	d03f      	beq.n	8000eea <_vfiprintf_r+0x20e>
 8000e6a:	4b26      	ldr	r3, [pc, #152]	; (8000f04 <_vfiprintf_r+0x228>)
 8000e6c:	bb1b      	cbnz	r3, 8000eb6 <_vfiprintf_r+0x1da>
 8000e6e:	9b03      	ldr	r3, [sp, #12]
 8000e70:	3307      	adds	r3, #7
 8000e72:	f023 0307 	bic.w	r3, r3, #7
 8000e76:	3308      	adds	r3, #8
 8000e78:	9303      	str	r3, [sp, #12]
 8000e7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e7c:	443b      	add	r3, r7
 8000e7e:	9309      	str	r3, [sp, #36]	; 0x24
 8000e80:	e768      	b.n	8000d54 <_vfiprintf_r+0x78>
 8000e82:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e86:	460c      	mov	r4, r1
 8000e88:	2001      	movs	r0, #1
 8000e8a:	e7a6      	b.n	8000dda <_vfiprintf_r+0xfe>
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	3401      	adds	r4, #1
 8000e90:	9305      	str	r3, [sp, #20]
 8000e92:	4619      	mov	r1, r3
 8000e94:	f04f 0c0a 	mov.w	ip, #10
 8000e98:	4620      	mov	r0, r4
 8000e9a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e9e:	3a30      	subs	r2, #48	; 0x30
 8000ea0:	2a09      	cmp	r2, #9
 8000ea2:	d903      	bls.n	8000eac <_vfiprintf_r+0x1d0>
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	d0c6      	beq.n	8000e36 <_vfiprintf_r+0x15a>
 8000ea8:	9105      	str	r1, [sp, #20]
 8000eaa:	e7c4      	b.n	8000e36 <_vfiprintf_r+0x15a>
 8000eac:	fb0c 2101 	mla	r1, ip, r1, r2
 8000eb0:	4604      	mov	r4, r0
 8000eb2:	2301      	movs	r3, #1
 8000eb4:	e7f0      	b.n	8000e98 <_vfiprintf_r+0x1bc>
 8000eb6:	ab03      	add	r3, sp, #12
 8000eb8:	9300      	str	r3, [sp, #0]
 8000eba:	462a      	mov	r2, r5
 8000ebc:	4b12      	ldr	r3, [pc, #72]	; (8000f08 <_vfiprintf_r+0x22c>)
 8000ebe:	a904      	add	r1, sp, #16
 8000ec0:	4630      	mov	r0, r6
 8000ec2:	f3af 8000 	nop.w
 8000ec6:	4607      	mov	r7, r0
 8000ec8:	1c78      	adds	r0, r7, #1
 8000eca:	d1d6      	bne.n	8000e7a <_vfiprintf_r+0x19e>
 8000ecc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ece:	07d9      	lsls	r1, r3, #31
 8000ed0:	d405      	bmi.n	8000ede <_vfiprintf_r+0x202>
 8000ed2:	89ab      	ldrh	r3, [r5, #12]
 8000ed4:	059a      	lsls	r2, r3, #22
 8000ed6:	d402      	bmi.n	8000ede <_vfiprintf_r+0x202>
 8000ed8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000eda:	f7ff fddb 	bl	8000a94 <__retarget_lock_release_recursive>
 8000ede:	89ab      	ldrh	r3, [r5, #12]
 8000ee0:	065b      	lsls	r3, r3, #25
 8000ee2:	f53f af1d 	bmi.w	8000d20 <_vfiprintf_r+0x44>
 8000ee6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ee8:	e71c      	b.n	8000d24 <_vfiprintf_r+0x48>
 8000eea:	ab03      	add	r3, sp, #12
 8000eec:	9300      	str	r3, [sp, #0]
 8000eee:	462a      	mov	r2, r5
 8000ef0:	4b05      	ldr	r3, [pc, #20]	; (8000f08 <_vfiprintf_r+0x22c>)
 8000ef2:	a904      	add	r1, sp, #16
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f000 f879 	bl	8000fec <_printf_i>
 8000efa:	e7e4      	b.n	8000ec6 <_vfiprintf_r+0x1ea>
 8000efc:	08001582 	.word	0x08001582
 8000f00:	0800158c 	.word	0x0800158c
 8000f04:	00000000 	.word	0x00000000
 8000f08:	08000cb7 	.word	0x08000cb7
 8000f0c:	08001588 	.word	0x08001588

08000f10 <_printf_common>:
 8000f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f14:	4616      	mov	r6, r2
 8000f16:	4699      	mov	r9, r3
 8000f18:	688a      	ldr	r2, [r1, #8]
 8000f1a:	690b      	ldr	r3, [r1, #16]
 8000f1c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f20:	4293      	cmp	r3, r2
 8000f22:	bfb8      	it	lt
 8000f24:	4613      	movlt	r3, r2
 8000f26:	6033      	str	r3, [r6, #0]
 8000f28:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f2c:	4607      	mov	r7, r0
 8000f2e:	460c      	mov	r4, r1
 8000f30:	b10a      	cbz	r2, 8000f36 <_printf_common+0x26>
 8000f32:	3301      	adds	r3, #1
 8000f34:	6033      	str	r3, [r6, #0]
 8000f36:	6823      	ldr	r3, [r4, #0]
 8000f38:	0699      	lsls	r1, r3, #26
 8000f3a:	bf42      	ittt	mi
 8000f3c:	6833      	ldrmi	r3, [r6, #0]
 8000f3e:	3302      	addmi	r3, #2
 8000f40:	6033      	strmi	r3, [r6, #0]
 8000f42:	6825      	ldr	r5, [r4, #0]
 8000f44:	f015 0506 	ands.w	r5, r5, #6
 8000f48:	d106      	bne.n	8000f58 <_printf_common+0x48>
 8000f4a:	f104 0a19 	add.w	sl, r4, #25
 8000f4e:	68e3      	ldr	r3, [r4, #12]
 8000f50:	6832      	ldr	r2, [r6, #0]
 8000f52:	1a9b      	subs	r3, r3, r2
 8000f54:	42ab      	cmp	r3, r5
 8000f56:	dc26      	bgt.n	8000fa6 <_printf_common+0x96>
 8000f58:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f5c:	1e13      	subs	r3, r2, #0
 8000f5e:	6822      	ldr	r2, [r4, #0]
 8000f60:	bf18      	it	ne
 8000f62:	2301      	movne	r3, #1
 8000f64:	0692      	lsls	r2, r2, #26
 8000f66:	d42b      	bmi.n	8000fc0 <_printf_common+0xb0>
 8000f68:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f6c:	4649      	mov	r1, r9
 8000f6e:	4638      	mov	r0, r7
 8000f70:	47c0      	blx	r8
 8000f72:	3001      	adds	r0, #1
 8000f74:	d01e      	beq.n	8000fb4 <_printf_common+0xa4>
 8000f76:	6823      	ldr	r3, [r4, #0]
 8000f78:	6922      	ldr	r2, [r4, #16]
 8000f7a:	f003 0306 	and.w	r3, r3, #6
 8000f7e:	2b04      	cmp	r3, #4
 8000f80:	bf02      	ittt	eq
 8000f82:	68e5      	ldreq	r5, [r4, #12]
 8000f84:	6833      	ldreq	r3, [r6, #0]
 8000f86:	1aed      	subeq	r5, r5, r3
 8000f88:	68a3      	ldr	r3, [r4, #8]
 8000f8a:	bf0c      	ite	eq
 8000f8c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f90:	2500      	movne	r5, #0
 8000f92:	4293      	cmp	r3, r2
 8000f94:	bfc4      	itt	gt
 8000f96:	1a9b      	subgt	r3, r3, r2
 8000f98:	18ed      	addgt	r5, r5, r3
 8000f9a:	2600      	movs	r6, #0
 8000f9c:	341a      	adds	r4, #26
 8000f9e:	42b5      	cmp	r5, r6
 8000fa0:	d11a      	bne.n	8000fd8 <_printf_common+0xc8>
 8000fa2:	2000      	movs	r0, #0
 8000fa4:	e008      	b.n	8000fb8 <_printf_common+0xa8>
 8000fa6:	2301      	movs	r3, #1
 8000fa8:	4652      	mov	r2, sl
 8000faa:	4649      	mov	r1, r9
 8000fac:	4638      	mov	r0, r7
 8000fae:	47c0      	blx	r8
 8000fb0:	3001      	adds	r0, #1
 8000fb2:	d103      	bne.n	8000fbc <_printf_common+0xac>
 8000fb4:	f04f 30ff 	mov.w	r0, #4294967295
 8000fb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fbc:	3501      	adds	r5, #1
 8000fbe:	e7c6      	b.n	8000f4e <_printf_common+0x3e>
 8000fc0:	18e1      	adds	r1, r4, r3
 8000fc2:	1c5a      	adds	r2, r3, #1
 8000fc4:	2030      	movs	r0, #48	; 0x30
 8000fc6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000fca:	4422      	add	r2, r4
 8000fcc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000fd0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000fd4:	3302      	adds	r3, #2
 8000fd6:	e7c7      	b.n	8000f68 <_printf_common+0x58>
 8000fd8:	2301      	movs	r3, #1
 8000fda:	4622      	mov	r2, r4
 8000fdc:	4649      	mov	r1, r9
 8000fde:	4638      	mov	r0, r7
 8000fe0:	47c0      	blx	r8
 8000fe2:	3001      	adds	r0, #1
 8000fe4:	d0e6      	beq.n	8000fb4 <_printf_common+0xa4>
 8000fe6:	3601      	adds	r6, #1
 8000fe8:	e7d9      	b.n	8000f9e <_printf_common+0x8e>
	...

08000fec <_printf_i>:
 8000fec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ff0:	7e0f      	ldrb	r7, [r1, #24]
 8000ff2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000ff4:	2f78      	cmp	r7, #120	; 0x78
 8000ff6:	4691      	mov	r9, r2
 8000ff8:	4680      	mov	r8, r0
 8000ffa:	460c      	mov	r4, r1
 8000ffc:	469a      	mov	sl, r3
 8000ffe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001002:	d807      	bhi.n	8001014 <_printf_i+0x28>
 8001004:	2f62      	cmp	r7, #98	; 0x62
 8001006:	d80a      	bhi.n	800101e <_printf_i+0x32>
 8001008:	2f00      	cmp	r7, #0
 800100a:	f000 80d4 	beq.w	80011b6 <_printf_i+0x1ca>
 800100e:	2f58      	cmp	r7, #88	; 0x58
 8001010:	f000 80c0 	beq.w	8001194 <_printf_i+0x1a8>
 8001014:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001018:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800101c:	e03a      	b.n	8001094 <_printf_i+0xa8>
 800101e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001022:	2b15      	cmp	r3, #21
 8001024:	d8f6      	bhi.n	8001014 <_printf_i+0x28>
 8001026:	a101      	add	r1, pc, #4	; (adr r1, 800102c <_printf_i+0x40>)
 8001028:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800102c:	08001085 	.word	0x08001085
 8001030:	08001099 	.word	0x08001099
 8001034:	08001015 	.word	0x08001015
 8001038:	08001015 	.word	0x08001015
 800103c:	08001015 	.word	0x08001015
 8001040:	08001015 	.word	0x08001015
 8001044:	08001099 	.word	0x08001099
 8001048:	08001015 	.word	0x08001015
 800104c:	08001015 	.word	0x08001015
 8001050:	08001015 	.word	0x08001015
 8001054:	08001015 	.word	0x08001015
 8001058:	0800119d 	.word	0x0800119d
 800105c:	080010c5 	.word	0x080010c5
 8001060:	08001157 	.word	0x08001157
 8001064:	08001015 	.word	0x08001015
 8001068:	08001015 	.word	0x08001015
 800106c:	080011bf 	.word	0x080011bf
 8001070:	08001015 	.word	0x08001015
 8001074:	080010c5 	.word	0x080010c5
 8001078:	08001015 	.word	0x08001015
 800107c:	08001015 	.word	0x08001015
 8001080:	0800115f 	.word	0x0800115f
 8001084:	682b      	ldr	r3, [r5, #0]
 8001086:	1d1a      	adds	r2, r3, #4
 8001088:	681b      	ldr	r3, [r3, #0]
 800108a:	602a      	str	r2, [r5, #0]
 800108c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001090:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001094:	2301      	movs	r3, #1
 8001096:	e09f      	b.n	80011d8 <_printf_i+0x1ec>
 8001098:	6820      	ldr	r0, [r4, #0]
 800109a:	682b      	ldr	r3, [r5, #0]
 800109c:	0607      	lsls	r7, r0, #24
 800109e:	f103 0104 	add.w	r1, r3, #4
 80010a2:	6029      	str	r1, [r5, #0]
 80010a4:	d501      	bpl.n	80010aa <_printf_i+0xbe>
 80010a6:	681e      	ldr	r6, [r3, #0]
 80010a8:	e003      	b.n	80010b2 <_printf_i+0xc6>
 80010aa:	0646      	lsls	r6, r0, #25
 80010ac:	d5fb      	bpl.n	80010a6 <_printf_i+0xba>
 80010ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 80010b2:	2e00      	cmp	r6, #0
 80010b4:	da03      	bge.n	80010be <_printf_i+0xd2>
 80010b6:	232d      	movs	r3, #45	; 0x2d
 80010b8:	4276      	negs	r6, r6
 80010ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010be:	485a      	ldr	r0, [pc, #360]	; (8001228 <_printf_i+0x23c>)
 80010c0:	230a      	movs	r3, #10
 80010c2:	e012      	b.n	80010ea <_printf_i+0xfe>
 80010c4:	682b      	ldr	r3, [r5, #0]
 80010c6:	6820      	ldr	r0, [r4, #0]
 80010c8:	1d19      	adds	r1, r3, #4
 80010ca:	6029      	str	r1, [r5, #0]
 80010cc:	0605      	lsls	r5, r0, #24
 80010ce:	d501      	bpl.n	80010d4 <_printf_i+0xe8>
 80010d0:	681e      	ldr	r6, [r3, #0]
 80010d2:	e002      	b.n	80010da <_printf_i+0xee>
 80010d4:	0641      	lsls	r1, r0, #25
 80010d6:	d5fb      	bpl.n	80010d0 <_printf_i+0xe4>
 80010d8:	881e      	ldrh	r6, [r3, #0]
 80010da:	4853      	ldr	r0, [pc, #332]	; (8001228 <_printf_i+0x23c>)
 80010dc:	2f6f      	cmp	r7, #111	; 0x6f
 80010de:	bf0c      	ite	eq
 80010e0:	2308      	moveq	r3, #8
 80010e2:	230a      	movne	r3, #10
 80010e4:	2100      	movs	r1, #0
 80010e6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010ea:	6865      	ldr	r5, [r4, #4]
 80010ec:	60a5      	str	r5, [r4, #8]
 80010ee:	2d00      	cmp	r5, #0
 80010f0:	bfa2      	ittt	ge
 80010f2:	6821      	ldrge	r1, [r4, #0]
 80010f4:	f021 0104 	bicge.w	r1, r1, #4
 80010f8:	6021      	strge	r1, [r4, #0]
 80010fa:	b90e      	cbnz	r6, 8001100 <_printf_i+0x114>
 80010fc:	2d00      	cmp	r5, #0
 80010fe:	d04b      	beq.n	8001198 <_printf_i+0x1ac>
 8001100:	4615      	mov	r5, r2
 8001102:	fbb6 f1f3 	udiv	r1, r6, r3
 8001106:	fb03 6711 	mls	r7, r3, r1, r6
 800110a:	5dc7      	ldrb	r7, [r0, r7]
 800110c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001110:	4637      	mov	r7, r6
 8001112:	42bb      	cmp	r3, r7
 8001114:	460e      	mov	r6, r1
 8001116:	d9f4      	bls.n	8001102 <_printf_i+0x116>
 8001118:	2b08      	cmp	r3, #8
 800111a:	d10b      	bne.n	8001134 <_printf_i+0x148>
 800111c:	6823      	ldr	r3, [r4, #0]
 800111e:	07de      	lsls	r6, r3, #31
 8001120:	d508      	bpl.n	8001134 <_printf_i+0x148>
 8001122:	6923      	ldr	r3, [r4, #16]
 8001124:	6861      	ldr	r1, [r4, #4]
 8001126:	4299      	cmp	r1, r3
 8001128:	bfde      	ittt	le
 800112a:	2330      	movle	r3, #48	; 0x30
 800112c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001130:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001134:	1b52      	subs	r2, r2, r5
 8001136:	6122      	str	r2, [r4, #16]
 8001138:	f8cd a000 	str.w	sl, [sp]
 800113c:	464b      	mov	r3, r9
 800113e:	aa03      	add	r2, sp, #12
 8001140:	4621      	mov	r1, r4
 8001142:	4640      	mov	r0, r8
 8001144:	f7ff fee4 	bl	8000f10 <_printf_common>
 8001148:	3001      	adds	r0, #1
 800114a:	d14a      	bne.n	80011e2 <_printf_i+0x1f6>
 800114c:	f04f 30ff 	mov.w	r0, #4294967295
 8001150:	b004      	add	sp, #16
 8001152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001156:	6823      	ldr	r3, [r4, #0]
 8001158:	f043 0320 	orr.w	r3, r3, #32
 800115c:	6023      	str	r3, [r4, #0]
 800115e:	4833      	ldr	r0, [pc, #204]	; (800122c <_printf_i+0x240>)
 8001160:	2778      	movs	r7, #120	; 0x78
 8001162:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001166:	6823      	ldr	r3, [r4, #0]
 8001168:	6829      	ldr	r1, [r5, #0]
 800116a:	061f      	lsls	r7, r3, #24
 800116c:	f851 6b04 	ldr.w	r6, [r1], #4
 8001170:	d402      	bmi.n	8001178 <_printf_i+0x18c>
 8001172:	065f      	lsls	r7, r3, #25
 8001174:	bf48      	it	mi
 8001176:	b2b6      	uxthmi	r6, r6
 8001178:	07df      	lsls	r7, r3, #31
 800117a:	bf48      	it	mi
 800117c:	f043 0320 	orrmi.w	r3, r3, #32
 8001180:	6029      	str	r1, [r5, #0]
 8001182:	bf48      	it	mi
 8001184:	6023      	strmi	r3, [r4, #0]
 8001186:	b91e      	cbnz	r6, 8001190 <_printf_i+0x1a4>
 8001188:	6823      	ldr	r3, [r4, #0]
 800118a:	f023 0320 	bic.w	r3, r3, #32
 800118e:	6023      	str	r3, [r4, #0]
 8001190:	2310      	movs	r3, #16
 8001192:	e7a7      	b.n	80010e4 <_printf_i+0xf8>
 8001194:	4824      	ldr	r0, [pc, #144]	; (8001228 <_printf_i+0x23c>)
 8001196:	e7e4      	b.n	8001162 <_printf_i+0x176>
 8001198:	4615      	mov	r5, r2
 800119a:	e7bd      	b.n	8001118 <_printf_i+0x12c>
 800119c:	682b      	ldr	r3, [r5, #0]
 800119e:	6826      	ldr	r6, [r4, #0]
 80011a0:	6961      	ldr	r1, [r4, #20]
 80011a2:	1d18      	adds	r0, r3, #4
 80011a4:	6028      	str	r0, [r5, #0]
 80011a6:	0635      	lsls	r5, r6, #24
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	d501      	bpl.n	80011b0 <_printf_i+0x1c4>
 80011ac:	6019      	str	r1, [r3, #0]
 80011ae:	e002      	b.n	80011b6 <_printf_i+0x1ca>
 80011b0:	0670      	lsls	r0, r6, #25
 80011b2:	d5fb      	bpl.n	80011ac <_printf_i+0x1c0>
 80011b4:	8019      	strh	r1, [r3, #0]
 80011b6:	2300      	movs	r3, #0
 80011b8:	6123      	str	r3, [r4, #16]
 80011ba:	4615      	mov	r5, r2
 80011bc:	e7bc      	b.n	8001138 <_printf_i+0x14c>
 80011be:	682b      	ldr	r3, [r5, #0]
 80011c0:	1d1a      	adds	r2, r3, #4
 80011c2:	602a      	str	r2, [r5, #0]
 80011c4:	681d      	ldr	r5, [r3, #0]
 80011c6:	6862      	ldr	r2, [r4, #4]
 80011c8:	2100      	movs	r1, #0
 80011ca:	4628      	mov	r0, r5
 80011cc:	f7ff f800 	bl	80001d0 <memchr>
 80011d0:	b108      	cbz	r0, 80011d6 <_printf_i+0x1ea>
 80011d2:	1b40      	subs	r0, r0, r5
 80011d4:	6060      	str	r0, [r4, #4]
 80011d6:	6863      	ldr	r3, [r4, #4]
 80011d8:	6123      	str	r3, [r4, #16]
 80011da:	2300      	movs	r3, #0
 80011dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011e0:	e7aa      	b.n	8001138 <_printf_i+0x14c>
 80011e2:	6923      	ldr	r3, [r4, #16]
 80011e4:	462a      	mov	r2, r5
 80011e6:	4649      	mov	r1, r9
 80011e8:	4640      	mov	r0, r8
 80011ea:	47d0      	blx	sl
 80011ec:	3001      	adds	r0, #1
 80011ee:	d0ad      	beq.n	800114c <_printf_i+0x160>
 80011f0:	6823      	ldr	r3, [r4, #0]
 80011f2:	079b      	lsls	r3, r3, #30
 80011f4:	d413      	bmi.n	800121e <_printf_i+0x232>
 80011f6:	68e0      	ldr	r0, [r4, #12]
 80011f8:	9b03      	ldr	r3, [sp, #12]
 80011fa:	4298      	cmp	r0, r3
 80011fc:	bfb8      	it	lt
 80011fe:	4618      	movlt	r0, r3
 8001200:	e7a6      	b.n	8001150 <_printf_i+0x164>
 8001202:	2301      	movs	r3, #1
 8001204:	4632      	mov	r2, r6
 8001206:	4649      	mov	r1, r9
 8001208:	4640      	mov	r0, r8
 800120a:	47d0      	blx	sl
 800120c:	3001      	adds	r0, #1
 800120e:	d09d      	beq.n	800114c <_printf_i+0x160>
 8001210:	3501      	adds	r5, #1
 8001212:	68e3      	ldr	r3, [r4, #12]
 8001214:	9903      	ldr	r1, [sp, #12]
 8001216:	1a5b      	subs	r3, r3, r1
 8001218:	42ab      	cmp	r3, r5
 800121a:	dcf2      	bgt.n	8001202 <_printf_i+0x216>
 800121c:	e7eb      	b.n	80011f6 <_printf_i+0x20a>
 800121e:	2500      	movs	r5, #0
 8001220:	f104 0619 	add.w	r6, r4, #25
 8001224:	e7f5      	b.n	8001212 <_printf_i+0x226>
 8001226:	bf00      	nop
 8001228:	08001593 	.word	0x08001593
 800122c:	080015a4 	.word	0x080015a4

08001230 <__sflush_r>:
 8001230:	898a      	ldrh	r2, [r1, #12]
 8001232:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001236:	4605      	mov	r5, r0
 8001238:	0710      	lsls	r0, r2, #28
 800123a:	460c      	mov	r4, r1
 800123c:	d458      	bmi.n	80012f0 <__sflush_r+0xc0>
 800123e:	684b      	ldr	r3, [r1, #4]
 8001240:	2b00      	cmp	r3, #0
 8001242:	dc05      	bgt.n	8001250 <__sflush_r+0x20>
 8001244:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001246:	2b00      	cmp	r3, #0
 8001248:	dc02      	bgt.n	8001250 <__sflush_r+0x20>
 800124a:	2000      	movs	r0, #0
 800124c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001250:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001252:	2e00      	cmp	r6, #0
 8001254:	d0f9      	beq.n	800124a <__sflush_r+0x1a>
 8001256:	2300      	movs	r3, #0
 8001258:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800125c:	682f      	ldr	r7, [r5, #0]
 800125e:	6a21      	ldr	r1, [r4, #32]
 8001260:	602b      	str	r3, [r5, #0]
 8001262:	d032      	beq.n	80012ca <__sflush_r+0x9a>
 8001264:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001266:	89a3      	ldrh	r3, [r4, #12]
 8001268:	075a      	lsls	r2, r3, #29
 800126a:	d505      	bpl.n	8001278 <__sflush_r+0x48>
 800126c:	6863      	ldr	r3, [r4, #4]
 800126e:	1ac0      	subs	r0, r0, r3
 8001270:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001272:	b10b      	cbz	r3, 8001278 <__sflush_r+0x48>
 8001274:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001276:	1ac0      	subs	r0, r0, r3
 8001278:	2300      	movs	r3, #0
 800127a:	4602      	mov	r2, r0
 800127c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800127e:	6a21      	ldr	r1, [r4, #32]
 8001280:	4628      	mov	r0, r5
 8001282:	47b0      	blx	r6
 8001284:	1c43      	adds	r3, r0, #1
 8001286:	89a3      	ldrh	r3, [r4, #12]
 8001288:	d106      	bne.n	8001298 <__sflush_r+0x68>
 800128a:	6829      	ldr	r1, [r5, #0]
 800128c:	291d      	cmp	r1, #29
 800128e:	d82b      	bhi.n	80012e8 <__sflush_r+0xb8>
 8001290:	4a29      	ldr	r2, [pc, #164]	; (8001338 <__sflush_r+0x108>)
 8001292:	410a      	asrs	r2, r1
 8001294:	07d6      	lsls	r6, r2, #31
 8001296:	d427      	bmi.n	80012e8 <__sflush_r+0xb8>
 8001298:	2200      	movs	r2, #0
 800129a:	6062      	str	r2, [r4, #4]
 800129c:	04d9      	lsls	r1, r3, #19
 800129e:	6922      	ldr	r2, [r4, #16]
 80012a0:	6022      	str	r2, [r4, #0]
 80012a2:	d504      	bpl.n	80012ae <__sflush_r+0x7e>
 80012a4:	1c42      	adds	r2, r0, #1
 80012a6:	d101      	bne.n	80012ac <__sflush_r+0x7c>
 80012a8:	682b      	ldr	r3, [r5, #0]
 80012aa:	b903      	cbnz	r3, 80012ae <__sflush_r+0x7e>
 80012ac:	6560      	str	r0, [r4, #84]	; 0x54
 80012ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012b0:	602f      	str	r7, [r5, #0]
 80012b2:	2900      	cmp	r1, #0
 80012b4:	d0c9      	beq.n	800124a <__sflush_r+0x1a>
 80012b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012ba:	4299      	cmp	r1, r3
 80012bc:	d002      	beq.n	80012c4 <__sflush_r+0x94>
 80012be:	4628      	mov	r0, r5
 80012c0:	f7ff fbea 	bl	8000a98 <_free_r>
 80012c4:	2000      	movs	r0, #0
 80012c6:	6360      	str	r0, [r4, #52]	; 0x34
 80012c8:	e7c0      	b.n	800124c <__sflush_r+0x1c>
 80012ca:	2301      	movs	r3, #1
 80012cc:	4628      	mov	r0, r5
 80012ce:	47b0      	blx	r6
 80012d0:	1c41      	adds	r1, r0, #1
 80012d2:	d1c8      	bne.n	8001266 <__sflush_r+0x36>
 80012d4:	682b      	ldr	r3, [r5, #0]
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d0c5      	beq.n	8001266 <__sflush_r+0x36>
 80012da:	2b1d      	cmp	r3, #29
 80012dc:	d001      	beq.n	80012e2 <__sflush_r+0xb2>
 80012de:	2b16      	cmp	r3, #22
 80012e0:	d101      	bne.n	80012e6 <__sflush_r+0xb6>
 80012e2:	602f      	str	r7, [r5, #0]
 80012e4:	e7b1      	b.n	800124a <__sflush_r+0x1a>
 80012e6:	89a3      	ldrh	r3, [r4, #12]
 80012e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012ec:	81a3      	strh	r3, [r4, #12]
 80012ee:	e7ad      	b.n	800124c <__sflush_r+0x1c>
 80012f0:	690f      	ldr	r7, [r1, #16]
 80012f2:	2f00      	cmp	r7, #0
 80012f4:	d0a9      	beq.n	800124a <__sflush_r+0x1a>
 80012f6:	0793      	lsls	r3, r2, #30
 80012f8:	680e      	ldr	r6, [r1, #0]
 80012fa:	bf08      	it	eq
 80012fc:	694b      	ldreq	r3, [r1, #20]
 80012fe:	600f      	str	r7, [r1, #0]
 8001300:	bf18      	it	ne
 8001302:	2300      	movne	r3, #0
 8001304:	eba6 0807 	sub.w	r8, r6, r7
 8001308:	608b      	str	r3, [r1, #8]
 800130a:	f1b8 0f00 	cmp.w	r8, #0
 800130e:	dd9c      	ble.n	800124a <__sflush_r+0x1a>
 8001310:	6a21      	ldr	r1, [r4, #32]
 8001312:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001314:	4643      	mov	r3, r8
 8001316:	463a      	mov	r2, r7
 8001318:	4628      	mov	r0, r5
 800131a:	47b0      	blx	r6
 800131c:	2800      	cmp	r0, #0
 800131e:	dc06      	bgt.n	800132e <__sflush_r+0xfe>
 8001320:	89a3      	ldrh	r3, [r4, #12]
 8001322:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001326:	81a3      	strh	r3, [r4, #12]
 8001328:	f04f 30ff 	mov.w	r0, #4294967295
 800132c:	e78e      	b.n	800124c <__sflush_r+0x1c>
 800132e:	4407      	add	r7, r0
 8001330:	eba8 0800 	sub.w	r8, r8, r0
 8001334:	e7e9      	b.n	800130a <__sflush_r+0xda>
 8001336:	bf00      	nop
 8001338:	dfbffffe 	.word	0xdfbffffe

0800133c <_fflush_r>:
 800133c:	b538      	push	{r3, r4, r5, lr}
 800133e:	690b      	ldr	r3, [r1, #16]
 8001340:	4605      	mov	r5, r0
 8001342:	460c      	mov	r4, r1
 8001344:	b913      	cbnz	r3, 800134c <_fflush_r+0x10>
 8001346:	2500      	movs	r5, #0
 8001348:	4628      	mov	r0, r5
 800134a:	bd38      	pop	{r3, r4, r5, pc}
 800134c:	b118      	cbz	r0, 8001356 <_fflush_r+0x1a>
 800134e:	6a03      	ldr	r3, [r0, #32]
 8001350:	b90b      	cbnz	r3, 8001356 <_fflush_r+0x1a>
 8001352:	f7ff f9a9 	bl	80006a8 <__sinit>
 8001356:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800135a:	2b00      	cmp	r3, #0
 800135c:	d0f3      	beq.n	8001346 <_fflush_r+0xa>
 800135e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001360:	07d0      	lsls	r0, r2, #31
 8001362:	d404      	bmi.n	800136e <_fflush_r+0x32>
 8001364:	0599      	lsls	r1, r3, #22
 8001366:	d402      	bmi.n	800136e <_fflush_r+0x32>
 8001368:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800136a:	f7ff fb92 	bl	8000a92 <__retarget_lock_acquire_recursive>
 800136e:	4628      	mov	r0, r5
 8001370:	4621      	mov	r1, r4
 8001372:	f7ff ff5d 	bl	8001230 <__sflush_r>
 8001376:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001378:	07da      	lsls	r2, r3, #31
 800137a:	4605      	mov	r5, r0
 800137c:	d4e4      	bmi.n	8001348 <_fflush_r+0xc>
 800137e:	89a3      	ldrh	r3, [r4, #12]
 8001380:	059b      	lsls	r3, r3, #22
 8001382:	d4e1      	bmi.n	8001348 <_fflush_r+0xc>
 8001384:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001386:	f7ff fb85 	bl	8000a94 <__retarget_lock_release_recursive>
 800138a:	e7dd      	b.n	8001348 <_fflush_r+0xc>

0800138c <__swhatbuf_r>:
 800138c:	b570      	push	{r4, r5, r6, lr}
 800138e:	460c      	mov	r4, r1
 8001390:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001394:	2900      	cmp	r1, #0
 8001396:	b096      	sub	sp, #88	; 0x58
 8001398:	4615      	mov	r5, r2
 800139a:	461e      	mov	r6, r3
 800139c:	da0d      	bge.n	80013ba <__swhatbuf_r+0x2e>
 800139e:	89a3      	ldrh	r3, [r4, #12]
 80013a0:	f013 0f80 	tst.w	r3, #128	; 0x80
 80013a4:	f04f 0100 	mov.w	r1, #0
 80013a8:	bf0c      	ite	eq
 80013aa:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80013ae:	2340      	movne	r3, #64	; 0x40
 80013b0:	2000      	movs	r0, #0
 80013b2:	6031      	str	r1, [r6, #0]
 80013b4:	602b      	str	r3, [r5, #0]
 80013b6:	b016      	add	sp, #88	; 0x58
 80013b8:	bd70      	pop	{r4, r5, r6, pc}
 80013ba:	466a      	mov	r2, sp
 80013bc:	f000 f848 	bl	8001450 <_fstat_r>
 80013c0:	2800      	cmp	r0, #0
 80013c2:	dbec      	blt.n	800139e <__swhatbuf_r+0x12>
 80013c4:	9901      	ldr	r1, [sp, #4]
 80013c6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80013ca:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80013ce:	4259      	negs	r1, r3
 80013d0:	4159      	adcs	r1, r3
 80013d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013d6:	e7eb      	b.n	80013b0 <__swhatbuf_r+0x24>

080013d8 <__smakebuf_r>:
 80013d8:	898b      	ldrh	r3, [r1, #12]
 80013da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013dc:	079d      	lsls	r5, r3, #30
 80013de:	4606      	mov	r6, r0
 80013e0:	460c      	mov	r4, r1
 80013e2:	d507      	bpl.n	80013f4 <__smakebuf_r+0x1c>
 80013e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013e8:	6023      	str	r3, [r4, #0]
 80013ea:	6123      	str	r3, [r4, #16]
 80013ec:	2301      	movs	r3, #1
 80013ee:	6163      	str	r3, [r4, #20]
 80013f0:	b002      	add	sp, #8
 80013f2:	bd70      	pop	{r4, r5, r6, pc}
 80013f4:	ab01      	add	r3, sp, #4
 80013f6:	466a      	mov	r2, sp
 80013f8:	f7ff ffc8 	bl	800138c <__swhatbuf_r>
 80013fc:	9900      	ldr	r1, [sp, #0]
 80013fe:	4605      	mov	r5, r0
 8001400:	4630      	mov	r0, r6
 8001402:	f7ff fbb5 	bl	8000b70 <_malloc_r>
 8001406:	b948      	cbnz	r0, 800141c <__smakebuf_r+0x44>
 8001408:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800140c:	059a      	lsls	r2, r3, #22
 800140e:	d4ef      	bmi.n	80013f0 <__smakebuf_r+0x18>
 8001410:	f023 0303 	bic.w	r3, r3, #3
 8001414:	f043 0302 	orr.w	r3, r3, #2
 8001418:	81a3      	strh	r3, [r4, #12]
 800141a:	e7e3      	b.n	80013e4 <__smakebuf_r+0xc>
 800141c:	89a3      	ldrh	r3, [r4, #12]
 800141e:	6020      	str	r0, [r4, #0]
 8001420:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001424:	81a3      	strh	r3, [r4, #12]
 8001426:	9b00      	ldr	r3, [sp, #0]
 8001428:	6163      	str	r3, [r4, #20]
 800142a:	9b01      	ldr	r3, [sp, #4]
 800142c:	6120      	str	r0, [r4, #16]
 800142e:	b15b      	cbz	r3, 8001448 <__smakebuf_r+0x70>
 8001430:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001434:	4630      	mov	r0, r6
 8001436:	f000 f81d 	bl	8001474 <_isatty_r>
 800143a:	b128      	cbz	r0, 8001448 <__smakebuf_r+0x70>
 800143c:	89a3      	ldrh	r3, [r4, #12]
 800143e:	f023 0303 	bic.w	r3, r3, #3
 8001442:	f043 0301 	orr.w	r3, r3, #1
 8001446:	81a3      	strh	r3, [r4, #12]
 8001448:	89a3      	ldrh	r3, [r4, #12]
 800144a:	431d      	orrs	r5, r3
 800144c:	81a5      	strh	r5, [r4, #12]
 800144e:	e7cf      	b.n	80013f0 <__smakebuf_r+0x18>

08001450 <_fstat_r>:
 8001450:	b538      	push	{r3, r4, r5, lr}
 8001452:	4d07      	ldr	r5, [pc, #28]	; (8001470 <_fstat_r+0x20>)
 8001454:	2300      	movs	r3, #0
 8001456:	4604      	mov	r4, r0
 8001458:	4608      	mov	r0, r1
 800145a:	4611      	mov	r1, r2
 800145c:	602b      	str	r3, [r5, #0]
 800145e:	f7ff f80e 	bl	800047e <_fstat>
 8001462:	1c43      	adds	r3, r0, #1
 8001464:	d102      	bne.n	800146c <_fstat_r+0x1c>
 8001466:	682b      	ldr	r3, [r5, #0]
 8001468:	b103      	cbz	r3, 800146c <_fstat_r+0x1c>
 800146a:	6023      	str	r3, [r4, #0]
 800146c:	bd38      	pop	{r3, r4, r5, pc}
 800146e:	bf00      	nop
 8001470:	200001b8 	.word	0x200001b8

08001474 <_isatty_r>:
 8001474:	b538      	push	{r3, r4, r5, lr}
 8001476:	4d06      	ldr	r5, [pc, #24]	; (8001490 <_isatty_r+0x1c>)
 8001478:	2300      	movs	r3, #0
 800147a:	4604      	mov	r4, r0
 800147c:	4608      	mov	r0, r1
 800147e:	602b      	str	r3, [r5, #0]
 8001480:	f7ff f80d 	bl	800049e <_isatty>
 8001484:	1c43      	adds	r3, r0, #1
 8001486:	d102      	bne.n	800148e <_isatty_r+0x1a>
 8001488:	682b      	ldr	r3, [r5, #0]
 800148a:	b103      	cbz	r3, 800148e <_isatty_r+0x1a>
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	bd38      	pop	{r3, r4, r5, pc}
 8001490:	200001b8 	.word	0x200001b8

08001494 <_sbrk_r>:
 8001494:	b538      	push	{r3, r4, r5, lr}
 8001496:	4d06      	ldr	r5, [pc, #24]	; (80014b0 <_sbrk_r+0x1c>)
 8001498:	2300      	movs	r3, #0
 800149a:	4604      	mov	r4, r0
 800149c:	4608      	mov	r0, r1
 800149e:	602b      	str	r3, [r5, #0]
 80014a0:	f7ff f816 	bl	80004d0 <_sbrk>
 80014a4:	1c43      	adds	r3, r0, #1
 80014a6:	d102      	bne.n	80014ae <_sbrk_r+0x1a>
 80014a8:	682b      	ldr	r3, [r5, #0]
 80014aa:	b103      	cbz	r3, 80014ae <_sbrk_r+0x1a>
 80014ac:	6023      	str	r3, [r4, #0]
 80014ae:	bd38      	pop	{r3, r4, r5, pc}
 80014b0:	200001b8 	.word	0x200001b8

080014b4 <_init>:
 80014b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b6:	bf00      	nop
 80014b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ba:	bc08      	pop	{r3}
 80014bc:	469e      	mov	lr, r3
 80014be:	4770      	bx	lr

080014c0 <_fini>:
 80014c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014c2:	bf00      	nop
 80014c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014c6:	bc08      	pop	{r3}
 80014c8:	469e      	mov	lr, r3
 80014ca:	4770      	bx	lr
