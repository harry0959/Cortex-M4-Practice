
stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001254  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000054  080013e4  080013e4  000113e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001438  08001438  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001438  08001438  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001438  08001438  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001438  08001438  00011438  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800143c  0800143c  0001143c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001440  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   0000098d  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000372  00000000  00000000  00020a5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000130  00000000  00000000  00020dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000d0  00000000  00000000  00020f00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0000298b  00000000  00000000  00020fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001338  00000000  00000000  0002395b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000972c  00000000  00000000  00024c93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b94  00000000  00000000  0002e3c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000041  00000000  00000000  0002ef54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080013cc 	.word	0x080013cc

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080013cc 	.word	0x080013cc

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <fun_add>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


int fun_add(int a, int b, int c, int d, int e, int f)
{
 8000270:	b480      	push	{r7}
 8000272:	b085      	sub	sp, #20
 8000274:	af00      	add	r7, sp, #0
 8000276:	60f8      	str	r0, [r7, #12]
 8000278:	60b9      	str	r1, [r7, #8]
 800027a:	607a      	str	r2, [r7, #4]
 800027c:	603b      	str	r3, [r7, #0]
	return a + b + c + d + e + f;
 800027e:	68fa      	ldr	r2, [r7, #12]
 8000280:	68bb      	ldr	r3, [r7, #8]
 8000282:	441a      	add	r2, r3
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	441a      	add	r2, r3
 8000288:	683b      	ldr	r3, [r7, #0]
 800028a:	441a      	add	r2, r3
 800028c:	69bb      	ldr	r3, [r7, #24]
 800028e:	441a      	add	r2, r3
 8000290:	69fb      	ldr	r3, [r7, #28]
 8000292:	4413      	add	r3, r2
}
 8000294:	4618      	mov	r0, r3
 8000296:	3714      	adds	r7, #20
 8000298:	46bd      	mov	sp, r7
 800029a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029e:	4770      	bx	lr

080002a0 <change_sp_to_psp>:

__attribute__((naked)) void change_sp_to_psp(void)
{
	__asm volatile(".equ SRAM_END, (0x2000000) + ( 128 * 1024)");
	__asm volatile(".equ PSP_START, (SRAM_END-512)");
	__asm volatile("LDR R0,=PSP_START");
 80002a0:	4803      	ldr	r0, [pc, #12]	; (80002b0 <change_sp_to_psp+0x10>)
	__asm volatile("MSR PSP, R0");
 80002a2:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0, #0x02");
 80002a6:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL, R0");
 80002aa:	f380 8814 	msr	CONTROL, r0
}
 80002ae:	bf00      	nop
 80002b0:	0201fe00 	.word	0x0201fe00

080002b4 <generate_exception>:

void generate_exception(void)
{
 80002b4:	b480      	push	{r7}
 80002b6:	af00      	add	r7, sp, #0
	__asm volatile("SVC #02");
 80002b8:	df02      	svc	2
}
 80002ba:	bf00      	nop
 80002bc:	46bd      	mov	sp, r7
 80002be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c2:	4770      	bx	lr

080002c4 <main>:

int main(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b084      	sub	sp, #16
 80002c8:	af02      	add	r7, sp, #8
	change_sp_to_psp();
 80002ca:	f7ff ffe9 	bl	80002a0 <change_sp_to_psp>

    int ret;

    ret = fun_add(1, 4 ,5 ,6, 7, 8);
 80002ce:	2308      	movs	r3, #8
 80002d0:	9301      	str	r3, [sp, #4]
 80002d2:	2307      	movs	r3, #7
 80002d4:	9300      	str	r3, [sp, #0]
 80002d6:	2306      	movs	r3, #6
 80002d8:	2205      	movs	r2, #5
 80002da:	2104      	movs	r1, #4
 80002dc:	2001      	movs	r0, #1
 80002de:	f7ff ffc7 	bl	8000270 <fun_add>
 80002e2:	6078      	str	r0, [r7, #4]

    printf("result = %d\n", ret);
 80002e4:	6879      	ldr	r1, [r7, #4]
 80002e6:	4803      	ldr	r0, [pc, #12]	; (80002f4 <main+0x30>)
 80002e8:	f000 f9a0 	bl	800062c <iprintf>

    generate_exception();
 80002ec:	f7ff ffe2 	bl	80002b4 <generate_exception>

	for(;;);
 80002f0:	e7fe      	b.n	80002f0 <main+0x2c>
 80002f2:	bf00      	nop
 80002f4:	080013e4 	.word	0x080013e4

080002f8 <SVC_Handler>:
}

void SVC_Handler(void)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	af00      	add	r7, sp, #0
	printf("in SVC_Handler\n");
 80002fc:	4802      	ldr	r0, [pc, #8]	; (8000308 <SVC_Handler+0x10>)
 80002fe:	f000 f9fb 	bl	80006f8 <puts>
}
 8000302:	bf00      	nop
 8000304:	bd80      	pop	{r7, pc}
 8000306:	bf00      	nop
 8000308:	080013f4 	.word	0x080013f4

0800030c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800030c:	b580      	push	{r7, lr}
 800030e:	b086      	sub	sp, #24
 8000310:	af00      	add	r7, sp, #0
 8000312:	60f8      	str	r0, [r7, #12]
 8000314:	60b9      	str	r1, [r7, #8]
 8000316:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000318:	2300      	movs	r3, #0
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	e00a      	b.n	8000334 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800031e:	f3af 8000 	nop.w
 8000322:	4601      	mov	r1, r0
 8000324:	68bb      	ldr	r3, [r7, #8]
 8000326:	1c5a      	adds	r2, r3, #1
 8000328:	60ba      	str	r2, [r7, #8]
 800032a:	b2ca      	uxtb	r2, r1
 800032c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf0      	blt.n	800031e <_read+0x12>
  }

  return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000346:	b580      	push	{r7, lr}
 8000348:	b086      	sub	sp, #24
 800034a:	af00      	add	r7, sp, #0
 800034c:	60f8      	str	r0, [r7, #12]
 800034e:	60b9      	str	r1, [r7, #8]
 8000350:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000352:	2300      	movs	r3, #0
 8000354:	617b      	str	r3, [r7, #20]
 8000356:	e009      	b.n	800036c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000358:	68bb      	ldr	r3, [r7, #8]
 800035a:	1c5a      	adds	r2, r3, #1
 800035c:	60ba      	str	r2, [r7, #8]
 800035e:	781b      	ldrb	r3, [r3, #0]
 8000360:	4618      	mov	r0, r3
 8000362:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000366:	697b      	ldr	r3, [r7, #20]
 8000368:	3301      	adds	r3, #1
 800036a:	617b      	str	r3, [r7, #20]
 800036c:	697a      	ldr	r2, [r7, #20]
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	429a      	cmp	r2, r3
 8000372:	dbf1      	blt.n	8000358 <_write+0x12>
  }
  return len;
 8000374:	687b      	ldr	r3, [r7, #4]
}
 8000376:	4618      	mov	r0, r3
 8000378:	3718      	adds	r7, #24
 800037a:	46bd      	mov	sp, r7
 800037c:	bd80      	pop	{r7, pc}

0800037e <_close>:

int _close(int file)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000386:	f04f 33ff 	mov.w	r3, #4294967295
}
 800038a:	4618      	mov	r0, r3
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr

08000396 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
 800039e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003a0:	683b      	ldr	r3, [r7, #0]
 80003a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003a6:	605a      	str	r2, [r3, #4]
  return 0;
 80003a8:	2300      	movs	r3, #0
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b4:	4770      	bx	lr

080003b6 <_isatty>:

int _isatty(int file)
{
 80003b6:	b480      	push	{r7}
 80003b8:	b083      	sub	sp, #12
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003be:	2301      	movs	r3, #1
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	370c      	adds	r7, #12
 80003c4:	46bd      	mov	sp, r7
 80003c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ca:	4770      	bx	lr

080003cc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003cc:	b480      	push	{r7}
 80003ce:	b085      	sub	sp, #20
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	60f8      	str	r0, [r7, #12]
 80003d4:	60b9      	str	r1, [r7, #8]
 80003d6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003d8:	2300      	movs	r3, #0
}
 80003da:	4618      	mov	r0, r3
 80003dc:	3714      	adds	r7, #20
 80003de:	46bd      	mov	sp, r7
 80003e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e4:	4770      	bx	lr
	...

080003e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003e8:	b580      	push	{r7, lr}
 80003ea:	b086      	sub	sp, #24
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003f0:	4a14      	ldr	r2, [pc, #80]	; (8000444 <_sbrk+0x5c>)
 80003f2:	4b15      	ldr	r3, [pc, #84]	; (8000448 <_sbrk+0x60>)
 80003f4:	1ad3      	subs	r3, r2, r3
 80003f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003f8:	697b      	ldr	r3, [r7, #20]
 80003fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003fc:	4b13      	ldr	r3, [pc, #76]	; (800044c <_sbrk+0x64>)
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	2b00      	cmp	r3, #0
 8000402:	d102      	bne.n	800040a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000404:	4b11      	ldr	r3, [pc, #68]	; (800044c <_sbrk+0x64>)
 8000406:	4a12      	ldr	r2, [pc, #72]	; (8000450 <_sbrk+0x68>)
 8000408:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800040a:	4b10      	ldr	r3, [pc, #64]	; (800044c <_sbrk+0x64>)
 800040c:	681a      	ldr	r2, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4413      	add	r3, r2
 8000412:	693a      	ldr	r2, [r7, #16]
 8000414:	429a      	cmp	r2, r3
 8000416:	d207      	bcs.n	8000428 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000418:	f000 fa9c 	bl	8000954 <__errno>
 800041c:	4603      	mov	r3, r0
 800041e:	220c      	movs	r2, #12
 8000420:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000422:	f04f 33ff 	mov.w	r3, #4294967295
 8000426:	e009      	b.n	800043c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000428:	4b08      	ldr	r3, [pc, #32]	; (800044c <_sbrk+0x64>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800042e:	4b07      	ldr	r3, [pc, #28]	; (800044c <_sbrk+0x64>)
 8000430:	681a      	ldr	r2, [r3, #0]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4413      	add	r3, r2
 8000436:	4a05      	ldr	r2, [pc, #20]	; (800044c <_sbrk+0x64>)
 8000438:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800043a:	68fb      	ldr	r3, [r7, #12]
}
 800043c:	4618      	mov	r0, r3
 800043e:	3718      	adds	r7, #24
 8000440:	46bd      	mov	sp, r7
 8000442:	bd80      	pop	{r7, pc}
 8000444:	20020000 	.word	0x20020000
 8000448:	00000400 	.word	0x00000400
 800044c:	20000078 	.word	0x20000078
 8000450:	200001c8 	.word	0x200001c8

08000454 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000454:	480d      	ldr	r0, [pc, #52]	; (800048c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000456:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000458:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800045c:	480c      	ldr	r0, [pc, #48]	; (8000490 <LoopForever+0x6>)
  ldr r1, =_edata
 800045e:	490d      	ldr	r1, [pc, #52]	; (8000494 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000460:	4a0d      	ldr	r2, [pc, #52]	; (8000498 <LoopForever+0xe>)
  movs r3, #0
 8000462:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000464:	e002      	b.n	800046c <LoopCopyDataInit>

08000466 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000466:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000468:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800046a:	3304      	adds	r3, #4

0800046c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800046c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800046e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000470:	d3f9      	bcc.n	8000466 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000472:	4a0a      	ldr	r2, [pc, #40]	; (800049c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000474:	4c0a      	ldr	r4, [pc, #40]	; (80004a0 <LoopForever+0x16>)
  movs r3, #0
 8000476:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000478:	e001      	b.n	800047e <LoopFillZerobss>

0800047a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800047a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800047c:	3204      	adds	r2, #4

0800047e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800047e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000480:	d3fb      	bcc.n	800047a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000482:	f000 fa6d 	bl	8000960 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000486:	f7ff ff1d 	bl	80002c4 <main>

0800048a <LoopForever>:

LoopForever:
  b LoopForever
 800048a:	e7fe      	b.n	800048a <LoopForever>
  ldr   r0, =_estack
 800048c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000490:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000494:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000498:	08001440 	.word	0x08001440
  ldr r2, =_sbss
 800049c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004a0:	200001c8 	.word	0x200001c8

080004a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004a4:	e7fe      	b.n	80004a4 <ADC_IRQHandler>
	...

080004a8 <std>:
 80004a8:	2300      	movs	r3, #0
 80004aa:	b510      	push	{r4, lr}
 80004ac:	4604      	mov	r4, r0
 80004ae:	e9c0 3300 	strd	r3, r3, [r0]
 80004b2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004b6:	6083      	str	r3, [r0, #8]
 80004b8:	8181      	strh	r1, [r0, #12]
 80004ba:	6643      	str	r3, [r0, #100]	; 0x64
 80004bc:	81c2      	strh	r2, [r0, #14]
 80004be:	6183      	str	r3, [r0, #24]
 80004c0:	4619      	mov	r1, r3
 80004c2:	2208      	movs	r2, #8
 80004c4:	305c      	adds	r0, #92	; 0x5c
 80004c6:	f000 f9f7 	bl	80008b8 <memset>
 80004ca:	4b0d      	ldr	r3, [pc, #52]	; (8000500 <std+0x58>)
 80004cc:	6263      	str	r3, [r4, #36]	; 0x24
 80004ce:	4b0d      	ldr	r3, [pc, #52]	; (8000504 <std+0x5c>)
 80004d0:	62a3      	str	r3, [r4, #40]	; 0x28
 80004d2:	4b0d      	ldr	r3, [pc, #52]	; (8000508 <std+0x60>)
 80004d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004d6:	4b0d      	ldr	r3, [pc, #52]	; (800050c <std+0x64>)
 80004d8:	6323      	str	r3, [r4, #48]	; 0x30
 80004da:	4b0d      	ldr	r3, [pc, #52]	; (8000510 <std+0x68>)
 80004dc:	6224      	str	r4, [r4, #32]
 80004de:	429c      	cmp	r4, r3
 80004e0:	d006      	beq.n	80004f0 <std+0x48>
 80004e2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80004e6:	4294      	cmp	r4, r2
 80004e8:	d002      	beq.n	80004f0 <std+0x48>
 80004ea:	33d0      	adds	r3, #208	; 0xd0
 80004ec:	429c      	cmp	r4, r3
 80004ee:	d105      	bne.n	80004fc <std+0x54>
 80004f0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80004f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004f8:	f000 ba56 	b.w	80009a8 <__retarget_lock_init_recursive>
 80004fc:	bd10      	pop	{r4, pc}
 80004fe:	bf00      	nop
 8000500:	08000709 	.word	0x08000709
 8000504:	0800072b 	.word	0x0800072b
 8000508:	08000763 	.word	0x08000763
 800050c:	08000787 	.word	0x08000787
 8000510:	2000007c 	.word	0x2000007c

08000514 <stdio_exit_handler>:
 8000514:	4a02      	ldr	r2, [pc, #8]	; (8000520 <stdio_exit_handler+0xc>)
 8000516:	4903      	ldr	r1, [pc, #12]	; (8000524 <stdio_exit_handler+0x10>)
 8000518:	4803      	ldr	r0, [pc, #12]	; (8000528 <stdio_exit_handler+0x14>)
 800051a:	f000 b869 	b.w	80005f0 <_fwalk_sglue>
 800051e:	bf00      	nop
 8000520:	20000000 	.word	0x20000000
 8000524:	08001255 	.word	0x08001255
 8000528:	2000000c 	.word	0x2000000c

0800052c <cleanup_stdio>:
 800052c:	6841      	ldr	r1, [r0, #4]
 800052e:	4b0c      	ldr	r3, [pc, #48]	; (8000560 <cleanup_stdio+0x34>)
 8000530:	4299      	cmp	r1, r3
 8000532:	b510      	push	{r4, lr}
 8000534:	4604      	mov	r4, r0
 8000536:	d001      	beq.n	800053c <cleanup_stdio+0x10>
 8000538:	f000 fe8c 	bl	8001254 <_fflush_r>
 800053c:	68a1      	ldr	r1, [r4, #8]
 800053e:	4b09      	ldr	r3, [pc, #36]	; (8000564 <cleanup_stdio+0x38>)
 8000540:	4299      	cmp	r1, r3
 8000542:	d002      	beq.n	800054a <cleanup_stdio+0x1e>
 8000544:	4620      	mov	r0, r4
 8000546:	f000 fe85 	bl	8001254 <_fflush_r>
 800054a:	68e1      	ldr	r1, [r4, #12]
 800054c:	4b06      	ldr	r3, [pc, #24]	; (8000568 <cleanup_stdio+0x3c>)
 800054e:	4299      	cmp	r1, r3
 8000550:	d004      	beq.n	800055c <cleanup_stdio+0x30>
 8000552:	4620      	mov	r0, r4
 8000554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000558:	f000 be7c 	b.w	8001254 <_fflush_r>
 800055c:	bd10      	pop	{r4, pc}
 800055e:	bf00      	nop
 8000560:	2000007c 	.word	0x2000007c
 8000564:	200000e4 	.word	0x200000e4
 8000568:	2000014c 	.word	0x2000014c

0800056c <global_stdio_init.part.0>:
 800056c:	b510      	push	{r4, lr}
 800056e:	4b0b      	ldr	r3, [pc, #44]	; (800059c <global_stdio_init.part.0+0x30>)
 8000570:	4c0b      	ldr	r4, [pc, #44]	; (80005a0 <global_stdio_init.part.0+0x34>)
 8000572:	4a0c      	ldr	r2, [pc, #48]	; (80005a4 <global_stdio_init.part.0+0x38>)
 8000574:	601a      	str	r2, [r3, #0]
 8000576:	4620      	mov	r0, r4
 8000578:	2200      	movs	r2, #0
 800057a:	2104      	movs	r1, #4
 800057c:	f7ff ff94 	bl	80004a8 <std>
 8000580:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000584:	2201      	movs	r2, #1
 8000586:	2109      	movs	r1, #9
 8000588:	f7ff ff8e 	bl	80004a8 <std>
 800058c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000590:	2202      	movs	r2, #2
 8000592:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000596:	2112      	movs	r1, #18
 8000598:	f7ff bf86 	b.w	80004a8 <std>
 800059c:	200001b4 	.word	0x200001b4
 80005a0:	2000007c 	.word	0x2000007c
 80005a4:	08000515 	.word	0x08000515

080005a8 <__sfp_lock_acquire>:
 80005a8:	4801      	ldr	r0, [pc, #4]	; (80005b0 <__sfp_lock_acquire+0x8>)
 80005aa:	f000 b9fe 	b.w	80009aa <__retarget_lock_acquire_recursive>
 80005ae:	bf00      	nop
 80005b0:	200001bd 	.word	0x200001bd

080005b4 <__sfp_lock_release>:
 80005b4:	4801      	ldr	r0, [pc, #4]	; (80005bc <__sfp_lock_release+0x8>)
 80005b6:	f000 b9f9 	b.w	80009ac <__retarget_lock_release_recursive>
 80005ba:	bf00      	nop
 80005bc:	200001bd 	.word	0x200001bd

080005c0 <__sinit>:
 80005c0:	b510      	push	{r4, lr}
 80005c2:	4604      	mov	r4, r0
 80005c4:	f7ff fff0 	bl	80005a8 <__sfp_lock_acquire>
 80005c8:	6a23      	ldr	r3, [r4, #32]
 80005ca:	b11b      	cbz	r3, 80005d4 <__sinit+0x14>
 80005cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d0:	f7ff bff0 	b.w	80005b4 <__sfp_lock_release>
 80005d4:	4b04      	ldr	r3, [pc, #16]	; (80005e8 <__sinit+0x28>)
 80005d6:	6223      	str	r3, [r4, #32]
 80005d8:	4b04      	ldr	r3, [pc, #16]	; (80005ec <__sinit+0x2c>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	2b00      	cmp	r3, #0
 80005de:	d1f5      	bne.n	80005cc <__sinit+0xc>
 80005e0:	f7ff ffc4 	bl	800056c <global_stdio_init.part.0>
 80005e4:	e7f2      	b.n	80005cc <__sinit+0xc>
 80005e6:	bf00      	nop
 80005e8:	0800052d 	.word	0x0800052d
 80005ec:	200001b4 	.word	0x200001b4

080005f0 <_fwalk_sglue>:
 80005f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005f4:	4607      	mov	r7, r0
 80005f6:	4688      	mov	r8, r1
 80005f8:	4614      	mov	r4, r2
 80005fa:	2600      	movs	r6, #0
 80005fc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000600:	f1b9 0901 	subs.w	r9, r9, #1
 8000604:	d505      	bpl.n	8000612 <_fwalk_sglue+0x22>
 8000606:	6824      	ldr	r4, [r4, #0]
 8000608:	2c00      	cmp	r4, #0
 800060a:	d1f7      	bne.n	80005fc <_fwalk_sglue+0xc>
 800060c:	4630      	mov	r0, r6
 800060e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000612:	89ab      	ldrh	r3, [r5, #12]
 8000614:	2b01      	cmp	r3, #1
 8000616:	d907      	bls.n	8000628 <_fwalk_sglue+0x38>
 8000618:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800061c:	3301      	adds	r3, #1
 800061e:	d003      	beq.n	8000628 <_fwalk_sglue+0x38>
 8000620:	4629      	mov	r1, r5
 8000622:	4638      	mov	r0, r7
 8000624:	47c0      	blx	r8
 8000626:	4306      	orrs	r6, r0
 8000628:	3568      	adds	r5, #104	; 0x68
 800062a:	e7e9      	b.n	8000600 <_fwalk_sglue+0x10>

0800062c <iprintf>:
 800062c:	b40f      	push	{r0, r1, r2, r3}
 800062e:	b507      	push	{r0, r1, r2, lr}
 8000630:	4906      	ldr	r1, [pc, #24]	; (800064c <iprintf+0x20>)
 8000632:	ab04      	add	r3, sp, #16
 8000634:	6808      	ldr	r0, [r1, #0]
 8000636:	f853 2b04 	ldr.w	r2, [r3], #4
 800063a:	6881      	ldr	r1, [r0, #8]
 800063c:	9301      	str	r3, [sp, #4]
 800063e:	f000 fad9 	bl	8000bf4 <_vfiprintf_r>
 8000642:	b003      	add	sp, #12
 8000644:	f85d eb04 	ldr.w	lr, [sp], #4
 8000648:	b004      	add	sp, #16
 800064a:	4770      	bx	lr
 800064c:	20000058 	.word	0x20000058

08000650 <_puts_r>:
 8000650:	6a03      	ldr	r3, [r0, #32]
 8000652:	b570      	push	{r4, r5, r6, lr}
 8000654:	6884      	ldr	r4, [r0, #8]
 8000656:	4605      	mov	r5, r0
 8000658:	460e      	mov	r6, r1
 800065a:	b90b      	cbnz	r3, 8000660 <_puts_r+0x10>
 800065c:	f7ff ffb0 	bl	80005c0 <__sinit>
 8000660:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000662:	07db      	lsls	r3, r3, #31
 8000664:	d405      	bmi.n	8000672 <_puts_r+0x22>
 8000666:	89a3      	ldrh	r3, [r4, #12]
 8000668:	0598      	lsls	r0, r3, #22
 800066a:	d402      	bmi.n	8000672 <_puts_r+0x22>
 800066c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800066e:	f000 f99c 	bl	80009aa <__retarget_lock_acquire_recursive>
 8000672:	89a3      	ldrh	r3, [r4, #12]
 8000674:	0719      	lsls	r1, r3, #28
 8000676:	d513      	bpl.n	80006a0 <_puts_r+0x50>
 8000678:	6923      	ldr	r3, [r4, #16]
 800067a:	b18b      	cbz	r3, 80006a0 <_puts_r+0x50>
 800067c:	3e01      	subs	r6, #1
 800067e:	68a3      	ldr	r3, [r4, #8]
 8000680:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000684:	3b01      	subs	r3, #1
 8000686:	60a3      	str	r3, [r4, #8]
 8000688:	b9e9      	cbnz	r1, 80006c6 <_puts_r+0x76>
 800068a:	2b00      	cmp	r3, #0
 800068c:	da2e      	bge.n	80006ec <_puts_r+0x9c>
 800068e:	4622      	mov	r2, r4
 8000690:	210a      	movs	r1, #10
 8000692:	4628      	mov	r0, r5
 8000694:	f000 f87b 	bl	800078e <__swbuf_r>
 8000698:	3001      	adds	r0, #1
 800069a:	d007      	beq.n	80006ac <_puts_r+0x5c>
 800069c:	250a      	movs	r5, #10
 800069e:	e007      	b.n	80006b0 <_puts_r+0x60>
 80006a0:	4621      	mov	r1, r4
 80006a2:	4628      	mov	r0, r5
 80006a4:	f000 f8b0 	bl	8000808 <__swsetup_r>
 80006a8:	2800      	cmp	r0, #0
 80006aa:	d0e7      	beq.n	800067c <_puts_r+0x2c>
 80006ac:	f04f 35ff 	mov.w	r5, #4294967295
 80006b0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006b2:	07da      	lsls	r2, r3, #31
 80006b4:	d405      	bmi.n	80006c2 <_puts_r+0x72>
 80006b6:	89a3      	ldrh	r3, [r4, #12]
 80006b8:	059b      	lsls	r3, r3, #22
 80006ba:	d402      	bmi.n	80006c2 <_puts_r+0x72>
 80006bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006be:	f000 f975 	bl	80009ac <__retarget_lock_release_recursive>
 80006c2:	4628      	mov	r0, r5
 80006c4:	bd70      	pop	{r4, r5, r6, pc}
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	da04      	bge.n	80006d4 <_puts_r+0x84>
 80006ca:	69a2      	ldr	r2, [r4, #24]
 80006cc:	429a      	cmp	r2, r3
 80006ce:	dc06      	bgt.n	80006de <_puts_r+0x8e>
 80006d0:	290a      	cmp	r1, #10
 80006d2:	d004      	beq.n	80006de <_puts_r+0x8e>
 80006d4:	6823      	ldr	r3, [r4, #0]
 80006d6:	1c5a      	adds	r2, r3, #1
 80006d8:	6022      	str	r2, [r4, #0]
 80006da:	7019      	strb	r1, [r3, #0]
 80006dc:	e7cf      	b.n	800067e <_puts_r+0x2e>
 80006de:	4622      	mov	r2, r4
 80006e0:	4628      	mov	r0, r5
 80006e2:	f000 f854 	bl	800078e <__swbuf_r>
 80006e6:	3001      	adds	r0, #1
 80006e8:	d1c9      	bne.n	800067e <_puts_r+0x2e>
 80006ea:	e7df      	b.n	80006ac <_puts_r+0x5c>
 80006ec:	6823      	ldr	r3, [r4, #0]
 80006ee:	250a      	movs	r5, #10
 80006f0:	1c5a      	adds	r2, r3, #1
 80006f2:	6022      	str	r2, [r4, #0]
 80006f4:	701d      	strb	r5, [r3, #0]
 80006f6:	e7db      	b.n	80006b0 <_puts_r+0x60>

080006f8 <puts>:
 80006f8:	4b02      	ldr	r3, [pc, #8]	; (8000704 <puts+0xc>)
 80006fa:	4601      	mov	r1, r0
 80006fc:	6818      	ldr	r0, [r3, #0]
 80006fe:	f7ff bfa7 	b.w	8000650 <_puts_r>
 8000702:	bf00      	nop
 8000704:	20000058 	.word	0x20000058

08000708 <__sread>:
 8000708:	b510      	push	{r4, lr}
 800070a:	460c      	mov	r4, r1
 800070c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000710:	f000 f8fc 	bl	800090c <_read_r>
 8000714:	2800      	cmp	r0, #0
 8000716:	bfab      	itete	ge
 8000718:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800071a:	89a3      	ldrhlt	r3, [r4, #12]
 800071c:	181b      	addge	r3, r3, r0
 800071e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000722:	bfac      	ite	ge
 8000724:	6563      	strge	r3, [r4, #84]	; 0x54
 8000726:	81a3      	strhlt	r3, [r4, #12]
 8000728:	bd10      	pop	{r4, pc}

0800072a <__swrite>:
 800072a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800072e:	461f      	mov	r7, r3
 8000730:	898b      	ldrh	r3, [r1, #12]
 8000732:	05db      	lsls	r3, r3, #23
 8000734:	4605      	mov	r5, r0
 8000736:	460c      	mov	r4, r1
 8000738:	4616      	mov	r6, r2
 800073a:	d505      	bpl.n	8000748 <__swrite+0x1e>
 800073c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000740:	2302      	movs	r3, #2
 8000742:	2200      	movs	r2, #0
 8000744:	f000 f8d0 	bl	80008e8 <_lseek_r>
 8000748:	89a3      	ldrh	r3, [r4, #12]
 800074a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800074e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000752:	81a3      	strh	r3, [r4, #12]
 8000754:	4632      	mov	r2, r6
 8000756:	463b      	mov	r3, r7
 8000758:	4628      	mov	r0, r5
 800075a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800075e:	f000 b8e7 	b.w	8000930 <_write_r>

08000762 <__sseek>:
 8000762:	b510      	push	{r4, lr}
 8000764:	460c      	mov	r4, r1
 8000766:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800076a:	f000 f8bd 	bl	80008e8 <_lseek_r>
 800076e:	1c43      	adds	r3, r0, #1
 8000770:	89a3      	ldrh	r3, [r4, #12]
 8000772:	bf15      	itete	ne
 8000774:	6560      	strne	r0, [r4, #84]	; 0x54
 8000776:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800077a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800077e:	81a3      	strheq	r3, [r4, #12]
 8000780:	bf18      	it	ne
 8000782:	81a3      	strhne	r3, [r4, #12]
 8000784:	bd10      	pop	{r4, pc}

08000786 <__sclose>:
 8000786:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800078a:	f000 b89d 	b.w	80008c8 <_close_r>

0800078e <__swbuf_r>:
 800078e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000790:	460e      	mov	r6, r1
 8000792:	4614      	mov	r4, r2
 8000794:	4605      	mov	r5, r0
 8000796:	b118      	cbz	r0, 80007a0 <__swbuf_r+0x12>
 8000798:	6a03      	ldr	r3, [r0, #32]
 800079a:	b90b      	cbnz	r3, 80007a0 <__swbuf_r+0x12>
 800079c:	f7ff ff10 	bl	80005c0 <__sinit>
 80007a0:	69a3      	ldr	r3, [r4, #24]
 80007a2:	60a3      	str	r3, [r4, #8]
 80007a4:	89a3      	ldrh	r3, [r4, #12]
 80007a6:	071a      	lsls	r2, r3, #28
 80007a8:	d525      	bpl.n	80007f6 <__swbuf_r+0x68>
 80007aa:	6923      	ldr	r3, [r4, #16]
 80007ac:	b31b      	cbz	r3, 80007f6 <__swbuf_r+0x68>
 80007ae:	6823      	ldr	r3, [r4, #0]
 80007b0:	6922      	ldr	r2, [r4, #16]
 80007b2:	1a98      	subs	r0, r3, r2
 80007b4:	6963      	ldr	r3, [r4, #20]
 80007b6:	b2f6      	uxtb	r6, r6
 80007b8:	4283      	cmp	r3, r0
 80007ba:	4637      	mov	r7, r6
 80007bc:	dc04      	bgt.n	80007c8 <__swbuf_r+0x3a>
 80007be:	4621      	mov	r1, r4
 80007c0:	4628      	mov	r0, r5
 80007c2:	f000 fd47 	bl	8001254 <_fflush_r>
 80007c6:	b9e0      	cbnz	r0, 8000802 <__swbuf_r+0x74>
 80007c8:	68a3      	ldr	r3, [r4, #8]
 80007ca:	3b01      	subs	r3, #1
 80007cc:	60a3      	str	r3, [r4, #8]
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	1c5a      	adds	r2, r3, #1
 80007d2:	6022      	str	r2, [r4, #0]
 80007d4:	701e      	strb	r6, [r3, #0]
 80007d6:	6962      	ldr	r2, [r4, #20]
 80007d8:	1c43      	adds	r3, r0, #1
 80007da:	429a      	cmp	r2, r3
 80007dc:	d004      	beq.n	80007e8 <__swbuf_r+0x5a>
 80007de:	89a3      	ldrh	r3, [r4, #12]
 80007e0:	07db      	lsls	r3, r3, #31
 80007e2:	d506      	bpl.n	80007f2 <__swbuf_r+0x64>
 80007e4:	2e0a      	cmp	r6, #10
 80007e6:	d104      	bne.n	80007f2 <__swbuf_r+0x64>
 80007e8:	4621      	mov	r1, r4
 80007ea:	4628      	mov	r0, r5
 80007ec:	f000 fd32 	bl	8001254 <_fflush_r>
 80007f0:	b938      	cbnz	r0, 8000802 <__swbuf_r+0x74>
 80007f2:	4638      	mov	r0, r7
 80007f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007f6:	4621      	mov	r1, r4
 80007f8:	4628      	mov	r0, r5
 80007fa:	f000 f805 	bl	8000808 <__swsetup_r>
 80007fe:	2800      	cmp	r0, #0
 8000800:	d0d5      	beq.n	80007ae <__swbuf_r+0x20>
 8000802:	f04f 37ff 	mov.w	r7, #4294967295
 8000806:	e7f4      	b.n	80007f2 <__swbuf_r+0x64>

08000808 <__swsetup_r>:
 8000808:	b538      	push	{r3, r4, r5, lr}
 800080a:	4b2a      	ldr	r3, [pc, #168]	; (80008b4 <__swsetup_r+0xac>)
 800080c:	4605      	mov	r5, r0
 800080e:	6818      	ldr	r0, [r3, #0]
 8000810:	460c      	mov	r4, r1
 8000812:	b118      	cbz	r0, 800081c <__swsetup_r+0x14>
 8000814:	6a03      	ldr	r3, [r0, #32]
 8000816:	b90b      	cbnz	r3, 800081c <__swsetup_r+0x14>
 8000818:	f7ff fed2 	bl	80005c0 <__sinit>
 800081c:	89a3      	ldrh	r3, [r4, #12]
 800081e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000822:	0718      	lsls	r0, r3, #28
 8000824:	d422      	bmi.n	800086c <__swsetup_r+0x64>
 8000826:	06d9      	lsls	r1, r3, #27
 8000828:	d407      	bmi.n	800083a <__swsetup_r+0x32>
 800082a:	2309      	movs	r3, #9
 800082c:	602b      	str	r3, [r5, #0]
 800082e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000832:	81a3      	strh	r3, [r4, #12]
 8000834:	f04f 30ff 	mov.w	r0, #4294967295
 8000838:	e034      	b.n	80008a4 <__swsetup_r+0x9c>
 800083a:	0758      	lsls	r0, r3, #29
 800083c:	d512      	bpl.n	8000864 <__swsetup_r+0x5c>
 800083e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000840:	b141      	cbz	r1, 8000854 <__swsetup_r+0x4c>
 8000842:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000846:	4299      	cmp	r1, r3
 8000848:	d002      	beq.n	8000850 <__swsetup_r+0x48>
 800084a:	4628      	mov	r0, r5
 800084c:	f000 f8b0 	bl	80009b0 <_free_r>
 8000850:	2300      	movs	r3, #0
 8000852:	6363      	str	r3, [r4, #52]	; 0x34
 8000854:	89a3      	ldrh	r3, [r4, #12]
 8000856:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800085a:	81a3      	strh	r3, [r4, #12]
 800085c:	2300      	movs	r3, #0
 800085e:	6063      	str	r3, [r4, #4]
 8000860:	6923      	ldr	r3, [r4, #16]
 8000862:	6023      	str	r3, [r4, #0]
 8000864:	89a3      	ldrh	r3, [r4, #12]
 8000866:	f043 0308 	orr.w	r3, r3, #8
 800086a:	81a3      	strh	r3, [r4, #12]
 800086c:	6923      	ldr	r3, [r4, #16]
 800086e:	b94b      	cbnz	r3, 8000884 <__swsetup_r+0x7c>
 8000870:	89a3      	ldrh	r3, [r4, #12]
 8000872:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000876:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800087a:	d003      	beq.n	8000884 <__swsetup_r+0x7c>
 800087c:	4621      	mov	r1, r4
 800087e:	4628      	mov	r0, r5
 8000880:	f000 fd36 	bl	80012f0 <__smakebuf_r>
 8000884:	89a0      	ldrh	r0, [r4, #12]
 8000886:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800088a:	f010 0301 	ands.w	r3, r0, #1
 800088e:	d00a      	beq.n	80008a6 <__swsetup_r+0x9e>
 8000890:	2300      	movs	r3, #0
 8000892:	60a3      	str	r3, [r4, #8]
 8000894:	6963      	ldr	r3, [r4, #20]
 8000896:	425b      	negs	r3, r3
 8000898:	61a3      	str	r3, [r4, #24]
 800089a:	6923      	ldr	r3, [r4, #16]
 800089c:	b943      	cbnz	r3, 80008b0 <__swsetup_r+0xa8>
 800089e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80008a2:	d1c4      	bne.n	800082e <__swsetup_r+0x26>
 80008a4:	bd38      	pop	{r3, r4, r5, pc}
 80008a6:	0781      	lsls	r1, r0, #30
 80008a8:	bf58      	it	pl
 80008aa:	6963      	ldrpl	r3, [r4, #20]
 80008ac:	60a3      	str	r3, [r4, #8]
 80008ae:	e7f4      	b.n	800089a <__swsetup_r+0x92>
 80008b0:	2000      	movs	r0, #0
 80008b2:	e7f7      	b.n	80008a4 <__swsetup_r+0x9c>
 80008b4:	20000058 	.word	0x20000058

080008b8 <memset>:
 80008b8:	4402      	add	r2, r0
 80008ba:	4603      	mov	r3, r0
 80008bc:	4293      	cmp	r3, r2
 80008be:	d100      	bne.n	80008c2 <memset+0xa>
 80008c0:	4770      	bx	lr
 80008c2:	f803 1b01 	strb.w	r1, [r3], #1
 80008c6:	e7f9      	b.n	80008bc <memset+0x4>

080008c8 <_close_r>:
 80008c8:	b538      	push	{r3, r4, r5, lr}
 80008ca:	4d06      	ldr	r5, [pc, #24]	; (80008e4 <_close_r+0x1c>)
 80008cc:	2300      	movs	r3, #0
 80008ce:	4604      	mov	r4, r0
 80008d0:	4608      	mov	r0, r1
 80008d2:	602b      	str	r3, [r5, #0]
 80008d4:	f7ff fd53 	bl	800037e <_close>
 80008d8:	1c43      	adds	r3, r0, #1
 80008da:	d102      	bne.n	80008e2 <_close_r+0x1a>
 80008dc:	682b      	ldr	r3, [r5, #0]
 80008de:	b103      	cbz	r3, 80008e2 <_close_r+0x1a>
 80008e0:	6023      	str	r3, [r4, #0]
 80008e2:	bd38      	pop	{r3, r4, r5, pc}
 80008e4:	200001b8 	.word	0x200001b8

080008e8 <_lseek_r>:
 80008e8:	b538      	push	{r3, r4, r5, lr}
 80008ea:	4d07      	ldr	r5, [pc, #28]	; (8000908 <_lseek_r+0x20>)
 80008ec:	4604      	mov	r4, r0
 80008ee:	4608      	mov	r0, r1
 80008f0:	4611      	mov	r1, r2
 80008f2:	2200      	movs	r2, #0
 80008f4:	602a      	str	r2, [r5, #0]
 80008f6:	461a      	mov	r2, r3
 80008f8:	f7ff fd68 	bl	80003cc <_lseek>
 80008fc:	1c43      	adds	r3, r0, #1
 80008fe:	d102      	bne.n	8000906 <_lseek_r+0x1e>
 8000900:	682b      	ldr	r3, [r5, #0]
 8000902:	b103      	cbz	r3, 8000906 <_lseek_r+0x1e>
 8000904:	6023      	str	r3, [r4, #0]
 8000906:	bd38      	pop	{r3, r4, r5, pc}
 8000908:	200001b8 	.word	0x200001b8

0800090c <_read_r>:
 800090c:	b538      	push	{r3, r4, r5, lr}
 800090e:	4d07      	ldr	r5, [pc, #28]	; (800092c <_read_r+0x20>)
 8000910:	4604      	mov	r4, r0
 8000912:	4608      	mov	r0, r1
 8000914:	4611      	mov	r1, r2
 8000916:	2200      	movs	r2, #0
 8000918:	602a      	str	r2, [r5, #0]
 800091a:	461a      	mov	r2, r3
 800091c:	f7ff fcf6 	bl	800030c <_read>
 8000920:	1c43      	adds	r3, r0, #1
 8000922:	d102      	bne.n	800092a <_read_r+0x1e>
 8000924:	682b      	ldr	r3, [r5, #0]
 8000926:	b103      	cbz	r3, 800092a <_read_r+0x1e>
 8000928:	6023      	str	r3, [r4, #0]
 800092a:	bd38      	pop	{r3, r4, r5, pc}
 800092c:	200001b8 	.word	0x200001b8

08000930 <_write_r>:
 8000930:	b538      	push	{r3, r4, r5, lr}
 8000932:	4d07      	ldr	r5, [pc, #28]	; (8000950 <_write_r+0x20>)
 8000934:	4604      	mov	r4, r0
 8000936:	4608      	mov	r0, r1
 8000938:	4611      	mov	r1, r2
 800093a:	2200      	movs	r2, #0
 800093c:	602a      	str	r2, [r5, #0]
 800093e:	461a      	mov	r2, r3
 8000940:	f7ff fd01 	bl	8000346 <_write>
 8000944:	1c43      	adds	r3, r0, #1
 8000946:	d102      	bne.n	800094e <_write_r+0x1e>
 8000948:	682b      	ldr	r3, [r5, #0]
 800094a:	b103      	cbz	r3, 800094e <_write_r+0x1e>
 800094c:	6023      	str	r3, [r4, #0]
 800094e:	bd38      	pop	{r3, r4, r5, pc}
 8000950:	200001b8 	.word	0x200001b8

08000954 <__errno>:
 8000954:	4b01      	ldr	r3, [pc, #4]	; (800095c <__errno+0x8>)
 8000956:	6818      	ldr	r0, [r3, #0]
 8000958:	4770      	bx	lr
 800095a:	bf00      	nop
 800095c:	20000058 	.word	0x20000058

08000960 <__libc_init_array>:
 8000960:	b570      	push	{r4, r5, r6, lr}
 8000962:	4d0d      	ldr	r5, [pc, #52]	; (8000998 <__libc_init_array+0x38>)
 8000964:	4c0d      	ldr	r4, [pc, #52]	; (800099c <__libc_init_array+0x3c>)
 8000966:	1b64      	subs	r4, r4, r5
 8000968:	10a4      	asrs	r4, r4, #2
 800096a:	2600      	movs	r6, #0
 800096c:	42a6      	cmp	r6, r4
 800096e:	d109      	bne.n	8000984 <__libc_init_array+0x24>
 8000970:	4d0b      	ldr	r5, [pc, #44]	; (80009a0 <__libc_init_array+0x40>)
 8000972:	4c0c      	ldr	r4, [pc, #48]	; (80009a4 <__libc_init_array+0x44>)
 8000974:	f000 fd2a 	bl	80013cc <_init>
 8000978:	1b64      	subs	r4, r4, r5
 800097a:	10a4      	asrs	r4, r4, #2
 800097c:	2600      	movs	r6, #0
 800097e:	42a6      	cmp	r6, r4
 8000980:	d105      	bne.n	800098e <__libc_init_array+0x2e>
 8000982:	bd70      	pop	{r4, r5, r6, pc}
 8000984:	f855 3b04 	ldr.w	r3, [r5], #4
 8000988:	4798      	blx	r3
 800098a:	3601      	adds	r6, #1
 800098c:	e7ee      	b.n	800096c <__libc_init_array+0xc>
 800098e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000992:	4798      	blx	r3
 8000994:	3601      	adds	r6, #1
 8000996:	e7f2      	b.n	800097e <__libc_init_array+0x1e>
 8000998:	08001438 	.word	0x08001438
 800099c:	08001438 	.word	0x08001438
 80009a0:	08001438 	.word	0x08001438
 80009a4:	0800143c 	.word	0x0800143c

080009a8 <__retarget_lock_init_recursive>:
 80009a8:	4770      	bx	lr

080009aa <__retarget_lock_acquire_recursive>:
 80009aa:	4770      	bx	lr

080009ac <__retarget_lock_release_recursive>:
 80009ac:	4770      	bx	lr
	...

080009b0 <_free_r>:
 80009b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80009b2:	2900      	cmp	r1, #0
 80009b4:	d044      	beq.n	8000a40 <_free_r+0x90>
 80009b6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009ba:	9001      	str	r0, [sp, #4]
 80009bc:	2b00      	cmp	r3, #0
 80009be:	f1a1 0404 	sub.w	r4, r1, #4
 80009c2:	bfb8      	it	lt
 80009c4:	18e4      	addlt	r4, r4, r3
 80009c6:	f000 f8df 	bl	8000b88 <__malloc_lock>
 80009ca:	4a1e      	ldr	r2, [pc, #120]	; (8000a44 <_free_r+0x94>)
 80009cc:	9801      	ldr	r0, [sp, #4]
 80009ce:	6813      	ldr	r3, [r2, #0]
 80009d0:	b933      	cbnz	r3, 80009e0 <_free_r+0x30>
 80009d2:	6063      	str	r3, [r4, #4]
 80009d4:	6014      	str	r4, [r2, #0]
 80009d6:	b003      	add	sp, #12
 80009d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80009dc:	f000 b8da 	b.w	8000b94 <__malloc_unlock>
 80009e0:	42a3      	cmp	r3, r4
 80009e2:	d908      	bls.n	80009f6 <_free_r+0x46>
 80009e4:	6825      	ldr	r5, [r4, #0]
 80009e6:	1961      	adds	r1, r4, r5
 80009e8:	428b      	cmp	r3, r1
 80009ea:	bf01      	itttt	eq
 80009ec:	6819      	ldreq	r1, [r3, #0]
 80009ee:	685b      	ldreq	r3, [r3, #4]
 80009f0:	1949      	addeq	r1, r1, r5
 80009f2:	6021      	streq	r1, [r4, #0]
 80009f4:	e7ed      	b.n	80009d2 <_free_r+0x22>
 80009f6:	461a      	mov	r2, r3
 80009f8:	685b      	ldr	r3, [r3, #4]
 80009fa:	b10b      	cbz	r3, 8000a00 <_free_r+0x50>
 80009fc:	42a3      	cmp	r3, r4
 80009fe:	d9fa      	bls.n	80009f6 <_free_r+0x46>
 8000a00:	6811      	ldr	r1, [r2, #0]
 8000a02:	1855      	adds	r5, r2, r1
 8000a04:	42a5      	cmp	r5, r4
 8000a06:	d10b      	bne.n	8000a20 <_free_r+0x70>
 8000a08:	6824      	ldr	r4, [r4, #0]
 8000a0a:	4421      	add	r1, r4
 8000a0c:	1854      	adds	r4, r2, r1
 8000a0e:	42a3      	cmp	r3, r4
 8000a10:	6011      	str	r1, [r2, #0]
 8000a12:	d1e0      	bne.n	80009d6 <_free_r+0x26>
 8000a14:	681c      	ldr	r4, [r3, #0]
 8000a16:	685b      	ldr	r3, [r3, #4]
 8000a18:	6053      	str	r3, [r2, #4]
 8000a1a:	440c      	add	r4, r1
 8000a1c:	6014      	str	r4, [r2, #0]
 8000a1e:	e7da      	b.n	80009d6 <_free_r+0x26>
 8000a20:	d902      	bls.n	8000a28 <_free_r+0x78>
 8000a22:	230c      	movs	r3, #12
 8000a24:	6003      	str	r3, [r0, #0]
 8000a26:	e7d6      	b.n	80009d6 <_free_r+0x26>
 8000a28:	6825      	ldr	r5, [r4, #0]
 8000a2a:	1961      	adds	r1, r4, r5
 8000a2c:	428b      	cmp	r3, r1
 8000a2e:	bf04      	itt	eq
 8000a30:	6819      	ldreq	r1, [r3, #0]
 8000a32:	685b      	ldreq	r3, [r3, #4]
 8000a34:	6063      	str	r3, [r4, #4]
 8000a36:	bf04      	itt	eq
 8000a38:	1949      	addeq	r1, r1, r5
 8000a3a:	6021      	streq	r1, [r4, #0]
 8000a3c:	6054      	str	r4, [r2, #4]
 8000a3e:	e7ca      	b.n	80009d6 <_free_r+0x26>
 8000a40:	b003      	add	sp, #12
 8000a42:	bd30      	pop	{r4, r5, pc}
 8000a44:	200001c0 	.word	0x200001c0

08000a48 <sbrk_aligned>:
 8000a48:	b570      	push	{r4, r5, r6, lr}
 8000a4a:	4e0e      	ldr	r6, [pc, #56]	; (8000a84 <sbrk_aligned+0x3c>)
 8000a4c:	460c      	mov	r4, r1
 8000a4e:	6831      	ldr	r1, [r6, #0]
 8000a50:	4605      	mov	r5, r0
 8000a52:	b911      	cbnz	r1, 8000a5a <sbrk_aligned+0x12>
 8000a54:	f000 fcaa 	bl	80013ac <_sbrk_r>
 8000a58:	6030      	str	r0, [r6, #0]
 8000a5a:	4621      	mov	r1, r4
 8000a5c:	4628      	mov	r0, r5
 8000a5e:	f000 fca5 	bl	80013ac <_sbrk_r>
 8000a62:	1c43      	adds	r3, r0, #1
 8000a64:	d00a      	beq.n	8000a7c <sbrk_aligned+0x34>
 8000a66:	1cc4      	adds	r4, r0, #3
 8000a68:	f024 0403 	bic.w	r4, r4, #3
 8000a6c:	42a0      	cmp	r0, r4
 8000a6e:	d007      	beq.n	8000a80 <sbrk_aligned+0x38>
 8000a70:	1a21      	subs	r1, r4, r0
 8000a72:	4628      	mov	r0, r5
 8000a74:	f000 fc9a 	bl	80013ac <_sbrk_r>
 8000a78:	3001      	adds	r0, #1
 8000a7a:	d101      	bne.n	8000a80 <sbrk_aligned+0x38>
 8000a7c:	f04f 34ff 	mov.w	r4, #4294967295
 8000a80:	4620      	mov	r0, r4
 8000a82:	bd70      	pop	{r4, r5, r6, pc}
 8000a84:	200001c4 	.word	0x200001c4

08000a88 <_malloc_r>:
 8000a88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a8c:	1ccd      	adds	r5, r1, #3
 8000a8e:	f025 0503 	bic.w	r5, r5, #3
 8000a92:	3508      	adds	r5, #8
 8000a94:	2d0c      	cmp	r5, #12
 8000a96:	bf38      	it	cc
 8000a98:	250c      	movcc	r5, #12
 8000a9a:	2d00      	cmp	r5, #0
 8000a9c:	4607      	mov	r7, r0
 8000a9e:	db01      	blt.n	8000aa4 <_malloc_r+0x1c>
 8000aa0:	42a9      	cmp	r1, r5
 8000aa2:	d905      	bls.n	8000ab0 <_malloc_r+0x28>
 8000aa4:	230c      	movs	r3, #12
 8000aa6:	603b      	str	r3, [r7, #0]
 8000aa8:	2600      	movs	r6, #0
 8000aaa:	4630      	mov	r0, r6
 8000aac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ab0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000b84 <_malloc_r+0xfc>
 8000ab4:	f000 f868 	bl	8000b88 <__malloc_lock>
 8000ab8:	f8d8 3000 	ldr.w	r3, [r8]
 8000abc:	461c      	mov	r4, r3
 8000abe:	bb5c      	cbnz	r4, 8000b18 <_malloc_r+0x90>
 8000ac0:	4629      	mov	r1, r5
 8000ac2:	4638      	mov	r0, r7
 8000ac4:	f7ff ffc0 	bl	8000a48 <sbrk_aligned>
 8000ac8:	1c43      	adds	r3, r0, #1
 8000aca:	4604      	mov	r4, r0
 8000acc:	d155      	bne.n	8000b7a <_malloc_r+0xf2>
 8000ace:	f8d8 4000 	ldr.w	r4, [r8]
 8000ad2:	4626      	mov	r6, r4
 8000ad4:	2e00      	cmp	r6, #0
 8000ad6:	d145      	bne.n	8000b64 <_malloc_r+0xdc>
 8000ad8:	2c00      	cmp	r4, #0
 8000ada:	d048      	beq.n	8000b6e <_malloc_r+0xe6>
 8000adc:	6823      	ldr	r3, [r4, #0]
 8000ade:	4631      	mov	r1, r6
 8000ae0:	4638      	mov	r0, r7
 8000ae2:	eb04 0903 	add.w	r9, r4, r3
 8000ae6:	f000 fc61 	bl	80013ac <_sbrk_r>
 8000aea:	4581      	cmp	r9, r0
 8000aec:	d13f      	bne.n	8000b6e <_malloc_r+0xe6>
 8000aee:	6821      	ldr	r1, [r4, #0]
 8000af0:	1a6d      	subs	r5, r5, r1
 8000af2:	4629      	mov	r1, r5
 8000af4:	4638      	mov	r0, r7
 8000af6:	f7ff ffa7 	bl	8000a48 <sbrk_aligned>
 8000afa:	3001      	adds	r0, #1
 8000afc:	d037      	beq.n	8000b6e <_malloc_r+0xe6>
 8000afe:	6823      	ldr	r3, [r4, #0]
 8000b00:	442b      	add	r3, r5
 8000b02:	6023      	str	r3, [r4, #0]
 8000b04:	f8d8 3000 	ldr.w	r3, [r8]
 8000b08:	2b00      	cmp	r3, #0
 8000b0a:	d038      	beq.n	8000b7e <_malloc_r+0xf6>
 8000b0c:	685a      	ldr	r2, [r3, #4]
 8000b0e:	42a2      	cmp	r2, r4
 8000b10:	d12b      	bne.n	8000b6a <_malloc_r+0xe2>
 8000b12:	2200      	movs	r2, #0
 8000b14:	605a      	str	r2, [r3, #4]
 8000b16:	e00f      	b.n	8000b38 <_malloc_r+0xb0>
 8000b18:	6822      	ldr	r2, [r4, #0]
 8000b1a:	1b52      	subs	r2, r2, r5
 8000b1c:	d41f      	bmi.n	8000b5e <_malloc_r+0xd6>
 8000b1e:	2a0b      	cmp	r2, #11
 8000b20:	d917      	bls.n	8000b52 <_malloc_r+0xca>
 8000b22:	1961      	adds	r1, r4, r5
 8000b24:	42a3      	cmp	r3, r4
 8000b26:	6025      	str	r5, [r4, #0]
 8000b28:	bf18      	it	ne
 8000b2a:	6059      	strne	r1, [r3, #4]
 8000b2c:	6863      	ldr	r3, [r4, #4]
 8000b2e:	bf08      	it	eq
 8000b30:	f8c8 1000 	streq.w	r1, [r8]
 8000b34:	5162      	str	r2, [r4, r5]
 8000b36:	604b      	str	r3, [r1, #4]
 8000b38:	4638      	mov	r0, r7
 8000b3a:	f104 060b 	add.w	r6, r4, #11
 8000b3e:	f000 f829 	bl	8000b94 <__malloc_unlock>
 8000b42:	f026 0607 	bic.w	r6, r6, #7
 8000b46:	1d23      	adds	r3, r4, #4
 8000b48:	1af2      	subs	r2, r6, r3
 8000b4a:	d0ae      	beq.n	8000aaa <_malloc_r+0x22>
 8000b4c:	1b9b      	subs	r3, r3, r6
 8000b4e:	50a3      	str	r3, [r4, r2]
 8000b50:	e7ab      	b.n	8000aaa <_malloc_r+0x22>
 8000b52:	42a3      	cmp	r3, r4
 8000b54:	6862      	ldr	r2, [r4, #4]
 8000b56:	d1dd      	bne.n	8000b14 <_malloc_r+0x8c>
 8000b58:	f8c8 2000 	str.w	r2, [r8]
 8000b5c:	e7ec      	b.n	8000b38 <_malloc_r+0xb0>
 8000b5e:	4623      	mov	r3, r4
 8000b60:	6864      	ldr	r4, [r4, #4]
 8000b62:	e7ac      	b.n	8000abe <_malloc_r+0x36>
 8000b64:	4634      	mov	r4, r6
 8000b66:	6876      	ldr	r6, [r6, #4]
 8000b68:	e7b4      	b.n	8000ad4 <_malloc_r+0x4c>
 8000b6a:	4613      	mov	r3, r2
 8000b6c:	e7cc      	b.n	8000b08 <_malloc_r+0x80>
 8000b6e:	230c      	movs	r3, #12
 8000b70:	603b      	str	r3, [r7, #0]
 8000b72:	4638      	mov	r0, r7
 8000b74:	f000 f80e 	bl	8000b94 <__malloc_unlock>
 8000b78:	e797      	b.n	8000aaa <_malloc_r+0x22>
 8000b7a:	6025      	str	r5, [r4, #0]
 8000b7c:	e7dc      	b.n	8000b38 <_malloc_r+0xb0>
 8000b7e:	605b      	str	r3, [r3, #4]
 8000b80:	deff      	udf	#255	; 0xff
 8000b82:	bf00      	nop
 8000b84:	200001c0 	.word	0x200001c0

08000b88 <__malloc_lock>:
 8000b88:	4801      	ldr	r0, [pc, #4]	; (8000b90 <__malloc_lock+0x8>)
 8000b8a:	f7ff bf0e 	b.w	80009aa <__retarget_lock_acquire_recursive>
 8000b8e:	bf00      	nop
 8000b90:	200001bc 	.word	0x200001bc

08000b94 <__malloc_unlock>:
 8000b94:	4801      	ldr	r0, [pc, #4]	; (8000b9c <__malloc_unlock+0x8>)
 8000b96:	f7ff bf09 	b.w	80009ac <__retarget_lock_release_recursive>
 8000b9a:	bf00      	nop
 8000b9c:	200001bc 	.word	0x200001bc

08000ba0 <__sfputc_r>:
 8000ba0:	6893      	ldr	r3, [r2, #8]
 8000ba2:	3b01      	subs	r3, #1
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	b410      	push	{r4}
 8000ba8:	6093      	str	r3, [r2, #8]
 8000baa:	da08      	bge.n	8000bbe <__sfputc_r+0x1e>
 8000bac:	6994      	ldr	r4, [r2, #24]
 8000bae:	42a3      	cmp	r3, r4
 8000bb0:	db01      	blt.n	8000bb6 <__sfputc_r+0x16>
 8000bb2:	290a      	cmp	r1, #10
 8000bb4:	d103      	bne.n	8000bbe <__sfputc_r+0x1e>
 8000bb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bba:	f7ff bde8 	b.w	800078e <__swbuf_r>
 8000bbe:	6813      	ldr	r3, [r2, #0]
 8000bc0:	1c58      	adds	r0, r3, #1
 8000bc2:	6010      	str	r0, [r2, #0]
 8000bc4:	7019      	strb	r1, [r3, #0]
 8000bc6:	4608      	mov	r0, r1
 8000bc8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bcc:	4770      	bx	lr

08000bce <__sfputs_r>:
 8000bce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bd0:	4606      	mov	r6, r0
 8000bd2:	460f      	mov	r7, r1
 8000bd4:	4614      	mov	r4, r2
 8000bd6:	18d5      	adds	r5, r2, r3
 8000bd8:	42ac      	cmp	r4, r5
 8000bda:	d101      	bne.n	8000be0 <__sfputs_r+0x12>
 8000bdc:	2000      	movs	r0, #0
 8000bde:	e007      	b.n	8000bf0 <__sfputs_r+0x22>
 8000be0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000be4:	463a      	mov	r2, r7
 8000be6:	4630      	mov	r0, r6
 8000be8:	f7ff ffda 	bl	8000ba0 <__sfputc_r>
 8000bec:	1c43      	adds	r3, r0, #1
 8000bee:	d1f3      	bne.n	8000bd8 <__sfputs_r+0xa>
 8000bf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000bf4 <_vfiprintf_r>:
 8000bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bf8:	460d      	mov	r5, r1
 8000bfa:	b09d      	sub	sp, #116	; 0x74
 8000bfc:	4614      	mov	r4, r2
 8000bfe:	4698      	mov	r8, r3
 8000c00:	4606      	mov	r6, r0
 8000c02:	b118      	cbz	r0, 8000c0c <_vfiprintf_r+0x18>
 8000c04:	6a03      	ldr	r3, [r0, #32]
 8000c06:	b90b      	cbnz	r3, 8000c0c <_vfiprintf_r+0x18>
 8000c08:	f7ff fcda 	bl	80005c0 <__sinit>
 8000c0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c0e:	07d9      	lsls	r1, r3, #31
 8000c10:	d405      	bmi.n	8000c1e <_vfiprintf_r+0x2a>
 8000c12:	89ab      	ldrh	r3, [r5, #12]
 8000c14:	059a      	lsls	r2, r3, #22
 8000c16:	d402      	bmi.n	8000c1e <_vfiprintf_r+0x2a>
 8000c18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c1a:	f7ff fec6 	bl	80009aa <__retarget_lock_acquire_recursive>
 8000c1e:	89ab      	ldrh	r3, [r5, #12]
 8000c20:	071b      	lsls	r3, r3, #28
 8000c22:	d501      	bpl.n	8000c28 <_vfiprintf_r+0x34>
 8000c24:	692b      	ldr	r3, [r5, #16]
 8000c26:	b99b      	cbnz	r3, 8000c50 <_vfiprintf_r+0x5c>
 8000c28:	4629      	mov	r1, r5
 8000c2a:	4630      	mov	r0, r6
 8000c2c:	f7ff fdec 	bl	8000808 <__swsetup_r>
 8000c30:	b170      	cbz	r0, 8000c50 <_vfiprintf_r+0x5c>
 8000c32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c34:	07dc      	lsls	r4, r3, #31
 8000c36:	d504      	bpl.n	8000c42 <_vfiprintf_r+0x4e>
 8000c38:	f04f 30ff 	mov.w	r0, #4294967295
 8000c3c:	b01d      	add	sp, #116	; 0x74
 8000c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c42:	89ab      	ldrh	r3, [r5, #12]
 8000c44:	0598      	lsls	r0, r3, #22
 8000c46:	d4f7      	bmi.n	8000c38 <_vfiprintf_r+0x44>
 8000c48:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c4a:	f7ff feaf 	bl	80009ac <__retarget_lock_release_recursive>
 8000c4e:	e7f3      	b.n	8000c38 <_vfiprintf_r+0x44>
 8000c50:	2300      	movs	r3, #0
 8000c52:	9309      	str	r3, [sp, #36]	; 0x24
 8000c54:	2320      	movs	r3, #32
 8000c56:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000c5a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c5e:	2330      	movs	r3, #48	; 0x30
 8000c60:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000e14 <_vfiprintf_r+0x220>
 8000c64:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000c68:	f04f 0901 	mov.w	r9, #1
 8000c6c:	4623      	mov	r3, r4
 8000c6e:	469a      	mov	sl, r3
 8000c70:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c74:	b10a      	cbz	r2, 8000c7a <_vfiprintf_r+0x86>
 8000c76:	2a25      	cmp	r2, #37	; 0x25
 8000c78:	d1f9      	bne.n	8000c6e <_vfiprintf_r+0x7a>
 8000c7a:	ebba 0b04 	subs.w	fp, sl, r4
 8000c7e:	d00b      	beq.n	8000c98 <_vfiprintf_r+0xa4>
 8000c80:	465b      	mov	r3, fp
 8000c82:	4622      	mov	r2, r4
 8000c84:	4629      	mov	r1, r5
 8000c86:	4630      	mov	r0, r6
 8000c88:	f7ff ffa1 	bl	8000bce <__sfputs_r>
 8000c8c:	3001      	adds	r0, #1
 8000c8e:	f000 80a9 	beq.w	8000de4 <_vfiprintf_r+0x1f0>
 8000c92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000c94:	445a      	add	r2, fp
 8000c96:	9209      	str	r2, [sp, #36]	; 0x24
 8000c98:	f89a 3000 	ldrb.w	r3, [sl]
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	f000 80a1 	beq.w	8000de4 <_vfiprintf_r+0x1f0>
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	f04f 32ff 	mov.w	r2, #4294967295
 8000ca8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000cac:	f10a 0a01 	add.w	sl, sl, #1
 8000cb0:	9304      	str	r3, [sp, #16]
 8000cb2:	9307      	str	r3, [sp, #28]
 8000cb4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000cb8:	931a      	str	r3, [sp, #104]	; 0x68
 8000cba:	4654      	mov	r4, sl
 8000cbc:	2205      	movs	r2, #5
 8000cbe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cc2:	4854      	ldr	r0, [pc, #336]	; (8000e14 <_vfiprintf_r+0x220>)
 8000cc4:	f7ff fa84 	bl	80001d0 <memchr>
 8000cc8:	9a04      	ldr	r2, [sp, #16]
 8000cca:	b9d8      	cbnz	r0, 8000d04 <_vfiprintf_r+0x110>
 8000ccc:	06d1      	lsls	r1, r2, #27
 8000cce:	bf44      	itt	mi
 8000cd0:	2320      	movmi	r3, #32
 8000cd2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000cd6:	0713      	lsls	r3, r2, #28
 8000cd8:	bf44      	itt	mi
 8000cda:	232b      	movmi	r3, #43	; 0x2b
 8000cdc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ce0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ce4:	2b2a      	cmp	r3, #42	; 0x2a
 8000ce6:	d015      	beq.n	8000d14 <_vfiprintf_r+0x120>
 8000ce8:	9a07      	ldr	r2, [sp, #28]
 8000cea:	4654      	mov	r4, sl
 8000cec:	2000      	movs	r0, #0
 8000cee:	f04f 0c0a 	mov.w	ip, #10
 8000cf2:	4621      	mov	r1, r4
 8000cf4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000cf8:	3b30      	subs	r3, #48	; 0x30
 8000cfa:	2b09      	cmp	r3, #9
 8000cfc:	d94d      	bls.n	8000d9a <_vfiprintf_r+0x1a6>
 8000cfe:	b1b0      	cbz	r0, 8000d2e <_vfiprintf_r+0x13a>
 8000d00:	9207      	str	r2, [sp, #28]
 8000d02:	e014      	b.n	8000d2e <_vfiprintf_r+0x13a>
 8000d04:	eba0 0308 	sub.w	r3, r0, r8
 8000d08:	fa09 f303 	lsl.w	r3, r9, r3
 8000d0c:	4313      	orrs	r3, r2
 8000d0e:	9304      	str	r3, [sp, #16]
 8000d10:	46a2      	mov	sl, r4
 8000d12:	e7d2      	b.n	8000cba <_vfiprintf_r+0xc6>
 8000d14:	9b03      	ldr	r3, [sp, #12]
 8000d16:	1d19      	adds	r1, r3, #4
 8000d18:	681b      	ldr	r3, [r3, #0]
 8000d1a:	9103      	str	r1, [sp, #12]
 8000d1c:	2b00      	cmp	r3, #0
 8000d1e:	bfbb      	ittet	lt
 8000d20:	425b      	neglt	r3, r3
 8000d22:	f042 0202 	orrlt.w	r2, r2, #2
 8000d26:	9307      	strge	r3, [sp, #28]
 8000d28:	9307      	strlt	r3, [sp, #28]
 8000d2a:	bfb8      	it	lt
 8000d2c:	9204      	strlt	r2, [sp, #16]
 8000d2e:	7823      	ldrb	r3, [r4, #0]
 8000d30:	2b2e      	cmp	r3, #46	; 0x2e
 8000d32:	d10c      	bne.n	8000d4e <_vfiprintf_r+0x15a>
 8000d34:	7863      	ldrb	r3, [r4, #1]
 8000d36:	2b2a      	cmp	r3, #42	; 0x2a
 8000d38:	d134      	bne.n	8000da4 <_vfiprintf_r+0x1b0>
 8000d3a:	9b03      	ldr	r3, [sp, #12]
 8000d3c:	1d1a      	adds	r2, r3, #4
 8000d3e:	681b      	ldr	r3, [r3, #0]
 8000d40:	9203      	str	r2, [sp, #12]
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	bfb8      	it	lt
 8000d46:	f04f 33ff 	movlt.w	r3, #4294967295
 8000d4a:	3402      	adds	r4, #2
 8000d4c:	9305      	str	r3, [sp, #20]
 8000d4e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000e24 <_vfiprintf_r+0x230>
 8000d52:	7821      	ldrb	r1, [r4, #0]
 8000d54:	2203      	movs	r2, #3
 8000d56:	4650      	mov	r0, sl
 8000d58:	f7ff fa3a 	bl	80001d0 <memchr>
 8000d5c:	b138      	cbz	r0, 8000d6e <_vfiprintf_r+0x17a>
 8000d5e:	9b04      	ldr	r3, [sp, #16]
 8000d60:	eba0 000a 	sub.w	r0, r0, sl
 8000d64:	2240      	movs	r2, #64	; 0x40
 8000d66:	4082      	lsls	r2, r0
 8000d68:	4313      	orrs	r3, r2
 8000d6a:	3401      	adds	r4, #1
 8000d6c:	9304      	str	r3, [sp, #16]
 8000d6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d72:	4829      	ldr	r0, [pc, #164]	; (8000e18 <_vfiprintf_r+0x224>)
 8000d74:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000d78:	2206      	movs	r2, #6
 8000d7a:	f7ff fa29 	bl	80001d0 <memchr>
 8000d7e:	2800      	cmp	r0, #0
 8000d80:	d03f      	beq.n	8000e02 <_vfiprintf_r+0x20e>
 8000d82:	4b26      	ldr	r3, [pc, #152]	; (8000e1c <_vfiprintf_r+0x228>)
 8000d84:	bb1b      	cbnz	r3, 8000dce <_vfiprintf_r+0x1da>
 8000d86:	9b03      	ldr	r3, [sp, #12]
 8000d88:	3307      	adds	r3, #7
 8000d8a:	f023 0307 	bic.w	r3, r3, #7
 8000d8e:	3308      	adds	r3, #8
 8000d90:	9303      	str	r3, [sp, #12]
 8000d92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000d94:	443b      	add	r3, r7
 8000d96:	9309      	str	r3, [sp, #36]	; 0x24
 8000d98:	e768      	b.n	8000c6c <_vfiprintf_r+0x78>
 8000d9a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d9e:	460c      	mov	r4, r1
 8000da0:	2001      	movs	r0, #1
 8000da2:	e7a6      	b.n	8000cf2 <_vfiprintf_r+0xfe>
 8000da4:	2300      	movs	r3, #0
 8000da6:	3401      	adds	r4, #1
 8000da8:	9305      	str	r3, [sp, #20]
 8000daa:	4619      	mov	r1, r3
 8000dac:	f04f 0c0a 	mov.w	ip, #10
 8000db0:	4620      	mov	r0, r4
 8000db2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000db6:	3a30      	subs	r2, #48	; 0x30
 8000db8:	2a09      	cmp	r2, #9
 8000dba:	d903      	bls.n	8000dc4 <_vfiprintf_r+0x1d0>
 8000dbc:	2b00      	cmp	r3, #0
 8000dbe:	d0c6      	beq.n	8000d4e <_vfiprintf_r+0x15a>
 8000dc0:	9105      	str	r1, [sp, #20]
 8000dc2:	e7c4      	b.n	8000d4e <_vfiprintf_r+0x15a>
 8000dc4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000dc8:	4604      	mov	r4, r0
 8000dca:	2301      	movs	r3, #1
 8000dcc:	e7f0      	b.n	8000db0 <_vfiprintf_r+0x1bc>
 8000dce:	ab03      	add	r3, sp, #12
 8000dd0:	9300      	str	r3, [sp, #0]
 8000dd2:	462a      	mov	r2, r5
 8000dd4:	4b12      	ldr	r3, [pc, #72]	; (8000e20 <_vfiprintf_r+0x22c>)
 8000dd6:	a904      	add	r1, sp, #16
 8000dd8:	4630      	mov	r0, r6
 8000dda:	f3af 8000 	nop.w
 8000dde:	4607      	mov	r7, r0
 8000de0:	1c78      	adds	r0, r7, #1
 8000de2:	d1d6      	bne.n	8000d92 <_vfiprintf_r+0x19e>
 8000de4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000de6:	07d9      	lsls	r1, r3, #31
 8000de8:	d405      	bmi.n	8000df6 <_vfiprintf_r+0x202>
 8000dea:	89ab      	ldrh	r3, [r5, #12]
 8000dec:	059a      	lsls	r2, r3, #22
 8000dee:	d402      	bmi.n	8000df6 <_vfiprintf_r+0x202>
 8000df0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000df2:	f7ff fddb 	bl	80009ac <__retarget_lock_release_recursive>
 8000df6:	89ab      	ldrh	r3, [r5, #12]
 8000df8:	065b      	lsls	r3, r3, #25
 8000dfa:	f53f af1d 	bmi.w	8000c38 <_vfiprintf_r+0x44>
 8000dfe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e00:	e71c      	b.n	8000c3c <_vfiprintf_r+0x48>
 8000e02:	ab03      	add	r3, sp, #12
 8000e04:	9300      	str	r3, [sp, #0]
 8000e06:	462a      	mov	r2, r5
 8000e08:	4b05      	ldr	r3, [pc, #20]	; (8000e20 <_vfiprintf_r+0x22c>)
 8000e0a:	a904      	add	r1, sp, #16
 8000e0c:	4630      	mov	r0, r6
 8000e0e:	f000 f879 	bl	8000f04 <_printf_i>
 8000e12:	e7e4      	b.n	8000dde <_vfiprintf_r+0x1ea>
 8000e14:	08001403 	.word	0x08001403
 8000e18:	0800140d 	.word	0x0800140d
 8000e1c:	00000000 	.word	0x00000000
 8000e20:	08000bcf 	.word	0x08000bcf
 8000e24:	08001409 	.word	0x08001409

08000e28 <_printf_common>:
 8000e28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e2c:	4616      	mov	r6, r2
 8000e2e:	4699      	mov	r9, r3
 8000e30:	688a      	ldr	r2, [r1, #8]
 8000e32:	690b      	ldr	r3, [r1, #16]
 8000e34:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000e38:	4293      	cmp	r3, r2
 8000e3a:	bfb8      	it	lt
 8000e3c:	4613      	movlt	r3, r2
 8000e3e:	6033      	str	r3, [r6, #0]
 8000e40:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000e44:	4607      	mov	r7, r0
 8000e46:	460c      	mov	r4, r1
 8000e48:	b10a      	cbz	r2, 8000e4e <_printf_common+0x26>
 8000e4a:	3301      	adds	r3, #1
 8000e4c:	6033      	str	r3, [r6, #0]
 8000e4e:	6823      	ldr	r3, [r4, #0]
 8000e50:	0699      	lsls	r1, r3, #26
 8000e52:	bf42      	ittt	mi
 8000e54:	6833      	ldrmi	r3, [r6, #0]
 8000e56:	3302      	addmi	r3, #2
 8000e58:	6033      	strmi	r3, [r6, #0]
 8000e5a:	6825      	ldr	r5, [r4, #0]
 8000e5c:	f015 0506 	ands.w	r5, r5, #6
 8000e60:	d106      	bne.n	8000e70 <_printf_common+0x48>
 8000e62:	f104 0a19 	add.w	sl, r4, #25
 8000e66:	68e3      	ldr	r3, [r4, #12]
 8000e68:	6832      	ldr	r2, [r6, #0]
 8000e6a:	1a9b      	subs	r3, r3, r2
 8000e6c:	42ab      	cmp	r3, r5
 8000e6e:	dc26      	bgt.n	8000ebe <_printf_common+0x96>
 8000e70:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000e74:	1e13      	subs	r3, r2, #0
 8000e76:	6822      	ldr	r2, [r4, #0]
 8000e78:	bf18      	it	ne
 8000e7a:	2301      	movne	r3, #1
 8000e7c:	0692      	lsls	r2, r2, #26
 8000e7e:	d42b      	bmi.n	8000ed8 <_printf_common+0xb0>
 8000e80:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000e84:	4649      	mov	r1, r9
 8000e86:	4638      	mov	r0, r7
 8000e88:	47c0      	blx	r8
 8000e8a:	3001      	adds	r0, #1
 8000e8c:	d01e      	beq.n	8000ecc <_printf_common+0xa4>
 8000e8e:	6823      	ldr	r3, [r4, #0]
 8000e90:	6922      	ldr	r2, [r4, #16]
 8000e92:	f003 0306 	and.w	r3, r3, #6
 8000e96:	2b04      	cmp	r3, #4
 8000e98:	bf02      	ittt	eq
 8000e9a:	68e5      	ldreq	r5, [r4, #12]
 8000e9c:	6833      	ldreq	r3, [r6, #0]
 8000e9e:	1aed      	subeq	r5, r5, r3
 8000ea0:	68a3      	ldr	r3, [r4, #8]
 8000ea2:	bf0c      	ite	eq
 8000ea4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ea8:	2500      	movne	r5, #0
 8000eaa:	4293      	cmp	r3, r2
 8000eac:	bfc4      	itt	gt
 8000eae:	1a9b      	subgt	r3, r3, r2
 8000eb0:	18ed      	addgt	r5, r5, r3
 8000eb2:	2600      	movs	r6, #0
 8000eb4:	341a      	adds	r4, #26
 8000eb6:	42b5      	cmp	r5, r6
 8000eb8:	d11a      	bne.n	8000ef0 <_printf_common+0xc8>
 8000eba:	2000      	movs	r0, #0
 8000ebc:	e008      	b.n	8000ed0 <_printf_common+0xa8>
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	4652      	mov	r2, sl
 8000ec2:	4649      	mov	r1, r9
 8000ec4:	4638      	mov	r0, r7
 8000ec6:	47c0      	blx	r8
 8000ec8:	3001      	adds	r0, #1
 8000eca:	d103      	bne.n	8000ed4 <_printf_common+0xac>
 8000ecc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ed0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed4:	3501      	adds	r5, #1
 8000ed6:	e7c6      	b.n	8000e66 <_printf_common+0x3e>
 8000ed8:	18e1      	adds	r1, r4, r3
 8000eda:	1c5a      	adds	r2, r3, #1
 8000edc:	2030      	movs	r0, #48	; 0x30
 8000ede:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000ee2:	4422      	add	r2, r4
 8000ee4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ee8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000eec:	3302      	adds	r3, #2
 8000eee:	e7c7      	b.n	8000e80 <_printf_common+0x58>
 8000ef0:	2301      	movs	r3, #1
 8000ef2:	4622      	mov	r2, r4
 8000ef4:	4649      	mov	r1, r9
 8000ef6:	4638      	mov	r0, r7
 8000ef8:	47c0      	blx	r8
 8000efa:	3001      	adds	r0, #1
 8000efc:	d0e6      	beq.n	8000ecc <_printf_common+0xa4>
 8000efe:	3601      	adds	r6, #1
 8000f00:	e7d9      	b.n	8000eb6 <_printf_common+0x8e>
	...

08000f04 <_printf_i>:
 8000f04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f08:	7e0f      	ldrb	r7, [r1, #24]
 8000f0a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000f0c:	2f78      	cmp	r7, #120	; 0x78
 8000f0e:	4691      	mov	r9, r2
 8000f10:	4680      	mov	r8, r0
 8000f12:	460c      	mov	r4, r1
 8000f14:	469a      	mov	sl, r3
 8000f16:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000f1a:	d807      	bhi.n	8000f2c <_printf_i+0x28>
 8000f1c:	2f62      	cmp	r7, #98	; 0x62
 8000f1e:	d80a      	bhi.n	8000f36 <_printf_i+0x32>
 8000f20:	2f00      	cmp	r7, #0
 8000f22:	f000 80d4 	beq.w	80010ce <_printf_i+0x1ca>
 8000f26:	2f58      	cmp	r7, #88	; 0x58
 8000f28:	f000 80c0 	beq.w	80010ac <_printf_i+0x1a8>
 8000f2c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000f30:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000f34:	e03a      	b.n	8000fac <_printf_i+0xa8>
 8000f36:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000f3a:	2b15      	cmp	r3, #21
 8000f3c:	d8f6      	bhi.n	8000f2c <_printf_i+0x28>
 8000f3e:	a101      	add	r1, pc, #4	; (adr r1, 8000f44 <_printf_i+0x40>)
 8000f40:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f44:	08000f9d 	.word	0x08000f9d
 8000f48:	08000fb1 	.word	0x08000fb1
 8000f4c:	08000f2d 	.word	0x08000f2d
 8000f50:	08000f2d 	.word	0x08000f2d
 8000f54:	08000f2d 	.word	0x08000f2d
 8000f58:	08000f2d 	.word	0x08000f2d
 8000f5c:	08000fb1 	.word	0x08000fb1
 8000f60:	08000f2d 	.word	0x08000f2d
 8000f64:	08000f2d 	.word	0x08000f2d
 8000f68:	08000f2d 	.word	0x08000f2d
 8000f6c:	08000f2d 	.word	0x08000f2d
 8000f70:	080010b5 	.word	0x080010b5
 8000f74:	08000fdd 	.word	0x08000fdd
 8000f78:	0800106f 	.word	0x0800106f
 8000f7c:	08000f2d 	.word	0x08000f2d
 8000f80:	08000f2d 	.word	0x08000f2d
 8000f84:	080010d7 	.word	0x080010d7
 8000f88:	08000f2d 	.word	0x08000f2d
 8000f8c:	08000fdd 	.word	0x08000fdd
 8000f90:	08000f2d 	.word	0x08000f2d
 8000f94:	08000f2d 	.word	0x08000f2d
 8000f98:	08001077 	.word	0x08001077
 8000f9c:	682b      	ldr	r3, [r5, #0]
 8000f9e:	1d1a      	adds	r2, r3, #4
 8000fa0:	681b      	ldr	r3, [r3, #0]
 8000fa2:	602a      	str	r2, [r5, #0]
 8000fa4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fa8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000fac:	2301      	movs	r3, #1
 8000fae:	e09f      	b.n	80010f0 <_printf_i+0x1ec>
 8000fb0:	6820      	ldr	r0, [r4, #0]
 8000fb2:	682b      	ldr	r3, [r5, #0]
 8000fb4:	0607      	lsls	r7, r0, #24
 8000fb6:	f103 0104 	add.w	r1, r3, #4
 8000fba:	6029      	str	r1, [r5, #0]
 8000fbc:	d501      	bpl.n	8000fc2 <_printf_i+0xbe>
 8000fbe:	681e      	ldr	r6, [r3, #0]
 8000fc0:	e003      	b.n	8000fca <_printf_i+0xc6>
 8000fc2:	0646      	lsls	r6, r0, #25
 8000fc4:	d5fb      	bpl.n	8000fbe <_printf_i+0xba>
 8000fc6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000fca:	2e00      	cmp	r6, #0
 8000fcc:	da03      	bge.n	8000fd6 <_printf_i+0xd2>
 8000fce:	232d      	movs	r3, #45	; 0x2d
 8000fd0:	4276      	negs	r6, r6
 8000fd2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fd6:	485a      	ldr	r0, [pc, #360]	; (8001140 <_printf_i+0x23c>)
 8000fd8:	230a      	movs	r3, #10
 8000fda:	e012      	b.n	8001002 <_printf_i+0xfe>
 8000fdc:	682b      	ldr	r3, [r5, #0]
 8000fde:	6820      	ldr	r0, [r4, #0]
 8000fe0:	1d19      	adds	r1, r3, #4
 8000fe2:	6029      	str	r1, [r5, #0]
 8000fe4:	0605      	lsls	r5, r0, #24
 8000fe6:	d501      	bpl.n	8000fec <_printf_i+0xe8>
 8000fe8:	681e      	ldr	r6, [r3, #0]
 8000fea:	e002      	b.n	8000ff2 <_printf_i+0xee>
 8000fec:	0641      	lsls	r1, r0, #25
 8000fee:	d5fb      	bpl.n	8000fe8 <_printf_i+0xe4>
 8000ff0:	881e      	ldrh	r6, [r3, #0]
 8000ff2:	4853      	ldr	r0, [pc, #332]	; (8001140 <_printf_i+0x23c>)
 8000ff4:	2f6f      	cmp	r7, #111	; 0x6f
 8000ff6:	bf0c      	ite	eq
 8000ff8:	2308      	moveq	r3, #8
 8000ffa:	230a      	movne	r3, #10
 8000ffc:	2100      	movs	r1, #0
 8000ffe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001002:	6865      	ldr	r5, [r4, #4]
 8001004:	60a5      	str	r5, [r4, #8]
 8001006:	2d00      	cmp	r5, #0
 8001008:	bfa2      	ittt	ge
 800100a:	6821      	ldrge	r1, [r4, #0]
 800100c:	f021 0104 	bicge.w	r1, r1, #4
 8001010:	6021      	strge	r1, [r4, #0]
 8001012:	b90e      	cbnz	r6, 8001018 <_printf_i+0x114>
 8001014:	2d00      	cmp	r5, #0
 8001016:	d04b      	beq.n	80010b0 <_printf_i+0x1ac>
 8001018:	4615      	mov	r5, r2
 800101a:	fbb6 f1f3 	udiv	r1, r6, r3
 800101e:	fb03 6711 	mls	r7, r3, r1, r6
 8001022:	5dc7      	ldrb	r7, [r0, r7]
 8001024:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001028:	4637      	mov	r7, r6
 800102a:	42bb      	cmp	r3, r7
 800102c:	460e      	mov	r6, r1
 800102e:	d9f4      	bls.n	800101a <_printf_i+0x116>
 8001030:	2b08      	cmp	r3, #8
 8001032:	d10b      	bne.n	800104c <_printf_i+0x148>
 8001034:	6823      	ldr	r3, [r4, #0]
 8001036:	07de      	lsls	r6, r3, #31
 8001038:	d508      	bpl.n	800104c <_printf_i+0x148>
 800103a:	6923      	ldr	r3, [r4, #16]
 800103c:	6861      	ldr	r1, [r4, #4]
 800103e:	4299      	cmp	r1, r3
 8001040:	bfde      	ittt	le
 8001042:	2330      	movle	r3, #48	; 0x30
 8001044:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001048:	f105 35ff 	addle.w	r5, r5, #4294967295
 800104c:	1b52      	subs	r2, r2, r5
 800104e:	6122      	str	r2, [r4, #16]
 8001050:	f8cd a000 	str.w	sl, [sp]
 8001054:	464b      	mov	r3, r9
 8001056:	aa03      	add	r2, sp, #12
 8001058:	4621      	mov	r1, r4
 800105a:	4640      	mov	r0, r8
 800105c:	f7ff fee4 	bl	8000e28 <_printf_common>
 8001060:	3001      	adds	r0, #1
 8001062:	d14a      	bne.n	80010fa <_printf_i+0x1f6>
 8001064:	f04f 30ff 	mov.w	r0, #4294967295
 8001068:	b004      	add	sp, #16
 800106a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800106e:	6823      	ldr	r3, [r4, #0]
 8001070:	f043 0320 	orr.w	r3, r3, #32
 8001074:	6023      	str	r3, [r4, #0]
 8001076:	4833      	ldr	r0, [pc, #204]	; (8001144 <_printf_i+0x240>)
 8001078:	2778      	movs	r7, #120	; 0x78
 800107a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800107e:	6823      	ldr	r3, [r4, #0]
 8001080:	6829      	ldr	r1, [r5, #0]
 8001082:	061f      	lsls	r7, r3, #24
 8001084:	f851 6b04 	ldr.w	r6, [r1], #4
 8001088:	d402      	bmi.n	8001090 <_printf_i+0x18c>
 800108a:	065f      	lsls	r7, r3, #25
 800108c:	bf48      	it	mi
 800108e:	b2b6      	uxthmi	r6, r6
 8001090:	07df      	lsls	r7, r3, #31
 8001092:	bf48      	it	mi
 8001094:	f043 0320 	orrmi.w	r3, r3, #32
 8001098:	6029      	str	r1, [r5, #0]
 800109a:	bf48      	it	mi
 800109c:	6023      	strmi	r3, [r4, #0]
 800109e:	b91e      	cbnz	r6, 80010a8 <_printf_i+0x1a4>
 80010a0:	6823      	ldr	r3, [r4, #0]
 80010a2:	f023 0320 	bic.w	r3, r3, #32
 80010a6:	6023      	str	r3, [r4, #0]
 80010a8:	2310      	movs	r3, #16
 80010aa:	e7a7      	b.n	8000ffc <_printf_i+0xf8>
 80010ac:	4824      	ldr	r0, [pc, #144]	; (8001140 <_printf_i+0x23c>)
 80010ae:	e7e4      	b.n	800107a <_printf_i+0x176>
 80010b0:	4615      	mov	r5, r2
 80010b2:	e7bd      	b.n	8001030 <_printf_i+0x12c>
 80010b4:	682b      	ldr	r3, [r5, #0]
 80010b6:	6826      	ldr	r6, [r4, #0]
 80010b8:	6961      	ldr	r1, [r4, #20]
 80010ba:	1d18      	adds	r0, r3, #4
 80010bc:	6028      	str	r0, [r5, #0]
 80010be:	0635      	lsls	r5, r6, #24
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	d501      	bpl.n	80010c8 <_printf_i+0x1c4>
 80010c4:	6019      	str	r1, [r3, #0]
 80010c6:	e002      	b.n	80010ce <_printf_i+0x1ca>
 80010c8:	0670      	lsls	r0, r6, #25
 80010ca:	d5fb      	bpl.n	80010c4 <_printf_i+0x1c0>
 80010cc:	8019      	strh	r1, [r3, #0]
 80010ce:	2300      	movs	r3, #0
 80010d0:	6123      	str	r3, [r4, #16]
 80010d2:	4615      	mov	r5, r2
 80010d4:	e7bc      	b.n	8001050 <_printf_i+0x14c>
 80010d6:	682b      	ldr	r3, [r5, #0]
 80010d8:	1d1a      	adds	r2, r3, #4
 80010da:	602a      	str	r2, [r5, #0]
 80010dc:	681d      	ldr	r5, [r3, #0]
 80010de:	6862      	ldr	r2, [r4, #4]
 80010e0:	2100      	movs	r1, #0
 80010e2:	4628      	mov	r0, r5
 80010e4:	f7ff f874 	bl	80001d0 <memchr>
 80010e8:	b108      	cbz	r0, 80010ee <_printf_i+0x1ea>
 80010ea:	1b40      	subs	r0, r0, r5
 80010ec:	6060      	str	r0, [r4, #4]
 80010ee:	6863      	ldr	r3, [r4, #4]
 80010f0:	6123      	str	r3, [r4, #16]
 80010f2:	2300      	movs	r3, #0
 80010f4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010f8:	e7aa      	b.n	8001050 <_printf_i+0x14c>
 80010fa:	6923      	ldr	r3, [r4, #16]
 80010fc:	462a      	mov	r2, r5
 80010fe:	4649      	mov	r1, r9
 8001100:	4640      	mov	r0, r8
 8001102:	47d0      	blx	sl
 8001104:	3001      	adds	r0, #1
 8001106:	d0ad      	beq.n	8001064 <_printf_i+0x160>
 8001108:	6823      	ldr	r3, [r4, #0]
 800110a:	079b      	lsls	r3, r3, #30
 800110c:	d413      	bmi.n	8001136 <_printf_i+0x232>
 800110e:	68e0      	ldr	r0, [r4, #12]
 8001110:	9b03      	ldr	r3, [sp, #12]
 8001112:	4298      	cmp	r0, r3
 8001114:	bfb8      	it	lt
 8001116:	4618      	movlt	r0, r3
 8001118:	e7a6      	b.n	8001068 <_printf_i+0x164>
 800111a:	2301      	movs	r3, #1
 800111c:	4632      	mov	r2, r6
 800111e:	4649      	mov	r1, r9
 8001120:	4640      	mov	r0, r8
 8001122:	47d0      	blx	sl
 8001124:	3001      	adds	r0, #1
 8001126:	d09d      	beq.n	8001064 <_printf_i+0x160>
 8001128:	3501      	adds	r5, #1
 800112a:	68e3      	ldr	r3, [r4, #12]
 800112c:	9903      	ldr	r1, [sp, #12]
 800112e:	1a5b      	subs	r3, r3, r1
 8001130:	42ab      	cmp	r3, r5
 8001132:	dcf2      	bgt.n	800111a <_printf_i+0x216>
 8001134:	e7eb      	b.n	800110e <_printf_i+0x20a>
 8001136:	2500      	movs	r5, #0
 8001138:	f104 0619 	add.w	r6, r4, #25
 800113c:	e7f5      	b.n	800112a <_printf_i+0x226>
 800113e:	bf00      	nop
 8001140:	08001414 	.word	0x08001414
 8001144:	08001425 	.word	0x08001425

08001148 <__sflush_r>:
 8001148:	898a      	ldrh	r2, [r1, #12]
 800114a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800114e:	4605      	mov	r5, r0
 8001150:	0710      	lsls	r0, r2, #28
 8001152:	460c      	mov	r4, r1
 8001154:	d458      	bmi.n	8001208 <__sflush_r+0xc0>
 8001156:	684b      	ldr	r3, [r1, #4]
 8001158:	2b00      	cmp	r3, #0
 800115a:	dc05      	bgt.n	8001168 <__sflush_r+0x20>
 800115c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800115e:	2b00      	cmp	r3, #0
 8001160:	dc02      	bgt.n	8001168 <__sflush_r+0x20>
 8001162:	2000      	movs	r0, #0
 8001164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001168:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800116a:	2e00      	cmp	r6, #0
 800116c:	d0f9      	beq.n	8001162 <__sflush_r+0x1a>
 800116e:	2300      	movs	r3, #0
 8001170:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001174:	682f      	ldr	r7, [r5, #0]
 8001176:	6a21      	ldr	r1, [r4, #32]
 8001178:	602b      	str	r3, [r5, #0]
 800117a:	d032      	beq.n	80011e2 <__sflush_r+0x9a>
 800117c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800117e:	89a3      	ldrh	r3, [r4, #12]
 8001180:	075a      	lsls	r2, r3, #29
 8001182:	d505      	bpl.n	8001190 <__sflush_r+0x48>
 8001184:	6863      	ldr	r3, [r4, #4]
 8001186:	1ac0      	subs	r0, r0, r3
 8001188:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800118a:	b10b      	cbz	r3, 8001190 <__sflush_r+0x48>
 800118c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800118e:	1ac0      	subs	r0, r0, r3
 8001190:	2300      	movs	r3, #0
 8001192:	4602      	mov	r2, r0
 8001194:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001196:	6a21      	ldr	r1, [r4, #32]
 8001198:	4628      	mov	r0, r5
 800119a:	47b0      	blx	r6
 800119c:	1c43      	adds	r3, r0, #1
 800119e:	89a3      	ldrh	r3, [r4, #12]
 80011a0:	d106      	bne.n	80011b0 <__sflush_r+0x68>
 80011a2:	6829      	ldr	r1, [r5, #0]
 80011a4:	291d      	cmp	r1, #29
 80011a6:	d82b      	bhi.n	8001200 <__sflush_r+0xb8>
 80011a8:	4a29      	ldr	r2, [pc, #164]	; (8001250 <__sflush_r+0x108>)
 80011aa:	410a      	asrs	r2, r1
 80011ac:	07d6      	lsls	r6, r2, #31
 80011ae:	d427      	bmi.n	8001200 <__sflush_r+0xb8>
 80011b0:	2200      	movs	r2, #0
 80011b2:	6062      	str	r2, [r4, #4]
 80011b4:	04d9      	lsls	r1, r3, #19
 80011b6:	6922      	ldr	r2, [r4, #16]
 80011b8:	6022      	str	r2, [r4, #0]
 80011ba:	d504      	bpl.n	80011c6 <__sflush_r+0x7e>
 80011bc:	1c42      	adds	r2, r0, #1
 80011be:	d101      	bne.n	80011c4 <__sflush_r+0x7c>
 80011c0:	682b      	ldr	r3, [r5, #0]
 80011c2:	b903      	cbnz	r3, 80011c6 <__sflush_r+0x7e>
 80011c4:	6560      	str	r0, [r4, #84]	; 0x54
 80011c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011c8:	602f      	str	r7, [r5, #0]
 80011ca:	2900      	cmp	r1, #0
 80011cc:	d0c9      	beq.n	8001162 <__sflush_r+0x1a>
 80011ce:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011d2:	4299      	cmp	r1, r3
 80011d4:	d002      	beq.n	80011dc <__sflush_r+0x94>
 80011d6:	4628      	mov	r0, r5
 80011d8:	f7ff fbea 	bl	80009b0 <_free_r>
 80011dc:	2000      	movs	r0, #0
 80011de:	6360      	str	r0, [r4, #52]	; 0x34
 80011e0:	e7c0      	b.n	8001164 <__sflush_r+0x1c>
 80011e2:	2301      	movs	r3, #1
 80011e4:	4628      	mov	r0, r5
 80011e6:	47b0      	blx	r6
 80011e8:	1c41      	adds	r1, r0, #1
 80011ea:	d1c8      	bne.n	800117e <__sflush_r+0x36>
 80011ec:	682b      	ldr	r3, [r5, #0]
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	d0c5      	beq.n	800117e <__sflush_r+0x36>
 80011f2:	2b1d      	cmp	r3, #29
 80011f4:	d001      	beq.n	80011fa <__sflush_r+0xb2>
 80011f6:	2b16      	cmp	r3, #22
 80011f8:	d101      	bne.n	80011fe <__sflush_r+0xb6>
 80011fa:	602f      	str	r7, [r5, #0]
 80011fc:	e7b1      	b.n	8001162 <__sflush_r+0x1a>
 80011fe:	89a3      	ldrh	r3, [r4, #12]
 8001200:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001204:	81a3      	strh	r3, [r4, #12]
 8001206:	e7ad      	b.n	8001164 <__sflush_r+0x1c>
 8001208:	690f      	ldr	r7, [r1, #16]
 800120a:	2f00      	cmp	r7, #0
 800120c:	d0a9      	beq.n	8001162 <__sflush_r+0x1a>
 800120e:	0793      	lsls	r3, r2, #30
 8001210:	680e      	ldr	r6, [r1, #0]
 8001212:	bf08      	it	eq
 8001214:	694b      	ldreq	r3, [r1, #20]
 8001216:	600f      	str	r7, [r1, #0]
 8001218:	bf18      	it	ne
 800121a:	2300      	movne	r3, #0
 800121c:	eba6 0807 	sub.w	r8, r6, r7
 8001220:	608b      	str	r3, [r1, #8]
 8001222:	f1b8 0f00 	cmp.w	r8, #0
 8001226:	dd9c      	ble.n	8001162 <__sflush_r+0x1a>
 8001228:	6a21      	ldr	r1, [r4, #32]
 800122a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800122c:	4643      	mov	r3, r8
 800122e:	463a      	mov	r2, r7
 8001230:	4628      	mov	r0, r5
 8001232:	47b0      	blx	r6
 8001234:	2800      	cmp	r0, #0
 8001236:	dc06      	bgt.n	8001246 <__sflush_r+0xfe>
 8001238:	89a3      	ldrh	r3, [r4, #12]
 800123a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800123e:	81a3      	strh	r3, [r4, #12]
 8001240:	f04f 30ff 	mov.w	r0, #4294967295
 8001244:	e78e      	b.n	8001164 <__sflush_r+0x1c>
 8001246:	4407      	add	r7, r0
 8001248:	eba8 0800 	sub.w	r8, r8, r0
 800124c:	e7e9      	b.n	8001222 <__sflush_r+0xda>
 800124e:	bf00      	nop
 8001250:	dfbffffe 	.word	0xdfbffffe

08001254 <_fflush_r>:
 8001254:	b538      	push	{r3, r4, r5, lr}
 8001256:	690b      	ldr	r3, [r1, #16]
 8001258:	4605      	mov	r5, r0
 800125a:	460c      	mov	r4, r1
 800125c:	b913      	cbnz	r3, 8001264 <_fflush_r+0x10>
 800125e:	2500      	movs	r5, #0
 8001260:	4628      	mov	r0, r5
 8001262:	bd38      	pop	{r3, r4, r5, pc}
 8001264:	b118      	cbz	r0, 800126e <_fflush_r+0x1a>
 8001266:	6a03      	ldr	r3, [r0, #32]
 8001268:	b90b      	cbnz	r3, 800126e <_fflush_r+0x1a>
 800126a:	f7ff f9a9 	bl	80005c0 <__sinit>
 800126e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001272:	2b00      	cmp	r3, #0
 8001274:	d0f3      	beq.n	800125e <_fflush_r+0xa>
 8001276:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001278:	07d0      	lsls	r0, r2, #31
 800127a:	d404      	bmi.n	8001286 <_fflush_r+0x32>
 800127c:	0599      	lsls	r1, r3, #22
 800127e:	d402      	bmi.n	8001286 <_fflush_r+0x32>
 8001280:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001282:	f7ff fb92 	bl	80009aa <__retarget_lock_acquire_recursive>
 8001286:	4628      	mov	r0, r5
 8001288:	4621      	mov	r1, r4
 800128a:	f7ff ff5d 	bl	8001148 <__sflush_r>
 800128e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001290:	07da      	lsls	r2, r3, #31
 8001292:	4605      	mov	r5, r0
 8001294:	d4e4      	bmi.n	8001260 <_fflush_r+0xc>
 8001296:	89a3      	ldrh	r3, [r4, #12]
 8001298:	059b      	lsls	r3, r3, #22
 800129a:	d4e1      	bmi.n	8001260 <_fflush_r+0xc>
 800129c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800129e:	f7ff fb85 	bl	80009ac <__retarget_lock_release_recursive>
 80012a2:	e7dd      	b.n	8001260 <_fflush_r+0xc>

080012a4 <__swhatbuf_r>:
 80012a4:	b570      	push	{r4, r5, r6, lr}
 80012a6:	460c      	mov	r4, r1
 80012a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012ac:	2900      	cmp	r1, #0
 80012ae:	b096      	sub	sp, #88	; 0x58
 80012b0:	4615      	mov	r5, r2
 80012b2:	461e      	mov	r6, r3
 80012b4:	da0d      	bge.n	80012d2 <__swhatbuf_r+0x2e>
 80012b6:	89a3      	ldrh	r3, [r4, #12]
 80012b8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012bc:	f04f 0100 	mov.w	r1, #0
 80012c0:	bf0c      	ite	eq
 80012c2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012c6:	2340      	movne	r3, #64	; 0x40
 80012c8:	2000      	movs	r0, #0
 80012ca:	6031      	str	r1, [r6, #0]
 80012cc:	602b      	str	r3, [r5, #0]
 80012ce:	b016      	add	sp, #88	; 0x58
 80012d0:	bd70      	pop	{r4, r5, r6, pc}
 80012d2:	466a      	mov	r2, sp
 80012d4:	f000 f848 	bl	8001368 <_fstat_r>
 80012d8:	2800      	cmp	r0, #0
 80012da:	dbec      	blt.n	80012b6 <__swhatbuf_r+0x12>
 80012dc:	9901      	ldr	r1, [sp, #4]
 80012de:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012e2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012e6:	4259      	negs	r1, r3
 80012e8:	4159      	adcs	r1, r3
 80012ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012ee:	e7eb      	b.n	80012c8 <__swhatbuf_r+0x24>

080012f0 <__smakebuf_r>:
 80012f0:	898b      	ldrh	r3, [r1, #12]
 80012f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012f4:	079d      	lsls	r5, r3, #30
 80012f6:	4606      	mov	r6, r0
 80012f8:	460c      	mov	r4, r1
 80012fa:	d507      	bpl.n	800130c <__smakebuf_r+0x1c>
 80012fc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001300:	6023      	str	r3, [r4, #0]
 8001302:	6123      	str	r3, [r4, #16]
 8001304:	2301      	movs	r3, #1
 8001306:	6163      	str	r3, [r4, #20]
 8001308:	b002      	add	sp, #8
 800130a:	bd70      	pop	{r4, r5, r6, pc}
 800130c:	ab01      	add	r3, sp, #4
 800130e:	466a      	mov	r2, sp
 8001310:	f7ff ffc8 	bl	80012a4 <__swhatbuf_r>
 8001314:	9900      	ldr	r1, [sp, #0]
 8001316:	4605      	mov	r5, r0
 8001318:	4630      	mov	r0, r6
 800131a:	f7ff fbb5 	bl	8000a88 <_malloc_r>
 800131e:	b948      	cbnz	r0, 8001334 <__smakebuf_r+0x44>
 8001320:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001324:	059a      	lsls	r2, r3, #22
 8001326:	d4ef      	bmi.n	8001308 <__smakebuf_r+0x18>
 8001328:	f023 0303 	bic.w	r3, r3, #3
 800132c:	f043 0302 	orr.w	r3, r3, #2
 8001330:	81a3      	strh	r3, [r4, #12]
 8001332:	e7e3      	b.n	80012fc <__smakebuf_r+0xc>
 8001334:	89a3      	ldrh	r3, [r4, #12]
 8001336:	6020      	str	r0, [r4, #0]
 8001338:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800133c:	81a3      	strh	r3, [r4, #12]
 800133e:	9b00      	ldr	r3, [sp, #0]
 8001340:	6163      	str	r3, [r4, #20]
 8001342:	9b01      	ldr	r3, [sp, #4]
 8001344:	6120      	str	r0, [r4, #16]
 8001346:	b15b      	cbz	r3, 8001360 <__smakebuf_r+0x70>
 8001348:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800134c:	4630      	mov	r0, r6
 800134e:	f000 f81d 	bl	800138c <_isatty_r>
 8001352:	b128      	cbz	r0, 8001360 <__smakebuf_r+0x70>
 8001354:	89a3      	ldrh	r3, [r4, #12]
 8001356:	f023 0303 	bic.w	r3, r3, #3
 800135a:	f043 0301 	orr.w	r3, r3, #1
 800135e:	81a3      	strh	r3, [r4, #12]
 8001360:	89a3      	ldrh	r3, [r4, #12]
 8001362:	431d      	orrs	r5, r3
 8001364:	81a5      	strh	r5, [r4, #12]
 8001366:	e7cf      	b.n	8001308 <__smakebuf_r+0x18>

08001368 <_fstat_r>:
 8001368:	b538      	push	{r3, r4, r5, lr}
 800136a:	4d07      	ldr	r5, [pc, #28]	; (8001388 <_fstat_r+0x20>)
 800136c:	2300      	movs	r3, #0
 800136e:	4604      	mov	r4, r0
 8001370:	4608      	mov	r0, r1
 8001372:	4611      	mov	r1, r2
 8001374:	602b      	str	r3, [r5, #0]
 8001376:	f7ff f80e 	bl	8000396 <_fstat>
 800137a:	1c43      	adds	r3, r0, #1
 800137c:	d102      	bne.n	8001384 <_fstat_r+0x1c>
 800137e:	682b      	ldr	r3, [r5, #0]
 8001380:	b103      	cbz	r3, 8001384 <_fstat_r+0x1c>
 8001382:	6023      	str	r3, [r4, #0]
 8001384:	bd38      	pop	{r3, r4, r5, pc}
 8001386:	bf00      	nop
 8001388:	200001b8 	.word	0x200001b8

0800138c <_isatty_r>:
 800138c:	b538      	push	{r3, r4, r5, lr}
 800138e:	4d06      	ldr	r5, [pc, #24]	; (80013a8 <_isatty_r+0x1c>)
 8001390:	2300      	movs	r3, #0
 8001392:	4604      	mov	r4, r0
 8001394:	4608      	mov	r0, r1
 8001396:	602b      	str	r3, [r5, #0]
 8001398:	f7ff f80d 	bl	80003b6 <_isatty>
 800139c:	1c43      	adds	r3, r0, #1
 800139e:	d102      	bne.n	80013a6 <_isatty_r+0x1a>
 80013a0:	682b      	ldr	r3, [r5, #0]
 80013a2:	b103      	cbz	r3, 80013a6 <_isatty_r+0x1a>
 80013a4:	6023      	str	r3, [r4, #0]
 80013a6:	bd38      	pop	{r3, r4, r5, pc}
 80013a8:	200001b8 	.word	0x200001b8

080013ac <_sbrk_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4d06      	ldr	r5, [pc, #24]	; (80013c8 <_sbrk_r+0x1c>)
 80013b0:	2300      	movs	r3, #0
 80013b2:	4604      	mov	r4, r0
 80013b4:	4608      	mov	r0, r1
 80013b6:	602b      	str	r3, [r5, #0]
 80013b8:	f7ff f816 	bl	80003e8 <_sbrk>
 80013bc:	1c43      	adds	r3, r0, #1
 80013be:	d102      	bne.n	80013c6 <_sbrk_r+0x1a>
 80013c0:	682b      	ldr	r3, [r5, #0]
 80013c2:	b103      	cbz	r3, 80013c6 <_sbrk_r+0x1a>
 80013c4:	6023      	str	r3, [r4, #0]
 80013c6:	bd38      	pop	{r3, r4, r5, pc}
 80013c8:	200001b8 	.word	0x200001b8

080013cc <_init>:
 80013cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ce:	bf00      	nop
 80013d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d2:	bc08      	pop	{r3}
 80013d4:	469e      	mov	lr, r3
 80013d6:	4770      	bx	lr

080013d8 <_fini>:
 80013d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013da:	bf00      	nop
 80013dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013de:	bc08      	pop	{r3}
 80013e0:	469e      	mov	lr, r3
 80013e2:	4770      	bx	lr
